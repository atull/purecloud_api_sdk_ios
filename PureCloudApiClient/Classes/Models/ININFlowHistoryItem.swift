//
// ININFlowHistoryItem.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Information about one flow history item */
public class ININFlowHistoryItem: JSONEncodable {
    public enum ININHistoryEventType: String { 
        case FlowInstanceStart = "FLOW_INSTANCE_START"
        case FlowInstanceGoto = "FLOW_INSTANCE_GOTO"
        case FlowInstanceTerminate = "FLOW_INSTANCE_TERMINATE"
        case FlowInstanceEnd = "FLOW_INSTANCE_END"
        case TaskInstanceStart = "TASK_INSTANCE_START"
        case TaskInstanceEnd = "TASK_INSTANCE_END"
        case WorkItemInstanceSave = "WORK_ITEM_INSTANCE_SAVE"
        case WorkItemInstanceAcquire = "WORK_ITEM_INSTANCE_ACQUIRE"
        case WorkItemInstanceSubmit = "WORK_ITEM_INSTANCE_SUBMIT"
        case WorkItemInstanceOffer = "WORK_ITEM_INSTANCE_OFFER"
        case WorkItemInstanceReassign = "WORK_ITEM_INSTANCE_REASSIGN"
        case FlowInstanceError = "FLOW_INSTANCE_ERROR"
        case FlowInstanceRetry = "FLOW_INSTANCE_RETRY"
    }
    /** The time when the history item occurred. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var historyEventTime: NSDate?
    /** The State sequence that applies to the history event, if applicable. */
    public var state: ININFlowState?
    /** Information about the work item associated with the history event, if applicable. */
    public var workItem: ININWorkItem?
    /** The user associated with this history event, if applicable. */
    public var user: ININUser?
    /** The queue associated with this history event, if applicable. */
    public var queue: ININQueue?
    /** Data elements associated with this history event. */
    public var historyEventData: [ININFlowHistoryDataItem]?
    /** The type of the history event being reported. */
    public var historyEventType: ININHistoryEventType?
    /** Whether or not the flow item was successful (if a &#39;notification&#39; event this will default to true) */
    public var success: Bool?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["historyEventTime"] = self.historyEventTime?.encodeToJSON()
        nillableDictionary["state"] = self.state?.encodeToJSON()
        nillableDictionary["workItem"] = self.workItem?.encodeToJSON()
        nillableDictionary["user"] = self.user?.encodeToJSON()
        nillableDictionary["queue"] = self.queue?.encodeToJSON()
        nillableDictionary["historyEventData"] = self.historyEventData?.encodeToJSON()
        nillableDictionary["historyEventType"] = self.historyEventType?.rawValue
        nillableDictionary["success"] = self.success
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
