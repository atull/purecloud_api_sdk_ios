//
// ININEmailMessage.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININEmailMessage: JSONEncodable {
    /** The globally unique identifier for the object. */
    public var id: String?
    public var name: String?
    /** The recipients of the email message. */
    public var to: [ININEmailAddress]?
    /** The recipients that were copied on the email message. */
    public var cc: [ININEmailAddress]?
    /** The recipients that were blind copied on the email message. */
    public var bcc: [ININEmailAddress]?
    /** The sender of the email message. */
    public var from: ININEmailAddress?
    /** The subject of the email message. */
    public var subject: String?
    /** The attachments of the email message. */
    public var attachments: [ININAttachment]?
    /** The text body of the email message. */
    public var textBody: String?
    /** The html body of the email message. */
    public var htmlBody: String?
    /** The time when the message was received or sent. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var time: NSDate?
    /** The URI for this object */
    public var selfUri: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["to"] = self.to?.encodeToJSON()
        nillableDictionary["cc"] = self.cc?.encodeToJSON()
        nillableDictionary["bcc"] = self.bcc?.encodeToJSON()
        nillableDictionary["from"] = self.from?.encodeToJSON()
        nillableDictionary["subject"] = self.subject
        nillableDictionary["attachments"] = self.attachments?.encodeToJSON()
        nillableDictionary["textBody"] = self.textBody
        nillableDictionary["htmlBody"] = self.htmlBody
        nillableDictionary["time"] = self.time?.encodeToJSON()
        nillableDictionary["selfUri"] = self.selfUri
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
