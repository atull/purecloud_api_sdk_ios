//
// ININHealthCheckInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININHealthCheckInfo: JSONEncodable {
    public enum ININStatus: String { 
        case Ok = "OK"
        case Created = "CREATED"
        case Accepted = "ACCEPTED"
        case NoContent = "NO_CONTENT"
        case ResetContent = "RESET_CONTENT"
        case PartialContent = "PARTIAL_CONTENT"
        case MovedPermanently = "MOVED_PERMANENTLY"
        case Found = "FOUND"
        case SeeOther = "SEE_OTHER"
        case NotModified = "NOT_MODIFIED"
        case UseProxy = "USE_PROXY"
        case TemporaryRedirect = "TEMPORARY_REDIRECT"
        case BadRequest = "BAD_REQUEST"
        case Unauthorized = "UNAUTHORIZED"
        case PaymentRequired = "PAYMENT_REQUIRED"
        case Forbidden = "FORBIDDEN"
        case NotFound = "NOT_FOUND"
        case MethodNotAllowed = "METHOD_NOT_ALLOWED"
        case NotAcceptable = "NOT_ACCEPTABLE"
        case ProxyAuthenticationRequired = "PROXY_AUTHENTICATION_REQUIRED"
        case RequestTimeout = "REQUEST_TIMEOUT"
        case Conflict = "CONFLICT"
        case Gone = "GONE"
        case LengthRequired = "LENGTH_REQUIRED"
        case PreconditionFailed = "PRECONDITION_FAILED"
        case RequestEntityTooLarge = "REQUEST_ENTITY_TOO_LARGE"
        case RequestUriTooLong = "REQUEST_URI_TOO_LONG"
        case UnsupportedMediaType = "UNSUPPORTED_MEDIA_TYPE"
        case RequestedRangeNotSatisfiable = "REQUESTED_RANGE_NOT_SATISFIABLE"
        case ExpectationFailed = "EXPECTATION_FAILED"
        case InternalServerError = "INTERNAL_SERVER_ERROR"
        case NotImplemented = "NOT_IMPLEMENTED"
        case BadGateway = "BAD_GATEWAY"
        case ServiceUnavailable = "SERVICE_UNAVAILABLE"
        case GatewayTimeout = "GATEWAY_TIMEOUT"
        case HttpVersionNotSupported = "HTTP_VERSION_NOT_SUPPORTED"
    }
    /** The globally unique identifier for the object. */
    public var id: String?
    public var name: String?
    /** The URI for this object */
    public var selfUri: String?
    public var buildTime: String?
    public var buildVersion: String?
    public var implementationVersion: String?
    public var status: ININStatus?
    public var pingMs: Int32?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var date: NSDate?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["selfUri"] = self.selfUri
        nillableDictionary["Build-Time"] = self.buildTime
        nillableDictionary["Build-Version"] = self.buildVersion
        nillableDictionary["Implementation-Version"] = self.implementationVersion
        nillableDictionary["Status"] = self.status?.rawValue
        nillableDictionary["Ping-Ms"] = self.pingMs?.encodeToJSON()
        nillableDictionary["Date"] = self.date?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
