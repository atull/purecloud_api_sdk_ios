//
// SuggestAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class SuggestAPI: APIBase {
    /**
     Search using q64
     
     - parameter q64: (query)  
     - parameter expand: (query)  (optional)
     - parameter profile: (query)  (optional, default to true)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getSearch(q64 q64: String, expand: [String]? = nil, profile: Bool? = nil, completion: ((data: ININJsonNodeSearchResponse?, error: ErrorType?) -> Void)) {
        getSearchWithRequestBuilder(q64: q64, expand: expand, profile: profile).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Search using q64
     - GET /api/v2/search
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "types" : [ "aeiou" ],
  "pageNumber" : 123,
  "previousPage" : "aeiou",
  "nextPage" : "aeiou",
  "pageSize" : 123,
  "currentPage" : "aeiou",
  "results" : {
    "integralNumber" : true,
    "double" : true,
    "valueNode" : true,
    "floatingPointNumber" : true,
    "bigInteger" : true,
    "nodeType" : "aeiou",
    "float" : true,
    "int" : true,
    "long" : true,
    "textual" : true,
    "missingNode" : true,
    "pojo" : true,
    "number" : true,
    "boolean" : true,
    "null" : true,
    "array" : true,
    "binary" : true,
    "containerNode" : true,
    "short" : true,
    "bigDecimal" : true,
    "object" : true
  },
  "aggregations" : ""
}}]
     
     - parameter q64: (query)  
     - parameter expand: (query)  (optional)
     - parameter profile: (query)  (optional, default to true)

     - returns: RequestBuilder<ININJsonNodeSearchResponse> 
     */
    public class func getSearchWithRequestBuilder(q64 q64: String, expand: [String]? = nil, profile: Bool? = nil) -> RequestBuilder<ININJsonNodeSearchResponse> {
        let path = "/api/v2/search"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "q64": q64,
            "expand": expand,
            "profile": profile
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININJsonNodeSearchResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Suggest using q64
     
     - parameter q64: (query)  
     - parameter profile: (query)  (optional, default to true)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getSearchSuggest(q64 q64: String, profile: Bool? = nil, completion: ((data: ININJsonNodeSearchResponse?, error: ErrorType?) -> Void)) {
        getSearchSuggestWithRequestBuilder(q64: q64, profile: profile).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Suggest using q64
     - GET /api/v2/search/suggest
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "types" : [ "aeiou" ],
  "pageNumber" : 123,
  "previousPage" : "aeiou",
  "nextPage" : "aeiou",
  "pageSize" : 123,
  "currentPage" : "aeiou",
  "results" : {
    "integralNumber" : true,
    "double" : true,
    "valueNode" : true,
    "floatingPointNumber" : true,
    "bigInteger" : true,
    "nodeType" : "aeiou",
    "float" : true,
    "int" : true,
    "long" : true,
    "textual" : true,
    "missingNode" : true,
    "pojo" : true,
    "number" : true,
    "boolean" : true,
    "null" : true,
    "array" : true,
    "binary" : true,
    "containerNode" : true,
    "short" : true,
    "bigDecimal" : true,
    "object" : true
  },
  "aggregations" : ""
}}]
     
     - parameter q64: (query)  
     - parameter profile: (query)  (optional, default to true)

     - returns: RequestBuilder<ININJsonNodeSearchResponse> 
     */
    public class func getSearchSuggestWithRequestBuilder(q64 q64: String, profile: Bool? = nil) -> RequestBuilder<ININJsonNodeSearchResponse> {
        let path = "/api/v2/search/suggest"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "q64": q64,
            "profile": profile
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININJsonNodeSearchResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Search
     
     - parameter body: (body) Search request options (optional)
     - parameter profile: (query)  (optional, default to true)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postSearch(body body: ININSearchRequest? = nil, profile: Bool? = nil, completion: ((data: ININJsonNodeSearchResponse?, error: ErrorType?) -> Void)) {
        postSearchWithRequestBuilder(body: body, profile: profile).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Search
     - POST /api/v2/search
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "types" : [ "aeiou" ],
  "pageNumber" : 123,
  "previousPage" : "aeiou",
  "nextPage" : "aeiou",
  "pageSize" : 123,
  "currentPage" : "aeiou",
  "results" : {
    "integralNumber" : true,
    "double" : true,
    "valueNode" : true,
    "floatingPointNumber" : true,
    "bigInteger" : true,
    "nodeType" : "aeiou",
    "float" : true,
    "int" : true,
    "long" : true,
    "textual" : true,
    "missingNode" : true,
    "pojo" : true,
    "number" : true,
    "boolean" : true,
    "null" : true,
    "array" : true,
    "binary" : true,
    "containerNode" : true,
    "short" : true,
    "bigDecimal" : true,
    "object" : true
  },
  "aggregations" : ""
}}]
     
     - parameter body: (body) Search request options (optional)
     - parameter profile: (query)  (optional, default to true)

     - returns: RequestBuilder<ININJsonNodeSearchResponse> 
     */
    public class func postSearchWithRequestBuilder(body body: ININSearchRequest? = nil, profile: Bool? = nil) -> RequestBuilder<ININJsonNodeSearchResponse> {
        let path = "/api/v2/search"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININJsonNodeSearchResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Suggest
     
     - parameter body: (body) Search request options (optional)
     - parameter profile: (query)  (optional, default to true)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postSearchSuggest(body body: ININSuggestSearchRequest? = nil, profile: Bool? = nil, completion: ((data: ININJsonNodeSearchResponse?, error: ErrorType?) -> Void)) {
        postSearchSuggestWithRequestBuilder(body: body, profile: profile).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Suggest
     - POST /api/v2/search/suggest
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "types" : [ "aeiou" ],
  "pageNumber" : 123,
  "previousPage" : "aeiou",
  "nextPage" : "aeiou",
  "pageSize" : 123,
  "currentPage" : "aeiou",
  "results" : {
    "integralNumber" : true,
    "double" : true,
    "valueNode" : true,
    "floatingPointNumber" : true,
    "bigInteger" : true,
    "nodeType" : "aeiou",
    "float" : true,
    "int" : true,
    "long" : true,
    "textual" : true,
    "missingNode" : true,
    "pojo" : true,
    "number" : true,
    "boolean" : true,
    "null" : true,
    "array" : true,
    "binary" : true,
    "containerNode" : true,
    "short" : true,
    "bigDecimal" : true,
    "object" : true
  },
  "aggregations" : ""
}}]
     
     - parameter body: (body) Search request options (optional)
     - parameter profile: (query)  (optional, default to true)

     - returns: RequestBuilder<ININJsonNodeSearchResponse> 
     */
    public class func postSearchSuggestWithRequestBuilder(body body: ININSuggestSearchRequest? = nil, profile: Bool? = nil) -> RequestBuilder<ININJsonNodeSearchResponse> {
        let path = "/api/v2/search/suggest"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININJsonNodeSearchResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
