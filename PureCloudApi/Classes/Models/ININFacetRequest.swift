//
// ININFacetRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Used as part of a searchRequest or reportRequest to denote which facets to generate from the search results.  For RANGE facets, one of rangeFrom or rangeTo (or both) MUST be set */
public class ININFacetRequest: JSONEncodable {
    public enum ININFacetRequestQueryType: String { 
        case Term = "TERM"
        case Range = "RANGE"
    }
    public enum ININType: String { 
        case Number = "NUMBER"
        case String = "STRING"
        case Date = "DATE"
        case Boolean = "BOOLEAN"
        case List = "LIST"
        case Group = "GROUP"
    }
    /** name of the facet request that will be returned with the result set */
    public var name: String?
    /** Which facet request type */
    public var facetRequestQueryType: ININFacetRequestQueryType?
    /** The fieldName to perform the facet request on. */
    public var fieldName: String?
    /** the fieldtype of the field to perform the facet request on. */
    public var type: ININType?
    /** For RANGE requests populate this field to specify the beginning of a limit (leave blank for openended).  Note this value is inclusive of the results.  (EG if the value is 1, 1 will be included in the range.) */
    public var rangeFrom: String?
    /** For RANGE requests populate this field to specify the end of a limit (leave blank for openended).  Note this value is EXCLUSIVE of the result (EG if this value was 5, only values LESS THAN 5 will be included in the count.) */
    public var rangeTo: String?
    /** Limits/expands the number of facet entries returned (default 500) */
    public var maxFacetCount: Int32?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["name"] = self.name
        nillableDictionary["facetRequestQueryType"] = self.facetRequestQueryType?.rawValue
        nillableDictionary["fieldName"] = self.fieldName
        nillableDictionary["type"] = self.type?.rawValue
        nillableDictionary["rangeFrom"] = self.rangeFrom
        nillableDictionary["rangeTo"] = self.rangeTo
        nillableDictionary["maxFacetCount"] = self.maxFacetCount?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
