//
// ININMediaParticipantRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININMediaParticipantRequest: JSONEncodable {
    public enum ININState: String { 
        case Alerting = "ALERTING"
        case Dialing = "DIALING"
        case Contacting = "CONTACTING"
        case Offering = "OFFERING"
        case Connected = "CONNECTED"
        case Disconnected = "DISCONNECTED"
        case Terminated = "TERMINATED"
        case Converting = "CONVERTING"
        case Uploading = "UPLOADING"
        case Transmitting = "TRANSMITTING"
        case None = "NONE"
    }
    /** Wrap-up to assign to this participant. */
    public var wrapup: ININWrapup?
    /** The state to update to set for this participant&#39;s communications.  Possible values are: &#39;connected&#39; and &#39;disconnected&#39;. */
    public var state: ININState?
    /** True to enable recording of this participant, otherwise false to disable recording. */
    public var recording: Bool?
    /** True to mute this conversation participant. */
    public var muted: Bool?
    /** True to confine this conversation participant.  Should only be used for ad-hoc conferences */
    public var confined: Bool?
    /** True to hold this conversation participant. */
    public var held: Bool?
    /** True to skip wrap-up for this participant. */
    public var wrapupSkipped: Bool?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["wrapup"] = self.wrapup?.encodeToJSON()
        nillableDictionary["state"] = self.state?.rawValue
        nillableDictionary["recording"] = self.recording
        nillableDictionary["muted"] = self.muted
        nillableDictionary["confined"] = self.confined
        nillableDictionary["held"] = self.held
        nillableDictionary["wrapupSkipped"] = self.wrapupSkipped
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
