//
// ININSheetSchema.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININSheetSchema: JSONEncodable {
    public enum ININRateType: String { 
        case Intrastate = "INTRASTATE"
        case Interstate = "INTERSTATE"
        case International = "INTERNATIONAL"
    }
    /** Row number for the XLSX sheet&#39;s headers.  This is zero indexed (i.e. 0 is row 1). */
    public var headerRow: Int32?
    /** Row number of the first line of data in the sheet.  This is zero indexed (i.e. 0 is row 1) */
    public var dataRow: Int32?
    /** XLSX sheet header name to object name mappings. For example, \&quot;ROUTE_TEL_PREFIX\&quot; to \&quot;Prefix\&quot; might be one such mapping. */
    public var headerMappings: [String:String]?
    /** Rate type for the sheet. */
    public var rateType: ININRateType?
    /** Sheet number within the XLSX file.  This is zero indexed (i.e. 0 is page 1). */
    public var sheetNumber: Int32?
    /** A date format that represents the date time stamp you want to parse. This is based on the reference time of Mon Jan 2 15:04:05 MST 2006. For example, if you had the date 13-OCT-2015, this parameter should be 02-Jan-2006. As another example, if you have the date 2014-09-20, this parameter should be 2006-01-02. */
    public var dateFormat: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["HeaderRow"] = self.headerRow?.encodeToJSON()
        nillableDictionary["DataRow"] = self.dataRow?.encodeToJSON()
        nillableDictionary["HeaderMappings"] = self.headerMappings?.encodeToJSON()
        nillableDictionary["RateType"] = self.rateType?.rawValue
        nillableDictionary["SheetNumber"] = self.sheetNumber?.encodeToJSON()
        nillableDictionary["DateFormat"] = self.dateFormat
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
