//
// ININCommandStatus.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININCommandStatus: JSONEncodable {
    public enum ININStatusCode: String { 
        case Inprogress = "INPROGRESS"
        case Complete = "COMPLETE"
        case Error = "ERROR"
        case Canceling = "CANCELING"
        case Canceled = "CANCELED"
    }
    public enum ININCommandType: String { 
        case Upload = "UPLOAD"
        case Copydocument = "COPYDOCUMENT"
        case Movedocument = "MOVEDOCUMENT"
        case Deleteworkspace = "DELETEWORKSPACE"
        case Deletedocument = "DELETEDOCUMENT"
        case Deletetag = "DELETETAG"
        case Updatetag = "UPDATETAG"
        case Reindex = "REINDEX"
        case Cleanup = "CLEANUP"
        case Replacedocument = "REPLACEDOCUMENT"
    }
    /** The globally unique identifier for the object. */
    public var id: String?
    public var name: String?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var expiration: NSDate?
    public var userId: String?
    public var statusCode: ININStatusCode?
    public var commandType: ININCommandType?
    public var document: ININDocument?
    /** The URI for this object */
    public var selfUri: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["expiration"] = self.expiration?.encodeToJSON()
        nillableDictionary["userId"] = self.userId
        nillableDictionary["statusCode"] = self.statusCode?.rawValue
        nillableDictionary["commandType"] = self.commandType?.rawValue
        nillableDictionary["document"] = self.document?.encodeToJSON()
        nillableDictionary["selfUri"] = self.selfUri
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
