//
// AttributesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class AttributesAPI: APIBase {
    /**
     Delete an existing Attribute.
     
     - parameter attributeId: (path) Attribute ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteAttributesAttributeId(attributeId attributeId: String, completion: ((error: ErrorType?) -> Void)) {
        deleteAttributesAttributeIdWithRequestBuilder(attributeId: attributeId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete an existing Attribute.
     - DELETE /api/v2/attributes/{attributeId}
     - This will remove attribute.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter attributeId: (path) Attribute ID 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteAttributesAttributeIdWithRequestBuilder(attributeId attributeId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/attributes/{attributeId}"
        path = path.stringByReplacingOccurrencesOfString("{attributeId}", withString: "\(attributeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets a list of existing attributes.
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAttributes(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, completion: ((data: ININAttributeEntityListing?, error: ErrorType?) -> Void)) {
        getAttributesWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of existing attributes.
     - GET /api/v2/attributes
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "description" : "aeiou",
    "modifiedBy" : "",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "version" : 123
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)

     - returns: RequestBuilder<ININAttributeEntityListing> 
     */
    public class func getAttributesWithRequestBuilder(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil) -> RequestBuilder<ININAttributeEntityListing> {
        let path = "/api/v2/attributes"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageNumber": pageNumber?.encodeToJSON(),
            "pageSize": pageSize?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAttributeEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get details about an existing attribute.
     
     - parameter attributeId: (path) Attribute ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAttributesAttributeId(attributeId attributeId: String, completion: ((data: ININAttribute?, error: ErrorType?) -> Void)) {
        getAttributesAttributeIdWithRequestBuilder(attributeId: attributeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get details about an existing attribute.
     - GET /api/v2/attributes/{attributeId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "modifiedBy" : "",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter attributeId: (path) Attribute ID 

     - returns: RequestBuilder<ININAttribute> 
     */
    public class func getAttributesAttributeIdWithRequestBuilder(attributeId attributeId: String) -> RequestBuilder<ININAttribute> {
        var path = "/api/v2/attributes/{attributeId}"
        path = path.stringByReplacingOccurrencesOfString("{attributeId}", withString: "\(attributeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAttribute>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create an attribute.
     
     - parameter body: (body) Attribute (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAttributes(body body: ININAttribute? = nil, completion: ((data: ININAttribute?, error: ErrorType?) -> Void)) {
        postAttributesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create an attribute.
     - POST /api/v2/attributes
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "modifiedBy" : "",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter body: (body) Attribute (optional)

     - returns: RequestBuilder<ININAttribute> 
     */
    public class func postAttributesWithRequestBuilder(body body: ININAttribute? = nil) -> RequestBuilder<ININAttribute> {
        let path = "/api/v2/attributes"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAttribute>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Query attributes
     
     - parameter body: (body) query (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAttributesQuery(body body: ININAttributeQueryRequest? = nil, completion: ((data: ININAttributeEntityListing?, error: ErrorType?) -> Void)) {
        postAttributesQueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query attributes
     - POST /api/v2/attributes/query
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "description" : "aeiou",
    "modifiedBy" : "",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "version" : 123
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter body: (body) query (optional)

     - returns: RequestBuilder<ININAttributeEntityListing> 
     */
    public class func postAttributesQueryWithRequestBuilder(body body: ININAttributeQueryRequest? = nil) -> RequestBuilder<ININAttributeEntityListing> {
        let path = "/api/v2/attributes/query"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAttributeEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an existing attribute.
     
     - parameter attributeId: (path) Attribute ID 
     - parameter body: (body) Attribute (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putAttributesAttributeId(attributeId attributeId: String, body: ININAttribute? = nil, completion: ((data: ININAttribute?, error: ErrorType?) -> Void)) {
        putAttributesAttributeIdWithRequestBuilder(attributeId: attributeId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update an existing attribute.
     - PUT /api/v2/attributes/{attributeId}
     - Fields that can be updated: name, description. The most recent version is required for updates.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "modifiedBy" : "",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter attributeId: (path) Attribute ID 
     - parameter body: (body) Attribute (optional)

     - returns: RequestBuilder<ININAttribute> 
     */
    public class func putAttributesAttributeIdWithRequestBuilder(attributeId attributeId: String, body: ININAttribute? = nil) -> RequestBuilder<ININAttribute> {
        var path = "/api/v2/attributes/{attributeId}"
        path = path.stringByReplacingOccurrencesOfString("{attributeId}", withString: "\(attributeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAttribute>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
