//
// ININTransformEndpoint.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININTransformEndpoint: JSONEncodable {
    /** The globally unique identifier for the object. */
    public var id: String?
    public var name: String?
    /** The Url to the swagger documentation of the endpoint where parsed entities will be posted */
    public var swaggerUrl: String?
    /** The swagger route to use */
    public var route: String?
    /** The entity type being posted */
    public var entity: String?
    /** The swagger function being called */
    public var apiFunction: String?
    /** Whether this TransformEndpoint has been configured to work (security groups, permissions, etc) */
    public var ready: Bool?
    /** Whether this TransformEndpoint is currently active and accepting transformation operations */
    public var active: Bool?
    /** The number of entities to send in an array for batch POSTs, or 0 for unbatched POSTs */
    public var batchSize: Int32?
    /** The number of parallel POSTs to allow at once */
    public var parallelism: Int32?
    /** The swagger route to use */
    public var updateProgressEvery: Int32?
    /** The URI for this object */
    public var selfUri: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["swaggerUrl"] = self.swaggerUrl
        nillableDictionary["route"] = self.route
        nillableDictionary["entity"] = self.entity
        nillableDictionary["apiFunction"] = self.apiFunction
        nillableDictionary["ready"] = self.ready
        nillableDictionary["active"] = self.active
        nillableDictionary["batchSize"] = self.batchSize?.encodeToJSON()
        nillableDictionary["parallelism"] = self.parallelism?.encodeToJSON()
        nillableDictionary["updateProgressEvery"] = self.updateProgressEvery?.encodeToJSON()
        nillableDictionary["selfUri"] = self.selfUri
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
