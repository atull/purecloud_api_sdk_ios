//
// ININJsonNode.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININJsonNode: JSONEncodable {
    public enum ININNodeType: String { 
        case Array = "ARRAY"
        case Binary = "BINARY"
        case Boolean = "BOOLEAN"
        case Missing = "MISSING"
        case Null = "NULL"
        case Number = "NUMBER"
        case Object = "OBJECT"
        case Pojo = "POJO"
        case String = "STRING"
    }
    public var nodeType: ININNodeType?
    public var float: Bool?
    public var boolean: Bool?
    public var number: Bool?
    public var object: Bool?
    public var valueNode: Bool?
    public var containerNode: Bool?
    public var missingNode: Bool?
    public var pojo: Bool?
    public var integralNumber: Bool?
    public var floatingPointNumber: Bool?
    public var short: Bool?
    public var int: Bool?
    public var long: Bool?
    public var double: Bool?
    public var bigDecimal: Bool?
    public var bigInteger: Bool?
    public var textual: Bool?
    public var binary: Bool?
    public var array: Bool?
    public var null: Bool?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["nodeType"] = self.nodeType?.rawValue
        nillableDictionary["float"] = self.float
        nillableDictionary["boolean"] = self.boolean
        nillableDictionary["number"] = self.number
        nillableDictionary["object"] = self.object
        nillableDictionary["valueNode"] = self.valueNode
        nillableDictionary["containerNode"] = self.containerNode
        nillableDictionary["missingNode"] = self.missingNode
        nillableDictionary["pojo"] = self.pojo
        nillableDictionary["integralNumber"] = self.integralNumber
        nillableDictionary["floatingPointNumber"] = self.floatingPointNumber
        nillableDictionary["short"] = self.short
        nillableDictionary["int"] = self.int
        nillableDictionary["long"] = self.long
        nillableDictionary["double"] = self.double
        nillableDictionary["bigDecimal"] = self.bigDecimal
        nillableDictionary["bigInteger"] = self.bigInteger
        nillableDictionary["textual"] = self.textual
        nillableDictionary["binary"] = self.binary
        nillableDictionary["array"] = self.array
        nillableDictionary["null"] = self.null
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
