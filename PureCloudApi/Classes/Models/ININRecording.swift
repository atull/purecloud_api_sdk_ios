//
// ININRecording.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININRecording: JSONEncodable {
    public enum ININFileState: String { 
        case Archived = "ARCHIVED"
        case Available = "AVAILABLE"
        case Deleted = "DELETED"
        case Restored = "RESTORED"
        case Restoring = "RESTORING"
        case Uploading = "UPLOADING"
    }
    public enum ININArchiveMedium: String { 
        case Cloudarchive = "CLOUDARCHIVE"
    }
    /** The globally unique identifier for the object. */
    public var id: String?
    public var name: String?
    public var conversationId: String?
    public var path: String?
    public var startTime: String?
    public var endTime: String?
    /** The type of media that the recording is. */
    public var media: String?
    /** Annotations that belong to the recording. */
    public var annotations: [ININAnnotation]?
    /** Represents a chat transcript */
    public var transcript: [ININChatMessage]?
    /** Represents an email transcript */
    public var emailTranscript: [ININRecordingEmailMessage]?
    /** Represents the current file state for a recording. Examples: Uploading, Archived, etc */
    public var fileState: ININFileState?
    /** The amount of time a restored recording will remain restored before being archived again. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var restoreExpirationTime: NSDate?
    /** The different mediaUris for the recording. */
    public var mediaUris: [String:ININMediaResult]?
    public var estimatedTranscodeTimeMs: Int64?
    public var actualTranscodeTimeMs: Int64?
    /** The date the recording will be archived. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var archiveDate: NSDate?
    /** The type of archive medium used. Example: CloudArchive */
    public var archiveMedium: ININArchiveMedium?
    /** The date the recording will be deleted. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var deleteDate: NSDate?
    /** How many archive restorations the organization is allowed to have. */
    public var maxAllowedRestorationsForOrg: Int32?
    /** The remaining archive restorations the organization has. */
    public var remainingRestorationsAllowedForOrg: Int32?
    /** The session id represents an external resource id, such as email, call, chat, etc */
    public var sessionId: String?
    /** The URI for this object */
    public var selfUri: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["conversationId"] = self.conversationId
        nillableDictionary["path"] = self.path
        nillableDictionary["startTime"] = self.startTime
        nillableDictionary["endTime"] = self.endTime
        nillableDictionary["media"] = self.media
        nillableDictionary["annotations"] = self.annotations?.encodeToJSON()
        nillableDictionary["transcript"] = self.transcript?.encodeToJSON()
        nillableDictionary["emailTranscript"] = self.emailTranscript?.encodeToJSON()
        nillableDictionary["fileState"] = self.fileState?.rawValue
        nillableDictionary["restoreExpirationTime"] = self.restoreExpirationTime?.encodeToJSON()
        nillableDictionary["mediaUris"] = self.mediaUris?.encodeToJSON()
        nillableDictionary["estimatedTranscodeTimeMs"] = self.estimatedTranscodeTimeMs?.encodeToJSON()
        nillableDictionary["actualTranscodeTimeMs"] = self.actualTranscodeTimeMs?.encodeToJSON()
        nillableDictionary["archiveDate"] = self.archiveDate?.encodeToJSON()
        nillableDictionary["archiveMedium"] = self.archiveMedium?.rawValue
        nillableDictionary["deleteDate"] = self.deleteDate?.encodeToJSON()
        nillableDictionary["maxAllowedRestorationsForOrg"] = self.maxAllowedRestorationsForOrg?.encodeToJSON()
        nillableDictionary["remainingRestorationsAllowedForOrg"] = self.remainingRestorationsAllowedForOrg?.encodeToJSON()
        nillableDictionary["sessionId"] = self.sessionId
        nillableDictionary["selfUri"] = self.selfUri
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
