//
// ININParticipant.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININParticipant: JSONEncodable {
    public enum ININWrapupPrompt: String { 
        case Mandatory = "MANDATORY"
        case Optional = "OPTIONAL"
        case Timeout = "TIMEOUT"
        case ForcedTimeout = "FORCED_TIMEOUT"
    }
    public var id: String?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var startTime: NSDate?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var endTime: NSDate?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var connectedTime: NSDate?
    public var name: String?
    public var userUri: String?
    public var userId: String?
    public var externalContactId: String?
    public var queueId: String?
    public var groupId: String?
    public var queueName: String?
    public var purpose: String?
    public var participantType: String?
    public var consultParticipantId: String?
    public var address: String?
    public var ani: String?
    public var dnis: String?
    public var locale: String?
    public var wrapupRequired: Bool?
    public var wrapupPrompt: ININWrapupPrompt?
    public var wrapupTimeoutMs: Int32?
    public var wrapupSkipped: Bool?
    public var wrapup: ININWrapup?
    public var monitoredParticipantId: String?
    public var attributes: [String:String]?
    public var calls: [ININCall]?
    public var callbacks: [ININCallback]?
    public var chats: [ININConversationChat]?
    public var emails: [ININEmail]?
    public var socialExpressions: [ININSocialExpression]?
    public var videos: [ININVideo]?
    public var evaluations: [ININEvaluation]?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["startTime"] = self.startTime?.encodeToJSON()
        nillableDictionary["endTime"] = self.endTime?.encodeToJSON()
        nillableDictionary["connectedTime"] = self.connectedTime?.encodeToJSON()
        nillableDictionary["name"] = self.name
        nillableDictionary["userUri"] = self.userUri
        nillableDictionary["userId"] = self.userId
        nillableDictionary["externalContactId"] = self.externalContactId
        nillableDictionary["queueId"] = self.queueId
        nillableDictionary["groupId"] = self.groupId
        nillableDictionary["queueName"] = self.queueName
        nillableDictionary["purpose"] = self.purpose
        nillableDictionary["participantType"] = self.participantType
        nillableDictionary["consultParticipantId"] = self.consultParticipantId
        nillableDictionary["address"] = self.address
        nillableDictionary["ani"] = self.ani
        nillableDictionary["dnis"] = self.dnis
        nillableDictionary["locale"] = self.locale
        nillableDictionary["wrapupRequired"] = self.wrapupRequired
        nillableDictionary["wrapupPrompt"] = self.wrapupPrompt?.rawValue
        nillableDictionary["wrapupTimeoutMs"] = self.wrapupTimeoutMs?.encodeToJSON()
        nillableDictionary["wrapupSkipped"] = self.wrapupSkipped
        nillableDictionary["wrapup"] = self.wrapup?.encodeToJSON()
        nillableDictionary["monitoredParticipantId"] = self.monitoredParticipantId
        nillableDictionary["attributes"] = self.attributes?.encodeToJSON()
        nillableDictionary["calls"] = self.calls?.encodeToJSON()
        nillableDictionary["callbacks"] = self.callbacks?.encodeToJSON()
        nillableDictionary["chats"] = self.chats?.encodeToJSON()
        nillableDictionary["emails"] = self.emails?.encodeToJSON()
        nillableDictionary["socialExpressions"] = self.socialExpressions?.encodeToJSON()
        nillableDictionary["videos"] = self.videos?.encodeToJSON()
        nillableDictionary["evaluations"] = self.evaluations?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
