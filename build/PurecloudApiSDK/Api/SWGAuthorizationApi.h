#import <Foundation/Foundation.h>
#import "SWGErrorBody.h"
#import "SWGPermissionCollectionEntityListing.h"
#import "SWGOrganizationProductEntityListing.h"
#import "SWGOrganizationRoleEntityListing.h"
#import "SWGDomainOrgRoleDifference.h"
#import "SWGDomainOrganizationRole.h"
#import "SWGUserAuthorization.h"
#import "SWGDomainOrganizationRoleCreate.h"
#import "SWGDomainOrganizationRoleUpdate.h"
#import "SWGApi.h"

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */


@interface SWGAuthorizationApi: NSObject <SWGApi>

extern NSString* kSWGAuthorizationApiErrorDomain;
extern NSInteger kSWGAuthorizationApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Delete an organization role.
/// 
///
/// @param roleId Role ID
/// 
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out.",
///  code:0 message:"successful operation"
///
/// @return 
-(NSNumber*) deleteAuthorizationRolesRoleIdWithRoleId: (NSString*) roleId
    completionHandler: (void (^)(NSError* error)) handler;


/// Removes all the roles from the user.
/// 
///
/// @param userId User ID
/// 
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out.",
///  code:0 message:"successful operation"
///
/// @return 
-(NSNumber*) deleteUsersUserIdRolesWithUserId: (NSString*) userId
    completionHandler: (void (^)(NSError* error)) handler;


/// Get all permissions.
/// Retrieve a list of all permission defined in the system.
///
/// @param pageSize Page size (optional) (default to 25)
/// @param pageNumber Page number (optional) (default to 1)
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGPermissionCollectionEntityListing*
-(NSNumber*) getAuthorizationPermissionsWithPageSize: (NSNumber*) pageSize
    pageNumber: (NSNumber*) pageNumber
    completionHandler: (void (^)(SWGPermissionCollectionEntityListing* output, NSError* error)) handler;


/// Get the list of enabled products
/// Gets the list of enabled products. Some example product names are: collaborateFree, collaboratePro, communicate, and engage.
///
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGOrganizationProductEntityListing*
-(NSNumber*) getAuthorizationProductsWithCompletionHandler: 
    (void (^)(SWGOrganizationProductEntityListing* output, NSError* error)) handler;


/// Retrieve a list of all roles defined for the organization
/// 
///
/// @param pageSize The total page size requested (optional) (default to 25)
/// @param pageNumber The page number requested (optional) (default to 1)
/// @param sortBy variable name requested to sort by (optional)
/// @param expand variable name requested by expand list (optional)
/// @param nextPage next page token (optional)
/// @param previousPage Previous page token (optional)
/// @param permission  (optional)
/// @param userCount  (optional) (default to true)
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGOrganizationRoleEntityListing*
-(NSNumber*) getAuthorizationRolesWithPageSize: (NSNumber*) pageSize
    pageNumber: (NSNumber*) pageNumber
    sortBy: (NSString*) sortBy
    expand: (NSArray<NSObject*>*) expand
    nextPage: (NSString*) nextPage
    previousPage: (NSString*) previousPage
    permission: (NSArray<NSObject*>*) permission
    userCount: (NSNumber*) userCount
    completionHandler: (void (^)(SWGOrganizationRoleEntityListing* output, NSError* error)) handler;


/// Get an org role to default role comparison comparison
/// Compares any organization role to a default role id and show differences
///
/// @param leftRoleId Left Role ID
/// @param rightRoleId Right Role id
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGDomainOrgRoleDifference*
-(NSNumber*) getAuthorizationRolesLeftroleIdComparedefaultRightroleIdWithLeftRoleId: (NSString*) leftRoleId
    rightRoleId: (NSString*) rightRoleId
    completionHandler: (void (^)(SWGDomainOrgRoleDifference* output, NSError* error)) handler;


/// Get a single organization role.
/// Get the organization role specified by its ID.
///
/// @param roleId Role ID
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGDomainOrganizationRole*
-(NSNumber*) getAuthorizationRolesRoleIdWithRoleId: (NSString*) roleId
    completionHandler: (void (^)(SWGDomainOrganizationRole* output, NSError* error)) handler;


/// Returns a listing of roles and permissions for a user.
/// 
///
/// @param userId User ID
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGUserAuthorization*
-(NSNumber*) getUsersUserIdRolesWithUserId: (NSString*) userId
    completionHandler: (void (^)(SWGUserAuthorization* output, NSError* error)) handler;


/// Patch Organization Role for needsUpdate Field
/// Patch Organization Role for needsUpdate Field
///
/// @param roleId Role ID
/// @param body Organization role
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGDomainOrganizationRole*
-(NSNumber*) patchAuthorizationRolesRoleIdWithRoleId: (NSString*) roleId
    body: (SWGDomainOrganizationRole*) body
    completionHandler: (void (^)(SWGDomainOrganizationRole* output, NSError* error)) handler;


/// Create an organization role.
/// 
///
/// @param body Organization role
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGDomainOrganizationRole*
-(NSNumber*) postAuthorizationRolesWithBody: (SWGDomainOrganizationRoleCreate*) body
    completionHandler: (void (^)(SWGDomainOrganizationRole* output, NSError* error)) handler;


/// Restores all default roles
/// This endpoint serves several purposes. 1. It provides the org with default roles. This is important for default roles that will be added after go-live (they can retroactively add the new default-role). Note: When not using a query param of force=true, it only adds the default roles not configured for the org; it does not overwrite roles. 2. Using the query param force=true, you can restore all default roles. Note: This does not have an effect on custom roles.
///
/// @param force Restore default roles (optional) (default to false)
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGOrganizationRoleEntityListing*
-(NSNumber*) postAuthorizationRolesDefaultWithForce: (NSNumber*) force
    completionHandler: (void (^)(SWGOrganizationRoleEntityListing* output, NSError* error)) handler;


/// Get an unsaved org role to default role comparison
/// Allows users to compare their existing roles in an unsaved state to its default role
///
/// @param leftRoleId Left Role ID
/// @param rightRoleId Right Role id
/// @param body Organization role
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGDomainOrgRoleDifference*
-(NSNumber*) postAuthorizationRolesLeftroleIdComparedefaultRightroleIdWithLeftRoleId: (NSString*) leftRoleId
    rightRoleId: (NSString*) rightRoleId
    body: (SWGDomainOrganizationRole*) body
    completionHandler: (void (^)(SWGDomainOrgRoleDifference* output, NSError* error)) handler;


/// Restore specified default roles
/// 
///
/// @param body Organization roles list
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGOrganizationRoleEntityListing*
-(NSNumber*) putAuthorizationRolesDefaultWithBody: (NSArray<SWGDomainOrganizationRole>*) body
    completionHandler: (void (^)(SWGOrganizationRoleEntityListing* output, NSError* error)) handler;


/// Update an organization role.
/// Update
///
/// @param roleId Role ID
/// @param body Organization role
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGDomainOrganizationRole*
-(NSNumber*) putAuthorizationRolesRoleIdWithRoleId: (NSString*) roleId
    body: (SWGDomainOrganizationRoleUpdate*) body
    completionHandler: (void (^)(SWGDomainOrganizationRole* output, NSError* error)) handler;


/// Sets the users for the role
/// 
///
/// @param roleId Role ID
/// @param body List of user IDs
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return NSArray<NSString*>*
-(NSNumber*) putAuthorizationRolesRoleIdUsersAddWithRoleId: (NSString*) roleId
    body: (NSArray<NSString*>*) body
    completionHandler: (void (^)(NSArray<NSString*>* output, NSError* error)) handler;


/// Removes the users from the role
/// 
///
/// @param roleId Role ID
/// @param body List of user IDs
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return NSArray<NSString*>*
-(NSNumber*) putAuthorizationRolesRoleIdUsersRemoveWithRoleId: (NSString*) roleId
    body: (NSArray<NSString*>*) body
    completionHandler: (void (^)(NSArray<NSString*>* output, NSError* error)) handler;


/// Sets the user's roles
/// 
///
/// @param userId User ID
/// @param body List of roles
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGUserAuthorization*
-(NSNumber*) putUsersUserIdRolesWithUserId: (NSString*) userId
    body: (NSArray<NSString*>*) body
    completionHandler: (void (^)(SWGUserAuthorization* output, NSError* error)) handler;



@end
