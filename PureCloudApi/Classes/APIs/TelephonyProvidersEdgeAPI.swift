//
// TelephonyProvidersEdgeAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class TelephonyProvidersEdgeAPI: APIBase {
    /**
     Delete a certificate authority.
     
     - parameter certificateId: (path) Certificate ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesCertificateauthoritiesCertificateId(certificateId certificateId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesCertificateauthoritiesCertificateIdWithRequestBuilder(certificateId: certificateId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a certificate authority.
     - DELETE /api/v2/telephony/providers/edges/certificateauthorities/{certificateId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter certificateId: (path) Certificate ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesCertificateauthoritiesCertificateIdWithRequestBuilder(certificateId certificateId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/certificateauthorities/{certificateId}"
        path = path.stringByReplacingOccurrencesOfString("{certificateId}", withString: "\(certificateId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a DID Pool by ID.
     
     - parameter didPoolId: (path) DID pool ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesDidpoolsDidpoolId(didPoolId didPoolId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesDidpoolsDidpoolIdWithRequestBuilder(didPoolId: didPoolId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a DID Pool by ID.
     - DELETE /api/v2/telephony/providers/edges/didpools/{didPoolId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter didPoolId: (path) DID pool ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesDidpoolsDidpoolIdWithRequestBuilder(didPoolId didPoolId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/didpools/{didPoolId}"
        path = path.stringByReplacingOccurrencesOfString("{didPoolId}", withString: "\(didPoolId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a edge.
     
     - parameter edgeId: (path) Edge ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesEdgeId(edgeId edgeId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesEdgeIdWithRequestBuilder(edgeId: edgeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a edge.
     - DELETE /api/v2/telephony/providers/edges/{edgeId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter edgeId: (path) Edge ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesEdgeIdWithRequestBuilder(edgeId edgeId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete an edge logical interface
     
     - parameter edgeId: (path) Edge ID 
     - parameter interfaceId: (path) Interface ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesEdgeIdLogicalinterfacesInterfaceId(edgeId edgeId: String, interfaceId: String, completion: ((error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesEdgeIdLogicalinterfacesInterfaceIdWithRequestBuilder(edgeId: edgeId, interfaceId: interfaceId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete an edge logical interface
     - DELETE /api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces/{interfaceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter edgeId: (path) Edge ID 
     - parameter interfaceId: (path) Interface ID 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteTelephonyProvidersEdgesEdgeIdLogicalinterfacesInterfaceIdWithRequestBuilder(edgeId edgeId: String, interfaceId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces/{interfaceId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{interfaceId}", withString: "\(interfaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Cancels any in-progress update for this edge.
     
     - parameter edgeId: (path) Edge ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesEdgeIdSoftwareupdate(edgeId edgeId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesEdgeIdSoftwareupdateWithRequestBuilder(edgeId: edgeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Cancels any in-progress update for this edge.
     - DELETE /api/v2/telephony/providers/edges/{edgeId}/softwareupdate
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter edgeId: (path) Edge ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesEdgeIdSoftwareupdateWithRequestBuilder(edgeId edgeId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/softwareupdate"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete an edge group.
     
     - parameter edgeGroupId: (path) Edge group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesEdgegroupsEdgegroupId(edgeGroupId edgeGroupId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesEdgegroupsEdgegroupIdWithRequestBuilder(edgeGroupId: edgeGroupId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete an edge group.
     - DELETE /api/v2/telephony/providers/edges/edgegroups/{edgeGroupId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter edgeGroupId: (path) Edge group ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesEdgegroupsEdgegroupIdWithRequestBuilder(edgeGroupId edgeGroupId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/edgegroups/{edgeGroupId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeGroupId}", withString: "\(edgeGroupId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete endpoint
     
     - parameter endpointId: (path) Endpoint ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesEndpointsEndpointId(endpointId endpointId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesEndpointsEndpointIdWithRequestBuilder(endpointId: endpointId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete endpoint
     - DELETE /api/v2/telephony/providers/edges/endpoints/{endpointId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter endpointId: (path) Endpoint ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesEndpointsEndpointIdWithRequestBuilder(endpointId endpointId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/endpoints/{endpointId}"
        path = path.stringByReplacingOccurrencesOfString("{endpointId}", withString: "\(endpointId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete an extension pool by ID
     
     - parameter extensionPoolId: (path) Extension pool ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesExtensionpoolsExtensionpoolId(extensionPoolId extensionPoolId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesExtensionpoolsExtensionpoolIdWithRequestBuilder(extensionPoolId: extensionPoolId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete an extension pool by ID
     - DELETE /api/v2/telephony/providers/edges/extensionpools/{extensionPoolId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter extensionPoolId: (path) Extension pool ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesExtensionpoolsExtensionpoolIdWithRequestBuilder(extensionPoolId extensionPoolId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/extensionpools/{extensionPoolId}"
        path = path.stringByReplacingOccurrencesOfString("{extensionPoolId}", withString: "\(extensionPoolId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete Outbound Route
     
     - parameter outboundRouteId: (path) Outbound route ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesOutboundroutesOutboundrouteId(outboundRouteId outboundRouteId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesOutboundroutesOutboundrouteIdWithRequestBuilder(outboundRouteId: outboundRouteId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete Outbound Route
     - DELETE /api/v2/telephony/providers/edges/outboundroutes/{outboundRouteId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter outboundRouteId: (path) Outbound route ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesOutboundroutesOutboundrouteIdWithRequestBuilder(outboundRouteId outboundRouteId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/outboundroutes/{outboundRouteId}"
        path = path.stringByReplacingOccurrencesOfString("{outboundRouteId}", withString: "\(outboundRouteId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a Phone Base Settings by ID
     
     - parameter phoneBaseId: (path) Phone base ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesPhonebasesettingsPhonebaseId(phoneBaseId phoneBaseId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesPhonebasesettingsPhonebaseIdWithRequestBuilder(phoneBaseId: phoneBaseId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a Phone Base Settings by ID
     - DELETE /api/v2/telephony/providers/edges/phonebasesettings/{phoneBaseId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter phoneBaseId: (path) Phone base ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesPhonebasesettingsPhonebaseIdWithRequestBuilder(phoneBaseId phoneBaseId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/phonebasesettings/{phoneBaseId}"
        path = path.stringByReplacingOccurrencesOfString("{phoneBaseId}", withString: "\(phoneBaseId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a Phone by ID
     
     - parameter phoneId: (path) Phone ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesPhonesPhoneId(phoneId phoneId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesPhonesPhoneIdWithRequestBuilder(phoneId: phoneId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a Phone by ID
     - DELETE /api/v2/telephony/providers/edges/phones/{phoneId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter phoneId: (path) Phone ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesPhonesPhoneIdWithRequestBuilder(phoneId phoneId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/phones/{phoneId}"
        path = path.stringByReplacingOccurrencesOfString("{phoneId}", withString: "\(phoneId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a Site by ID
     
     - parameter siteId: (path) Site ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesSitesSiteId(siteId siteId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesSitesSiteIdWithRequestBuilder(siteId: siteId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a Site by ID
     - DELETE /api/v2/telephony/providers/edges/sites/{siteId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter siteId: (path) Site ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesSitesSiteIdWithRequestBuilder(siteId siteId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/sites/{siteId}"
        path = path.stringByReplacingOccurrencesOfString("{siteId}", withString: "\(siteId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a Trunk Base Settings object by ID
     
     - parameter trunkBaseSettingsId: (path) Trunk Base ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteTelephonyProvidersEdgesTrunkbasesettingsTrunkbasesettingsId(trunkBaseSettingsId trunkBaseSettingsId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteTelephonyProvidersEdgesTrunkbasesettingsTrunkbasesettingsIdWithRequestBuilder(trunkBaseSettingsId: trunkBaseSettingsId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a Trunk Base Settings object by ID
     - DELETE /api/v2/telephony/providers/edges/trunkbasesettings/{trunkBaseSettingsId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter trunkBaseSettingsId: (path) Trunk Base ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteTelephonyProvidersEdgesTrunkbasesettingsTrunkbasesettingsIdWithRequestBuilder(trunkBaseSettingsId trunkBaseSettingsId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/trunkbasesettings/{trunkBaseSettingsId}"
        path = path.stringByReplacingOccurrencesOfString("{trunkBaseSettingsId}", withString: "\(trunkBaseSettingsId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Lists available schema categories
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getConfigurationSchemasEdgesVnext(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, completion: ((data: ININSchemaCategoryEntityListing?, error: ErrorType?) -> Void)) {
        getConfigurationSchemasEdgesVnextWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Lists available schema categories
     - GET /api/v2/configuration/schemas/edges/vnext
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)

     - returns: RequestBuilder<ININSchemaCategoryEntityListing> 
     */
    public class func getConfigurationSchemasEdgesVnextWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil) -> RequestBuilder<ININSchemaCategoryEntityListing> {
        let path = "/api/v2/configuration/schemas/edges/vnext"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSchemaCategoryEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     List schemas of a specific category
     
     - parameter schemaCategory: (path) Schema category 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getConfigurationSchemasEdgesVnextSchemacategory(schemaCategory schemaCategory: String, pageSize: Int32? = nil, pageNumber: Int32? = nil, completion: ((data: ININSchemaReferenceEntityListing?, error: ErrorType?) -> Void)) {
        getConfigurationSchemasEdgesVnextSchemacategoryWithRequestBuilder(schemaCategory: schemaCategory, pageSize: pageSize, pageNumber: pageNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List schemas of a specific category
     - GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter schemaCategory: (path) Schema category 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)

     - returns: RequestBuilder<ININSchemaReferenceEntityListing> 
     */
    public class func getConfigurationSchemasEdgesVnextSchemacategoryWithRequestBuilder(schemaCategory schemaCategory: String, pageSize: Int32? = nil, pageNumber: Int32? = nil) -> RequestBuilder<ININSchemaReferenceEntityListing> {
        var path = "/api/v2/configuration/schemas/edges/vnext/{schemaCategory}"
        path = path.stringByReplacingOccurrencesOfString("{schemaCategory}", withString: "\(schemaCategory)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSchemaReferenceEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     List schemas of a specific category
     
     - parameter schemaCategory: (path) Schema category 
     - parameter schemaType: (path) Schema type 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getConfigurationSchemasEdgesVnextSchemacategorySchematype(schemaCategory schemaCategory: String, schemaType: String, pageSize: Int32? = nil, pageNumber: Int32? = nil, completion: ((data: ININSchemaReferenceEntityListing?, error: ErrorType?) -> Void)) {
        getConfigurationSchemasEdgesVnextSchemacategorySchematypeWithRequestBuilder(schemaCategory: schemaCategory, schemaType: schemaType, pageSize: pageSize, pageNumber: pageNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List schemas of a specific category
     - GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter schemaCategory: (path) Schema category 
     - parameter schemaType: (path) Schema type 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)

     - returns: RequestBuilder<ININSchemaReferenceEntityListing> 
     */
    public class func getConfigurationSchemasEdgesVnextSchemacategorySchematypeWithRequestBuilder(schemaCategory schemaCategory: String, schemaType: String, pageSize: Int32? = nil, pageNumber: Int32? = nil) -> RequestBuilder<ININSchemaReferenceEntityListing> {
        var path = "/api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}"
        path = path.stringByReplacingOccurrencesOfString("{schemaCategory}", withString: "\(schemaCategory)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{schemaType}", withString: "\(schemaType)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSchemaReferenceEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a json schema
     
     - parameter schemaCategory: (path) Schema category 
     - parameter schemaType: (path) Schema type 
     - parameter schemaId: (path) Schema ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getConfigurationSchemasEdgesVnextSchemacategorySchematypeSchemaId(schemaCategory schemaCategory: String, schemaType: String, schemaId: String, completion: ((data: ININOrganization?, error: ErrorType?) -> Void)) {
        getConfigurationSchemasEdgesVnextSchemacategorySchematypeSchemaIdWithRequestBuilder(schemaCategory: schemaCategory, schemaType: schemaType, schemaId: schemaId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a json schema
     - GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "thirdPartyOrgName" : "aeiou",
  "defaultSiteId" : "aeiou",
  "domain" : "aeiou",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "thirdPartyOrgId" : "aeiou",
  "thirdPartyURI" : "aeiou",
  "deletable" : true,
  "id" : "aeiou",
  "state" : "aeiou",
  "version" : 123
}}]
     
     - parameter schemaCategory: (path) Schema category 
     - parameter schemaType: (path) Schema type 
     - parameter schemaId: (path) Schema ID 

     - returns: RequestBuilder<ININOrganization> 
     */
    public class func getConfigurationSchemasEdgesVnextSchemacategorySchematypeSchemaIdWithRequestBuilder(schemaCategory schemaCategory: String, schemaType: String, schemaId: String) -> RequestBuilder<ININOrganization> {
        var path = "/api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}"
        path = path.stringByReplacingOccurrencesOfString("{schemaCategory}", withString: "\(schemaCategory)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{schemaType}", withString: "\(schemaType)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{schemaId}", withString: "\(schemaId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININOrganization>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get metadata for a schema
     
     - parameter schemaCategory: (path) Schema category 
     - parameter schemaType: (path) Schema type 
     - parameter schemaId: (path) Schema ID 
     - parameter extensionType: (path) extension 
     - parameter metadataId: (path) Metadata ID 
     - parameter type: (query) Type (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getConfigurationSchemasEdgesVnextSchemacategorySchematypeSchemaIdExtensiontypeMetadataId(schemaCategory schemaCategory: String, schemaType: String, schemaId: String, extensionType: String, metadataId: String, type: String? = nil, completion: ((data: ININOrganization?, error: ErrorType?) -> Void)) {
        getConfigurationSchemasEdgesVnextSchemacategorySchematypeSchemaIdExtensiontypeMetadataIdWithRequestBuilder(schemaCategory: schemaCategory, schemaType: schemaType, schemaId: schemaId, extensionType: extensionType, metadataId: metadataId, type: type).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get metadata for a schema
     - GET /api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "thirdPartyOrgName" : "aeiou",
  "defaultSiteId" : "aeiou",
  "domain" : "aeiou",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "thirdPartyOrgId" : "aeiou",
  "thirdPartyURI" : "aeiou",
  "deletable" : true,
  "id" : "aeiou",
  "state" : "aeiou",
  "version" : 123
}}]
     
     - parameter schemaCategory: (path) Schema category 
     - parameter schemaType: (path) Schema type 
     - parameter schemaId: (path) Schema ID 
     - parameter extensionType: (path) extension 
     - parameter metadataId: (path) Metadata ID 
     - parameter type: (query) Type (optional)

     - returns: RequestBuilder<ININOrganization> 
     */
    public class func getConfigurationSchemasEdgesVnextSchemacategorySchematypeSchemaIdExtensiontypeMetadataIdWithRequestBuilder(schemaCategory schemaCategory: String, schemaType: String, schemaId: String, extensionType: String, metadataId: String, type: String? = nil) -> RequestBuilder<ININOrganization> {
        var path = "/api/v2/configuration/schemas/edges/vnext/{schemaCategory}/{schemaType}/{schemaId}/{extensionType}/{metadataId}"
        path = path.stringByReplacingOccurrencesOfString("{schemaCategory}", withString: "\(schemaCategory)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{schemaType}", withString: "\(schemaType)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{schemaId}", withString: "\(schemaId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionType}", withString: "\(extensionType)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{metadataId}", withString: "\(metadataId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "type": type
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININOrganization>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get the list of edges.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter name: (query) Name (optional)
     - parameter siteId: (query) Filter by site.id (optional)
     - parameter edgeGroupId: (query) Filter by edgeGroup.id (optional)
     - parameter sortBy: (query) Sort by (optional, default to name)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdges(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, name: String? = nil, siteId: String? = nil, edgeGroupId: String? = nil, sortBy: String? = nil, completion: ((data: ININEdgeEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, name: name, siteId: siteId, edgeGroupId: edgeGroupId, sortBy: sortBy).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the list of edges.
     - GET /api/v2/telephony/providers/edges
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "softwareStatus" : {
      "current" : true,
      "executeOnIdle" : true,
      "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
      "maxDownloadRate" : 123,
      "edgeUri" : "aeiou",
      "version" : {
        "latestRelease" : true,
        "current" : true,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "publishDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "edgeUri" : "aeiou",
        "edgeVersion" : "aeiou"
      },
      "executeStopTime" : "2000-01-23T04:56:07.000+0000",
      "executeStartTime" : "2000-01-23T04:56:07.000+0000",
      "status" : "aeiou"
    },
    "fullSoftwareVersion" : "aeiou",
    "onlineStatus" : "aeiou",
    "description" : "aeiou",
    "createdByApp" : "aeiou",
    "edgeGroup" : {
      "phoneTrunkBaseAssignments" : [ "" ],
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "version" : 123,
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "aeiou",
      "managed" : true,
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "edgeTrunkBaseAssignment" : {
        "family" : 123,
        "trunkBase" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "phoneTrunkBases" : [ "" ]
    },
    "patch" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "apiVersion" : "aeiou",
    "managed" : true,
    "fingerprint" : "aeiou",
    "modifiedBy" : "aeiou",
    "model" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "make" : "aeiou",
    "stagedVersion" : "aeiou",
    "interfaces" : [ {
      "macAddress" : "aeiou",
      "endpoints" : [ {
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou"
      } ],
      "ifName" : "aeiou",
      "ipAddress" : "aeiou",
      "name" : "aeiou",
      "type" : "aeiou",
      "lineTypes" : [ "aeiou" ],
      "addressFamilyId" : "aeiou"
    } ],
    "serialNumber" : "aeiou",
    "softwareVersionConfiguration" : "aeiou",
    "physicalEdge" : true,
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "version" : 123,
    "currentVersion" : "aeiou",
    "site" : "",
    "softwareVersionPlatform" : "aeiou",
    "fingerprintHint" : "aeiou",
    "createdBy" : "aeiou",
    "softwareVersionTimestamp" : "aeiou",
    "pairingId" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "softwareVersion" : "aeiou",
    "statusCode" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter name: (query) Name (optional)
     - parameter siteId: (query) Filter by site.id (optional)
     - parameter edgeGroupId: (query) Filter by edgeGroup.id (optional)
     - parameter sortBy: (query) Sort by (optional, default to name)

     - returns: RequestBuilder<ININEdgeEntityListing> 
     */
    public class func getTelephonyProvidersEdgesWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, name: String? = nil, siteId: String? = nil, edgeGroupId: String? = nil, sortBy: String? = nil) -> RequestBuilder<ININEdgeEntityListing> {
        let path = "/api/v2/telephony/providers/edges"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "name": name,
            "site.id": siteId,
            "edgeGroup.id": edgeGroupId,
            "sortBy": sortBy
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get the list of available languages.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesAvailablelanguages(completion: ((data: ININAvailableLanguageList?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesAvailablelanguagesWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the list of available languages.
     - GET /api/v2/telephony/providers/edges/availablelanguages
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "languages" : [ "aeiou" ]
}}]

     - returns: RequestBuilder<ININAvailableLanguageList> 
     */
    public class func getTelephonyProvidersEdgesAvailablelanguagesWithRequestBuilder() -> RequestBuilder<ININAvailableLanguageList> {
        let path = "/api/v2/telephony/providers/edges/availablelanguages"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAvailableLanguageList>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the list of certificate authorities.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesCertificateauthorities(completion: ((data: ININCertificateAuthorityEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesCertificateauthoritiesWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the list of certificate authorities.
     - GET /api/v2/telephony/providers/edges/certificateauthorities
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "certificateDetails" : [ {
      "valid" : true,
      "signatureValid" : true,
      "expired" : true,
      "subject" : "aeiou",
      "issueDate" : "2000-01-23T04:56:07.000+0000",
      "issuer" : "aeiou",
      "expirationDate" : "2000-01-23T04:56:07.000+0000"
    } ],
    "selfUri" : "aeiou",
    "certificate" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "services" : [ "aeiou" ],
    "createdByApp" : "aeiou",
    "type" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]

     - returns: RequestBuilder<ININCertificateAuthorityEntityListing> 
     */
    public class func getTelephonyProvidersEdgesCertificateauthoritiesWithRequestBuilder() -> RequestBuilder<ININCertificateAuthorityEntityListing> {
        let path = "/api/v2/telephony/providers/edges/certificateauthorities"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCertificateAuthorityEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a certificate authority.
     
     - parameter certificateId: (path) Certificate ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesCertificateauthoritiesCertificateId(certificateId certificateId: String, completion: ((data: ININDomainCertificateAuthority?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesCertificateauthoritiesCertificateIdWithRequestBuilder(certificateId: certificateId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a certificate authority.
     - GET /api/v2/telephony/providers/edges/certificateauthorities/{certificateId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "certificateDetails" : [ {
    "valid" : true,
    "signatureValid" : true,
    "expired" : true,
    "subject" : "aeiou",
    "issueDate" : "2000-01-23T04:56:07.000+0000",
    "issuer" : "aeiou",
    "expirationDate" : "2000-01-23T04:56:07.000+0000"
  } ],
  "selfUri" : "aeiou",
  "certificate" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "services" : [ "aeiou" ],
  "createdByApp" : "aeiou",
  "type" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter certificateId: (path) Certificate ID 

     - returns: RequestBuilder<ININDomainCertificateAuthority> 
     */
    public class func getTelephonyProvidersEdgesCertificateauthoritiesCertificateIdWithRequestBuilder(certificateId certificateId: String) -> RequestBuilder<ININDomainCertificateAuthority> {
        var path = "/api/v2/telephony/providers/edges/certificateauthorities/{certificateId}"
        path = path.stringByReplacingOccurrencesOfString("{certificateId}", withString: "\(certificateId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDomainCertificateAuthority>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a listing of DID Pools
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to number)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesDidpools(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, completion: ((data: ININDIDPoolEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesDidpoolsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a listing of DID Pools
     - GET /api/v2/telephony/providers/edges/didpools
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "comments" : "aeiou",
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "provider" : "aeiou",
    "startPhoneNumber" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "endPhoneNumber" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to number)

     - returns: RequestBuilder<ININDIDPoolEntityListing> 
     */
    public class func getTelephonyProvidersEdgesDidpoolsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil) -> RequestBuilder<ININDIDPoolEntityListing> {
        let path = "/api/v2/telephony/providers/edges/didpools"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "sortBy": sortBy
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDIDPoolEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a DID Pool by ID.
     
     - parameter didPoolId: (path) DID pool ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesDidpoolsDidpoolId(didPoolId didPoolId: String, completion: ((data: ININDIDPool?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesDidpoolsDidpoolIdWithRequestBuilder(didPoolId: didPoolId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a DID Pool by ID.
     - GET /api/v2/telephony/providers/edges/didpools/{didPoolId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "comments" : "aeiou",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "provider" : "aeiou",
  "startPhoneNumber" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "endPhoneNumber" : "aeiou"
}}]
     
     - parameter didPoolId: (path) DID pool ID 

     - returns: RequestBuilder<ININDIDPool> 
     */
    public class func getTelephonyProvidersEdgesDidpoolsDidpoolIdWithRequestBuilder(didPoolId didPoolId: String) -> RequestBuilder<ININDIDPool> {
        var path = "/api/v2/telephony/providers/edges/didpools/{didPoolId}"
        path = path.stringByReplacingOccurrencesOfString("{didPoolId}", withString: "\(didPoolId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDIDPool>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a listing of DIDs
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to number)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter phoneNumber: (query) Filter by phoneNumber (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesDids(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, phoneNumber: String? = nil, completion: ((data: ININDIDEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesDidsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder, phoneNumber: phoneNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a listing of DIDs
     - GET /api/v2/telephony/providers/edges/dids
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "owner" : "",
    "ownerType" : "aeiou",
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "phoneNumber" : "aeiou",
    "createdBy" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "didPool" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to number)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter phoneNumber: (query) Filter by phoneNumber (optional)

     - returns: RequestBuilder<ININDIDEntityListing> 
     */
    public class func getTelephonyProvidersEdgesDidsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, phoneNumber: String? = nil) -> RequestBuilder<ININDIDEntityListing> {
        let path = "/api/v2/telephony/providers/edges/dids"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "sortBy": sortBy,
            "sortOrder": sortOrder,
            "phoneNumber": phoneNumber
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDIDEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a DID by ID.
     
     - parameter didId: (path) DID ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesDidsDidId(didId didId: String, completion: ((data: ININDID?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesDidsDidIdWithRequestBuilder(didId: didId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a DID by ID.
     - GET /api/v2/telephony/providers/edges/dids/{didId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "owner" : "",
  "ownerType" : "aeiou",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "phoneNumber" : "aeiou",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "didPool" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter didId: (path) DID ID 

     - returns: RequestBuilder<ININDID> 
     */
    public class func getTelephonyProvidersEdgesDidsDidIdWithRequestBuilder(didId didId: String) -> RequestBuilder<ININDID> {
        var path = "/api/v2/telephony/providers/edges/dids/{didId}"
        path = path.stringByReplacingOccurrencesOfString("{didId}", withString: "\(didId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDID>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get edge.
     
     - parameter edgeId: (path) Edge ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeId(edgeId edgeId: String, completion: ((data: ININEdge?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeIdWithRequestBuilder(edgeId: edgeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get edge.
     - GET /api/v2/telephony/providers/edges/{edgeId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "softwareStatus" : {
    "current" : true,
    "executeOnIdle" : true,
    "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
    "maxDownloadRate" : 123,
    "edgeUri" : "aeiou",
    "version" : {
      "latestRelease" : true,
      "current" : true,
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "publishDate" : "2000-01-23T04:56:07.000+0000",
      "id" : "aeiou",
      "edgeUri" : "aeiou",
      "edgeVersion" : "aeiou"
    },
    "executeStopTime" : "2000-01-23T04:56:07.000+0000",
    "executeStartTime" : "2000-01-23T04:56:07.000+0000",
    "status" : "aeiou"
  },
  "fullSoftwareVersion" : "aeiou",
  "onlineStatus" : "aeiou",
  "description" : "aeiou",
  "createdByApp" : "aeiou",
  "edgeGroup" : {
    "phoneTrunkBaseAssignments" : [ "" ],
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "managed" : true,
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "edgeTrunkBaseAssignment" : {
      "family" : 123,
      "trunkBase" : ""
    },
    "id" : "aeiou",
    "state" : "aeiou",
    "phoneTrunkBases" : [ "" ]
  },
  "patch" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "apiVersion" : "aeiou",
  "managed" : true,
  "fingerprint" : "aeiou",
  "modifiedBy" : "aeiou",
  "model" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "make" : "aeiou",
  "stagedVersion" : "aeiou",
  "interfaces" : [ {
    "macAddress" : "aeiou",
    "endpoints" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    } ],
    "ifName" : "aeiou",
    "ipAddress" : "aeiou",
    "name" : "aeiou",
    "type" : "aeiou",
    "lineTypes" : [ "aeiou" ],
    "addressFamilyId" : "aeiou"
  } ],
  "serialNumber" : "aeiou",
  "softwareVersionConfiguration" : "aeiou",
  "physicalEdge" : true,
  "selfUri" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "version" : 123,
  "currentVersion" : "aeiou",
  "site" : "",
  "softwareVersionPlatform" : "aeiou",
  "fingerprintHint" : "aeiou",
  "createdBy" : "aeiou",
  "softwareVersionTimestamp" : "aeiou",
  "pairingId" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "softwareVersion" : "aeiou",
  "statusCode" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 

     - returns: RequestBuilder<ININEdge> 
     */
    public class func getTelephonyProvidersEdgesEdgeIdWithRequestBuilder(edgeId edgeId: String) -> RequestBuilder<ININEdge> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdge>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the list of lines.
     
     - parameter edgeId: (path) Edge ID 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeIdLines(edgeId edgeId: String, pageSize: Int32? = nil, pageNumber: Int32? = nil, completion: ((data: ININEdgeLineEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeIdLinesWithRequestBuilder(edgeId: edgeId, pageSize: pageSize, pageNumber: pageNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the list of lines.
     - GET /api/v2/telephony/providers/edges/{edgeId}/lines
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "schema" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "edge" : {
      "softwareStatus" : {
        "current" : true,
        "executeOnIdle" : true,
        "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
        "maxDownloadRate" : 123,
        "edgeUri" : "aeiou",
        "version" : {
          "latestRelease" : true,
          "current" : true,
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "publishDate" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "edgeUri" : "aeiou",
          "edgeVersion" : "aeiou"
        },
        "executeStopTime" : "2000-01-23T04:56:07.000+0000",
        "executeStartTime" : "2000-01-23T04:56:07.000+0000",
        "status" : "aeiou"
      },
      "fullSoftwareVersion" : "aeiou",
      "onlineStatus" : "aeiou",
      "description" : "aeiou",
      "createdByApp" : "aeiou",
      "edgeGroup" : {
        "phoneTrunkBaseAssignments" : [ "" ],
        "selfUri" : "aeiou",
        "description" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "createdByApp" : "aeiou",
        "version" : 123,
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "aeiou",
        "managed" : true,
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "modifiedBy" : "aeiou",
        "edgeTrunkBaseAssignment" : {
          "family" : 123,
          "trunkBase" : ""
        },
        "id" : "aeiou",
        "state" : "aeiou",
        "phoneTrunkBases" : [ "" ]
      },
      "patch" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "apiVersion" : "aeiou",
      "managed" : true,
      "fingerprint" : "aeiou",
      "modifiedBy" : "aeiou",
      "model" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "make" : "aeiou",
      "stagedVersion" : "aeiou",
      "interfaces" : [ {
        "macAddress" : "aeiou",
        "endpoints" : [ "" ],
        "ifName" : "aeiou",
        "ipAddress" : "aeiou",
        "name" : "aeiou",
        "type" : "aeiou",
        "lineTypes" : [ "aeiou" ],
        "addressFamilyId" : "aeiou"
      } ],
      "serialNumber" : "aeiou",
      "softwareVersionConfiguration" : "aeiou",
      "physicalEdge" : true,
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "version" : 123,
      "currentVersion" : "aeiou",
      "site" : "",
      "softwareVersionPlatform" : "aeiou",
      "fingerprintHint" : "aeiou",
      "createdBy" : "aeiou",
      "softwareVersionTimestamp" : "aeiou",
      "pairingId" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "softwareVersion" : "aeiou",
      "statusCode" : "aeiou"
    },
    "endpoint" : {
      "schema" : "",
      "selfUri" : "aeiou",
      "count" : 123,
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "version" : 123,
      "enabled" : true,
      "site" : "",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "dids" : [ "aeiou" ],
      "properties" : {
        "key" : "{}"
      }
    },
    "lineType" : "aeiou",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "ipAddress" : "aeiou",
    "id" : "aeiou",
    "edgeGroup" : "",
    "logicalInterfaceId" : "aeiou",
    "properties" : {
      "key" : "{}"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)

     - returns: RequestBuilder<ININEdgeLineEntityListing> 
     */
    public class func getTelephonyProvidersEdgesEdgeIdLinesWithRequestBuilder(edgeId edgeId: String, pageSize: Int32? = nil, pageNumber: Int32? = nil) -> RequestBuilder<ININEdgeLineEntityListing> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/lines"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeLineEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get line
     
     - parameter edgeId: (path) Edge ID 
     - parameter lineId: (path) Line ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeIdLinesLineId(edgeId edgeId: String, lineId: String, completion: ((data: ININEdgeLine?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeIdLinesLineIdWithRequestBuilder(edgeId: edgeId, lineId: lineId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get line
     - GET /api/v2/telephony/providers/edges/{edgeId}/lines/{lineId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "schema" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "edge" : {
    "softwareStatus" : {
      "current" : true,
      "executeOnIdle" : true,
      "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
      "maxDownloadRate" : 123,
      "edgeUri" : "aeiou",
      "version" : {
        "latestRelease" : true,
        "current" : true,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "publishDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "edgeUri" : "aeiou",
        "edgeVersion" : "aeiou"
      },
      "executeStopTime" : "2000-01-23T04:56:07.000+0000",
      "executeStartTime" : "2000-01-23T04:56:07.000+0000",
      "status" : "aeiou"
    },
    "fullSoftwareVersion" : "aeiou",
    "onlineStatus" : "aeiou",
    "description" : "aeiou",
    "createdByApp" : "aeiou",
    "edgeGroup" : {
      "phoneTrunkBaseAssignments" : [ "" ],
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "version" : 123,
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "aeiou",
      "managed" : true,
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "edgeTrunkBaseAssignment" : {
        "family" : 123,
        "trunkBase" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "phoneTrunkBases" : [ "" ]
    },
    "patch" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "apiVersion" : "aeiou",
    "managed" : true,
    "fingerprint" : "aeiou",
    "modifiedBy" : "aeiou",
    "model" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "make" : "aeiou",
    "stagedVersion" : "aeiou",
    "interfaces" : [ {
      "macAddress" : "aeiou",
      "endpoints" : [ "" ],
      "ifName" : "aeiou",
      "ipAddress" : "aeiou",
      "name" : "aeiou",
      "type" : "aeiou",
      "lineTypes" : [ "aeiou" ],
      "addressFamilyId" : "aeiou"
    } ],
    "serialNumber" : "aeiou",
    "softwareVersionConfiguration" : "aeiou",
    "physicalEdge" : true,
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "version" : 123,
    "currentVersion" : "aeiou",
    "site" : "",
    "softwareVersionPlatform" : "aeiou",
    "fingerprintHint" : "aeiou",
    "createdBy" : "aeiou",
    "softwareVersionTimestamp" : "aeiou",
    "pairingId" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "softwareVersion" : "aeiou",
    "statusCode" : "aeiou"
  },
  "endpoint" : {
    "schema" : "",
    "selfUri" : "aeiou",
    "count" : 123,
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "enabled" : true,
    "site" : "",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "dids" : [ "aeiou" ],
    "properties" : {
      "key" : "{}"
    }
  },
  "lineType" : "aeiou",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "ipAddress" : "aeiou",
  "id" : "aeiou",
  "edgeGroup" : "",
  "logicalInterfaceId" : "aeiou",
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter lineId: (path) Line ID 

     - returns: RequestBuilder<ININEdgeLine> 
     */
    public class func getTelephonyProvidersEdgesEdgeIdLinesLineIdWithRequestBuilder(edgeId edgeId: String, lineId: String) -> RequestBuilder<ININEdgeLine> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/lines/{lineId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{lineId}", withString: "\(lineId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeLine>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get edge logical interfaces.
     
     - parameter edgeId: (path) Edge ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeIdLogicalinterfaces(edgeId edgeId: String, completion: ((data: ININLogicalInterfaceEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeIdLogicalinterfacesWithRequestBuilder(edgeId: edgeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get edge logical interfaces.
     - GET /api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces
     - Retrieve a list of all configured logical interfaces from a specific edge.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "hardwareAddress" : "aeiou",
    "addresses" : [ {
      "address" : "aeiou",
      "type" : "aeiou",
      "persistent" : true,
      "family" : 123
    } ],
    "phoneTrunkBaseAssignments" : [ "" ],
    "primaryDns" : "aeiou",
    "externalTrunkBaseAssignments" : [ {
      "family" : 123,
      "trunkBase" : {
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou"
      }
    } ],
    "description" : "aeiou",
    "createdByApp" : "aeiou",
    "useForInternalEdgeCommunication" : true,
    "routes" : [ {
      "metric" : 123,
      "prefix" : "aeiou",
      "persistent" : true,
      "family" : 123,
      "nexthop" : "aeiou"
    } ],
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "lastModifiedUserId" : "aeiou",
    "lastModifiedCorrelationId" : "aeiou",
    "modifiedBy" : "aeiou",
    "secondaryDns" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "friendlyName" : "aeiou",
    "commandResponses" : [ {
      "commandName" : "aeiou",
      "acknowledged" : true,
      "errorInfo" : {
        "messageWithParams" : "aeiou",
        "code" : "aeiou",
        "contextId" : "aeiou",
        "details" : "aeiou",
        "messageParams" : {
          "key" : "aeiou"
        },
        "message" : "aeiou",
        "nested" : "",
        "status" : 123
      },
      "correlationId" : "aeiou"
    } ],
    "inheritPhoneTrunkBases" : true,
    "ifStatus" : "aeiou",
    "selfUri" : "aeiou",
    "ipAddress" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "ipv6Capabilities" : "",
    "version" : 123,
    "ipv4Capabilities" : {
      "metric" : 123,
      "enabled" : true,
      "dhcp" : true
    },
    "inheritPhoneTrunkBasesIPv6" : true,
    "physicalAdapterId" : "aeiou",
    "createdBy" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "edgeAssignedId" : "aeiou",
    "vlanTagId" : 123,
    "edgeUri" : "aeiou",
    "currentState" : "aeiou",
    "gateway" : "aeiou",
    "inheritPhoneTrunkBasesIPv4" : true
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 

     - returns: RequestBuilder<ININLogicalInterfaceEntityListing> 
     */
    public class func getTelephonyProvidersEdgesEdgeIdLogicalinterfacesWithRequestBuilder(edgeId edgeId: String) -> RequestBuilder<ININLogicalInterfaceEntityListing> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLogicalInterfaceEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get an edge logical interface
     
     - parameter edgeId: (path) Edge ID 
     - parameter interfaceId: (path) Interface ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeIdLogicalinterfacesInterfaceId(edgeId edgeId: String, interfaceId: String, completion: ((data: ININDomainLogicalInterface?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeIdLogicalinterfacesInterfaceIdWithRequestBuilder(edgeId: edgeId, interfaceId: interfaceId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get an edge logical interface
     - GET /api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces/{interfaceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "hardwareAddress" : "aeiou",
  "addresses" : [ {
    "address" : "aeiou",
    "type" : "aeiou",
    "persistent" : true,
    "family" : 123
  } ],
  "phoneTrunkBaseAssignments" : [ "" ],
  "primaryDns" : "aeiou",
  "externalTrunkBaseAssignments" : [ {
    "family" : 123,
    "trunkBase" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    }
  } ],
  "description" : "aeiou",
  "createdByApp" : "aeiou",
  "useForInternalEdgeCommunication" : true,
  "routes" : [ {
    "metric" : 123,
    "prefix" : "aeiou",
    "persistent" : true,
    "family" : 123,
    "nexthop" : "aeiou"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "lastModifiedUserId" : "aeiou",
  "lastModifiedCorrelationId" : "aeiou",
  "modifiedBy" : "aeiou",
  "secondaryDns" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "friendlyName" : "aeiou",
  "commandResponses" : [ {
    "commandName" : "aeiou",
    "acknowledged" : true,
    "errorInfo" : {
      "messageWithParams" : "aeiou",
      "code" : "aeiou",
      "contextId" : "aeiou",
      "details" : "aeiou",
      "messageParams" : {
        "key" : "aeiou"
      },
      "message" : "aeiou",
      "nested" : "",
      "status" : 123
    },
    "correlationId" : "aeiou"
  } ],
  "inheritPhoneTrunkBases" : true,
  "ifStatus" : "aeiou",
  "selfUri" : "aeiou",
  "ipAddress" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "ipv6Capabilities" : "",
  "version" : 123,
  "ipv4Capabilities" : {
    "metric" : 123,
    "enabled" : true,
    "dhcp" : true
  },
  "inheritPhoneTrunkBasesIPv6" : true,
  "physicalAdapterId" : "aeiou",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "edgeAssignedId" : "aeiou",
  "vlanTagId" : 123,
  "edgeUri" : "aeiou",
  "currentState" : "aeiou",
  "gateway" : "aeiou",
  "inheritPhoneTrunkBasesIPv4" : true
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter interfaceId: (path) Interface ID 

     - returns: RequestBuilder<ININDomainLogicalInterface> 
     */
    public class func getTelephonyProvidersEdgesEdgeIdLogicalinterfacesInterfaceIdWithRequestBuilder(edgeId edgeId: String, interfaceId: String) -> RequestBuilder<ININDomainLogicalInterface> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces/{interfaceId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{interfaceId}", withString: "\(interfaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDomainLogicalInterface>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get an Edge logs job.
     
     - parameter edgeId: (path) Edge ID 
     - parameter jobId: (path) Job ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeIdLogsJobsJobId(edgeId edgeId: String, jobId: String, completion: ((data: ININEdgeLogsJob?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeIdLogsJobsJobIdWithRequestBuilder(edgeId: edgeId, jobId: jobId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get an Edge logs job.
     - GET /api/v2/telephony/providers/edges/{edgeId}/logs/jobs/{jobId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "files" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "uploadStatus" : "aeiou",
    "downloadId" : "aeiou",
    "timeCreated" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "edgePath" : "aeiou",
    "timeModified" : "2000-01-23T04:56:07.000+0000",
    "sizeBytes" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "id" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter jobId: (path) Job ID 

     - returns: RequestBuilder<ININEdgeLogsJob> 
     */
    public class func getTelephonyProvidersEdgesEdgeIdLogsJobsJobIdWithRequestBuilder(edgeId edgeId: String, jobId: String) -> RequestBuilder<ININEdgeLogsJob> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/logs/jobs/{jobId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeLogsJob>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Retrieve a list of all configured physical interfaces from a specific edge.
     
     - parameter edgeId: (path) Edge ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeIdPhysicalinterfaces(edgeId edgeId: String, completion: ((data: ININPhysicalInterfaceEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeIdPhysicalinterfacesWithRequestBuilder(edgeId: edgeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Retrieve a list of all configured physical interfaces from a specific edge.
     - GET /api/v2/telephony/providers/edges/{edgeId}/physicalinterfaces
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "hardwareAddress" : "aeiou",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou",
    "edgeUri" : "aeiou",
    "portLabel" : "aeiou",
    "physicalCapabilities" : {
      "vlan" : true,
      "team" : true
    },
    "friendlyName" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 

     - returns: RequestBuilder<ININPhysicalInterfaceEntityListing> 
     */
    public class func getTelephonyProvidersEdgesEdgeIdPhysicalinterfacesWithRequestBuilder(edgeId edgeId: String) -> RequestBuilder<ININPhysicalInterfaceEntityListing> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/physicalinterfaces"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhysicalInterfaceEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get edge physical interface.
     
     - parameter edgeId: (path) Edge ID 
     - parameter interfaceId: (path) Interface ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeIdPhysicalinterfacesInterfaceId(edgeId edgeId: String, interfaceId: String, completion: ((data: ININDomainPhysicalInterface?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeIdPhysicalinterfacesInterfaceIdWithRequestBuilder(edgeId: edgeId, interfaceId: interfaceId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get edge physical interface.
     - GET /api/v2/telephony/providers/edges/{edgeId}/physicalinterfaces/{interfaceId}
     - Retrieve a physical interface from a specific edge.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "hardwareAddress" : "aeiou",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "id" : "aeiou",
  "edgeUri" : "aeiou",
  "portLabel" : "aeiou",
  "physicalCapabilities" : {
    "vlan" : true,
    "team" : true
  },
  "friendlyName" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter interfaceId: (path) Interface ID 

     - returns: RequestBuilder<ININDomainPhysicalInterface> 
     */
    public class func getTelephonyProvidersEdgesEdgeIdPhysicalinterfacesInterfaceIdWithRequestBuilder(edgeId edgeId: String, interfaceId: String) -> RequestBuilder<ININDomainPhysicalInterface> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/physicalinterfaces/{interfaceId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{interfaceId}", withString: "\(interfaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDomainPhysicalInterface>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets software update status information about any edge.
     
     - parameter edgeId: (path) Edge ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeIdSoftwareupdate(edgeId edgeId: String, completion: ((data: ININDomainEdgeSoftwareUpdateDto?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeIdSoftwareupdateWithRequestBuilder(edgeId: edgeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets software update status information about any edge.
     - GET /api/v2/telephony/providers/edges/{edgeId}/softwareupdate
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "current" : true,
  "executeOnIdle" : true,
  "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
  "maxDownloadRate" : 123,
  "edgeUri" : "aeiou",
  "version" : {
    "latestRelease" : true,
    "current" : true,
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "publishDate" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "edgeUri" : "aeiou",
    "edgeVersion" : "aeiou"
  },
  "executeStopTime" : "2000-01-23T04:56:07.000+0000",
  "executeStartTime" : "2000-01-23T04:56:07.000+0000",
  "status" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 

     - returns: RequestBuilder<ININDomainEdgeSoftwareUpdateDto> 
     */
    public class func getTelephonyProvidersEdgesEdgeIdSoftwareupdateWithRequestBuilder(edgeId edgeId: String) -> RequestBuilder<ININDomainEdgeSoftwareUpdateDto> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/softwareupdate"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDomainEdgeSoftwareUpdateDto>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets all the available software versions for this edge.
     
     - parameter edgeId: (path) Edge ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeIdSoftwareversions(edgeId edgeId: String, completion: ((data: ININDomainEdgeSoftwareVersionDto?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeIdSoftwareversionsWithRequestBuilder(edgeId: edgeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets all the available software versions for this edge.
     - GET /api/v2/telephony/providers/edges/{edgeId}/softwareversions
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "latestRelease" : true,
  "current" : true,
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "publishDate" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "edgeUri" : "aeiou",
  "edgeVersion" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 

     - returns: RequestBuilder<ININDomainEdgeSoftwareVersionDto> 
     */
    public class func getTelephonyProvidersEdgesEdgeIdSoftwareversionsWithRequestBuilder(edgeId edgeId: String) -> RequestBuilder<ININDomainEdgeSoftwareVersionDto> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/softwareversions"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDomainEdgeSoftwareVersionDto>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the list of edge groups.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional, default to name)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgegroups(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, name: String? = nil, sortBy: String? = nil, completion: ((data: ININEdgeGroupEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgegroupsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, name: name, sortBy: sortBy).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the list of edge groups.
     - GET /api/v2/telephony/providers/edges/edgegroups
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "phoneTrunkBaseAssignments" : [ "" ],
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "managed" : true,
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "edgeTrunkBaseAssignment" : {
      "family" : 123,
      "trunkBase" : {
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou"
      }
    },
    "id" : "aeiou",
    "state" : "aeiou",
    "phoneTrunkBases" : [ "" ]
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional, default to name)

     - returns: RequestBuilder<ININEdgeGroupEntityListing> 
     */
    public class func getTelephonyProvidersEdgesEdgegroupsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, name: String? = nil, sortBy: String? = nil) -> RequestBuilder<ININEdgeGroupEntityListing> {
        let path = "/api/v2/telephony/providers/edges/edgegroups"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "name": name,
            "sortBy": sortBy
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeGroupEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get edge group.
     
     - parameter edgeGroupId: (path) Edge group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgegroupsEdgegroupId(edgeGroupId edgeGroupId: String, completion: ((data: ININEdgeGroup?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgegroupsEdgegroupIdWithRequestBuilder(edgeGroupId: edgeGroupId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get edge group.
     - GET /api/v2/telephony/providers/edges/edgegroups/{edgeGroupId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "phoneTrunkBaseAssignments" : [ "" ],
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "edgeTrunkBaseAssignment" : {
    "family" : 123,
    "trunkBase" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    }
  },
  "id" : "aeiou",
  "state" : "aeiou",
  "phoneTrunkBases" : [ "" ]
}}]
     
     - parameter edgeGroupId: (path) Edge group ID 

     - returns: RequestBuilder<ININEdgeGroup> 
     */
    public class func getTelephonyProvidersEdgesEdgegroupsEdgegroupIdWithRequestBuilder(edgeGroupId edgeGroupId: String) -> RequestBuilder<ININEdgeGroup> {
        var path = "/api/v2/telephony/providers/edges/edgegroups/{edgeGroupId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeGroupId}", withString: "\(edgeGroupId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeGroup>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the edge version report.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEdgeversionreport(completion: ((data: ININEdgeVersionReport?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEdgeversionreportWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the edge version report.
     - GET /api/v2/telephony/providers/edges/edgeversionreport
     - The report will not have consistent data about the edge version(s) until all edges have been reset.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "oldestVersion" : {
    "softwareVersion" : "aeiou"
  },
  "newestVersion" : ""
}}]

     - returns: RequestBuilder<ININEdgeVersionReport> 
     */
    public class func getTelephonyProvidersEdgesEdgeversionreportWithRequestBuilder() -> RequestBuilder<ININEdgeVersionReport> {
        let path = "/api/v2/telephony/providers/edges/edgeversionreport"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeVersionReport>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get endpoints
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional, default to name)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEndpoints(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, name: String? = nil, sortBy: String? = nil, completion: ((data: ININEndpointEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEndpointsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, name: name, sortBy: sortBy).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get endpoints
     - GET /api/v2/telephony/providers/edges/endpoints
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "schema" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "selfUri" : "aeiou",
    "count" : 123,
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "enabled" : true,
    "site" : "",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "dids" : [ "aeiou" ],
    "properties" : {
      "key" : "{}"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional, default to name)

     - returns: RequestBuilder<ININEndpointEntityListing> 
     */
    public class func getTelephonyProvidersEdgesEndpointsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, name: String? = nil, sortBy: String? = nil) -> RequestBuilder<ININEndpointEntityListing> {
        let path = "/api/v2/telephony/providers/edges/endpoints"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "name": name,
            "sortBy": sortBy
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEndpointEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get endpoint
     
     - parameter endpointId: (path) Endpoint ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesEndpointsEndpointId(endpointId endpointId: String, completion: ((data: ININEndpoint?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesEndpointsEndpointIdWithRequestBuilder(endpointId: endpointId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get endpoint
     - GET /api/v2/telephony/providers/edges/endpoints/{endpointId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "schema" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "selfUri" : "aeiou",
  "count" : 123,
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "enabled" : true,
  "site" : "",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "dids" : [ "aeiou" ],
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter endpointId: (path) Endpoint ID 

     - returns: RequestBuilder<ININEndpoint> 
     */
    public class func getTelephonyProvidersEdgesEndpointsEndpointIdWithRequestBuilder(endpointId endpointId: String) -> RequestBuilder<ININEndpoint> {
        var path = "/api/v2/telephony/providers/edges/endpoints/{endpointId}"
        path = path.stringByReplacingOccurrencesOfString("{endpointId}", withString: "\(endpointId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEndpoint>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a listing of extension pools
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to startNumber)
     - parameter number: (query) Number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesExtensionpools(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, number: String? = nil, completion: ((data: ININExtensionPoolEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesExtensionpoolsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, number: number).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a listing of extension pools
     - GET /api/v2/telephony/providers/edges/extensionpools
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "startNumber" : "aeiou",
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "endNumber" : "aeiou",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to startNumber)
     - parameter number: (query) Number (optional)

     - returns: RequestBuilder<ININExtensionPoolEntityListing> 
     */
    public class func getTelephonyProvidersEdgesExtensionpoolsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, number: String? = nil) -> RequestBuilder<ININExtensionPoolEntityListing> {
        let path = "/api/v2/telephony/providers/edges/extensionpools"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "sortBy": sortBy,
            "number": number
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININExtensionPoolEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get an extension pool by ID
     
     - parameter extensionPoolId: (path) Extension pool ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesExtensionpoolsExtensionpoolId(extensionPoolId extensionPoolId: String, completion: ((data: ININExtensionPool?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesExtensionpoolsExtensionpoolIdWithRequestBuilder(extensionPoolId: extensionPoolId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get an extension pool by ID
     - GET /api/v2/telephony/providers/edges/extensionpools/{extensionPoolId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "startNumber" : "aeiou",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "endNumber" : "aeiou",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter extensionPoolId: (path) Extension pool ID 

     - returns: RequestBuilder<ININExtensionPool> 
     */
    public class func getTelephonyProvidersEdgesExtensionpoolsExtensionpoolIdWithRequestBuilder(extensionPoolId extensionPoolId: String) -> RequestBuilder<ININExtensionPool> {
        var path = "/api/v2/telephony/providers/edges/extensionpools/{extensionPoolId}"
        path = path.stringByReplacingOccurrencesOfString("{extensionPoolId}", withString: "\(extensionPoolId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININExtensionPool>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a listing of extensions
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to number)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter number: (query) Filter by number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesExtensions(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, number: String? = nil, completion: ((data: ININExtensionEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesExtensionsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder, number: number).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a listing of extensions
     - GET /api/v2/telephony/providers/edges/extensions
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "owner" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "ownerType" : "aeiou",
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "number" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "extensionPool" : "",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to number)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter number: (query) Filter by number (optional)

     - returns: RequestBuilder<ININExtensionEntityListing> 
     */
    public class func getTelephonyProvidersEdgesExtensionsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, number: String? = nil) -> RequestBuilder<ININExtensionEntityListing> {
        let path = "/api/v2/telephony/providers/edges/extensions"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "sortBy": sortBy,
            "sortOrder": sortOrder,
            "number": number
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININExtensionEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get an extension by ID.
     
     - parameter extensionId: (path) Extension ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesExtensionsExtensionId(extensionId extensionId: String, completion: ((data: ININExtension?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesExtensionsExtensionIdWithRequestBuilder(extensionId: extensionId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get an extension by ID.
     - GET /api/v2/telephony/providers/edges/extensions/{extensionId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "owner" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "ownerType" : "aeiou",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "number" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "extensionPool" : "",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter extensionId: (path) Extension ID 

     - returns: RequestBuilder<ININExtension> 
     */
    public class func getTelephonyProvidersEdgesExtensionsExtensionIdWithRequestBuilder(extensionId extensionId: String) -> RequestBuilder<ININExtension> {
        var path = "/api/v2/telephony/providers/edges/extensions/{extensionId}"
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININExtension>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a listing of line base settings objects
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesLinebasesettings(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, completion: ((data: ININLineBaseEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesLinebasesettingsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a listing of line base settings objects
     - GET /api/v2/telephony/providers/edges/linebasesettings
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou",
    "properties" : {
      "key" : "{}"
    },
    "lineMetaBase" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)

     - returns: RequestBuilder<ININLineBaseEntityListing> 
     */
    public class func getTelephonyProvidersEdgesLinebasesettingsWithRequestBuilder(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil) -> RequestBuilder<ININLineBaseEntityListing> {
        let path = "/api/v2/telephony/providers/edges/linebasesettings"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageNumber": pageNumber?.encodeToJSON(),
            "pageSize": pageSize?.encodeToJSON(),
            "sortBy": sortBy,
            "sortOrder": sortOrder
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLineBaseEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a line base settings object by ID
     
     - parameter lineBaseId: (path) Line base ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesLinebasesettingsLinebaseId(lineBaseId lineBaseId: String, completion: ((data: ININLineBase?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesLinebasesettingsLinebaseIdWithRequestBuilder(lineBaseId: lineBaseId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a line base settings object by ID
     - GET /api/v2/telephony/providers/edges/linebasesettings/{lineBaseId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "id" : "aeiou",
  "properties" : {
    "key" : "{}"
  },
  "lineMetaBase" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  }
}}]
     
     - parameter lineBaseId: (path) Line base ID 

     - returns: RequestBuilder<ININLineBase> 
     */
    public class func getTelephonyProvidersEdgesLinebasesettingsLinebaseIdWithRequestBuilder(lineBaseId lineBaseId: String) -> RequestBuilder<ININLineBase> {
        var path = "/api/v2/telephony/providers/edges/linebasesettings/{lineBaseId}"
        path = path.stringByReplacingOccurrencesOfString("{lineBaseId}", withString: "\(lineBaseId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLineBase>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a list of Lines
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter expand: (query) Fields to expand in the response, comma-separated (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesLines(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, name: String? = nil, sortBy: String? = nil, expand: [String]? = nil, completion: ((data: ININLineEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesLinesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, name: name, sortBy: sortBy, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of Lines
     - GET /api/v2/telephony/providers/edges/lines
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "template" : "",
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "edgeGroup" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "loggedInUser" : "",
    "version" : 123,
    "site" : "",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "secondaryEdge" : "",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "primaryEdge" : {
      "softwareStatus" : {
        "current" : true,
        "executeOnIdle" : true,
        "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
        "maxDownloadRate" : 123,
        "edgeUri" : "aeiou",
        "version" : {
          "latestRelease" : true,
          "current" : true,
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "publishDate" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "edgeUri" : "aeiou",
          "edgeVersion" : "aeiou"
        },
        "executeStopTime" : "2000-01-23T04:56:07.000+0000",
        "executeStartTime" : "2000-01-23T04:56:07.000+0000",
        "status" : "aeiou"
      },
      "fullSoftwareVersion" : "aeiou",
      "onlineStatus" : "aeiou",
      "description" : "aeiou",
      "createdByApp" : "aeiou",
      "edgeGroup" : {
        "phoneTrunkBaseAssignments" : [ "" ],
        "selfUri" : "aeiou",
        "description" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "createdByApp" : "aeiou",
        "version" : 123,
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "aeiou",
        "managed" : true,
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "modifiedBy" : "aeiou",
        "edgeTrunkBaseAssignment" : {
          "family" : 123,
          "trunkBase" : ""
        },
        "id" : "aeiou",
        "state" : "aeiou",
        "phoneTrunkBases" : [ "" ]
      },
      "patch" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "apiVersion" : "aeiou",
      "managed" : true,
      "fingerprint" : "aeiou",
      "modifiedBy" : "aeiou",
      "model" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "make" : "aeiou",
      "stagedVersion" : "aeiou",
      "interfaces" : [ {
        "macAddress" : "aeiou",
        "endpoints" : [ "" ],
        "ifName" : "aeiou",
        "ipAddress" : "aeiou",
        "name" : "aeiou",
        "type" : "aeiou",
        "lineTypes" : [ "aeiou" ],
        "addressFamilyId" : "aeiou"
      } ],
      "serialNumber" : "aeiou",
      "softwareVersionConfiguration" : "aeiou",
      "physicalEdge" : true,
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "version" : 123,
      "currentVersion" : "aeiou",
      "site" : "",
      "softwareVersionPlatform" : "aeiou",
      "fingerprintHint" : "aeiou",
      "createdBy" : "aeiou",
      "softwareVersionTimestamp" : "aeiou",
      "pairingId" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "softwareVersion" : "aeiou",
      "statusCode" : "aeiou"
    },
    "lineBaseSettings" : "",
    "properties" : {
      "key" : "{}"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter expand: (query) Fields to expand in the response, comma-separated (optional)

     - returns: RequestBuilder<ININLineEntityListing> 
     */
    public class func getTelephonyProvidersEdgesLinesWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, name: String? = nil, sortBy: String? = nil, expand: [String]? = nil) -> RequestBuilder<ININLineEntityListing> {
        let path = "/api/v2/telephony/providers/edges/lines"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "name": name,
            "sortBy": sortBy,
            "expand": expand
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLineEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a Line by ID
     
     - parameter lineId: (path) Line ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesLinesLineId(lineId lineId: String, completion: ((data: ININLine?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesLinesLineIdWithRequestBuilder(lineId: lineId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Line by ID
     - GET /api/v2/telephony/providers/edges/lines/{lineId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "template" : "",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "edgeGroup" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "loggedInUser" : "",
  "version" : 123,
  "site" : "",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "secondaryEdge" : "",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "primaryEdge" : {
    "softwareStatus" : {
      "current" : true,
      "executeOnIdle" : true,
      "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
      "maxDownloadRate" : 123,
      "edgeUri" : "aeiou",
      "version" : {
        "latestRelease" : true,
        "current" : true,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "publishDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "edgeUri" : "aeiou",
        "edgeVersion" : "aeiou"
      },
      "executeStopTime" : "2000-01-23T04:56:07.000+0000",
      "executeStartTime" : "2000-01-23T04:56:07.000+0000",
      "status" : "aeiou"
    },
    "fullSoftwareVersion" : "aeiou",
    "onlineStatus" : "aeiou",
    "description" : "aeiou",
    "createdByApp" : "aeiou",
    "edgeGroup" : {
      "phoneTrunkBaseAssignments" : [ "" ],
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "version" : 123,
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "aeiou",
      "managed" : true,
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "edgeTrunkBaseAssignment" : {
        "family" : 123,
        "trunkBase" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "phoneTrunkBases" : [ "" ]
    },
    "patch" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "apiVersion" : "aeiou",
    "managed" : true,
    "fingerprint" : "aeiou",
    "modifiedBy" : "aeiou",
    "model" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "make" : "aeiou",
    "stagedVersion" : "aeiou",
    "interfaces" : [ {
      "macAddress" : "aeiou",
      "endpoints" : [ "" ],
      "ifName" : "aeiou",
      "ipAddress" : "aeiou",
      "name" : "aeiou",
      "type" : "aeiou",
      "lineTypes" : [ "aeiou" ],
      "addressFamilyId" : "aeiou"
    } ],
    "serialNumber" : "aeiou",
    "softwareVersionConfiguration" : "aeiou",
    "physicalEdge" : true,
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "version" : 123,
    "currentVersion" : "aeiou",
    "site" : "",
    "softwareVersionPlatform" : "aeiou",
    "fingerprintHint" : "aeiou",
    "createdBy" : "aeiou",
    "softwareVersionTimestamp" : "aeiou",
    "pairingId" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "softwareVersion" : "aeiou",
    "statusCode" : "aeiou"
  },
  "lineBaseSettings" : "",
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter lineId: (path) Line ID 

     - returns: RequestBuilder<ININLine> 
     */
    public class func getTelephonyProvidersEdgesLinesLineIdWithRequestBuilder(lineId lineId: String) -> RequestBuilder<ININLine> {
        var path = "/api/v2/telephony/providers/edges/lines/{lineId}"
        path = path.stringByReplacingOccurrencesOfString("{lineId}", withString: "\(lineId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLine>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a Line instance template based on a Line Base Settings object. This object can then be modified and saved as a new Line instance
     
     - parameter lineBaseSettingsId: (query) The id of a Line Base Settings object upon which to base this Line 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesLinesTemplate(lineBaseSettingsId lineBaseSettingsId: String, completion: ((data: ININLine?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesLinesTemplateWithRequestBuilder(lineBaseSettingsId: lineBaseSettingsId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Line instance template based on a Line Base Settings object. This object can then be modified and saved as a new Line instance
     - GET /api/v2/telephony/providers/edges/lines/template
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "template" : "",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "edgeGroup" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "loggedInUser" : "",
  "version" : 123,
  "site" : "",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "secondaryEdge" : "",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "primaryEdge" : {
    "softwareStatus" : {
      "current" : true,
      "executeOnIdle" : true,
      "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
      "maxDownloadRate" : 123,
      "edgeUri" : "aeiou",
      "version" : {
        "latestRelease" : true,
        "current" : true,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "publishDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "edgeUri" : "aeiou",
        "edgeVersion" : "aeiou"
      },
      "executeStopTime" : "2000-01-23T04:56:07.000+0000",
      "executeStartTime" : "2000-01-23T04:56:07.000+0000",
      "status" : "aeiou"
    },
    "fullSoftwareVersion" : "aeiou",
    "onlineStatus" : "aeiou",
    "description" : "aeiou",
    "createdByApp" : "aeiou",
    "edgeGroup" : {
      "phoneTrunkBaseAssignments" : [ "" ],
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "version" : 123,
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "aeiou",
      "managed" : true,
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "edgeTrunkBaseAssignment" : {
        "family" : 123,
        "trunkBase" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "phoneTrunkBases" : [ "" ]
    },
    "patch" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "apiVersion" : "aeiou",
    "managed" : true,
    "fingerprint" : "aeiou",
    "modifiedBy" : "aeiou",
    "model" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "make" : "aeiou",
    "stagedVersion" : "aeiou",
    "interfaces" : [ {
      "macAddress" : "aeiou",
      "endpoints" : [ "" ],
      "ifName" : "aeiou",
      "ipAddress" : "aeiou",
      "name" : "aeiou",
      "type" : "aeiou",
      "lineTypes" : [ "aeiou" ],
      "addressFamilyId" : "aeiou"
    } ],
    "serialNumber" : "aeiou",
    "softwareVersionConfiguration" : "aeiou",
    "physicalEdge" : true,
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "version" : 123,
    "currentVersion" : "aeiou",
    "site" : "",
    "softwareVersionPlatform" : "aeiou",
    "fingerprintHint" : "aeiou",
    "createdBy" : "aeiou",
    "softwareVersionTimestamp" : "aeiou",
    "pairingId" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "softwareVersion" : "aeiou",
    "statusCode" : "aeiou"
  },
  "lineBaseSettings" : "",
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter lineBaseSettingsId: (query) The id of a Line Base Settings object upon which to base this Line 

     - returns: RequestBuilder<ININLine> 
     */
    public class func getTelephonyProvidersEdgesLinesTemplateWithRequestBuilder(lineBaseSettingsId lineBaseSettingsId: String) -> RequestBuilder<ININLine> {
        let path = "/api/v2/telephony/providers/edges/lines/template"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "lineBaseSettingsId": lineBaseSettingsId
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLine>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get outbound routes
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter name: (query) Name (optional)
     - parameter siteId: (query) Filter by site.id (optional)
     - parameter sortBy: (query) Sort by (optional, default to name)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesOutboundroutes(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, name: String? = nil, siteId: String? = nil, sortBy: String? = nil, completion: ((data: ININOutboundRouteEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesOutboundroutesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, name: name, siteId: siteId, sortBy: sortBy).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get outbound routes
     - GET /api/v2/telephony/providers/edges/outboundroutes
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "classificationTypes" : [ "aeiou" ],
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "distribution" : "aeiou",
    "version" : 123,
    "enabled" : true,
    "site" : {
      "primarySites" : [ {
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou"
      } ],
      "addresses" : [ {
        "address" : "aeiou",
        "display" : "aeiou",
        "mediaType" : "aeiou",
        "type" : "aeiou"
      } ],
      "secondaryEdges" : [ "" ],
      "selfUri" : "aeiou",
      "edges" : [ "" ],
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "version" : 123,
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "primaryEdges" : [ {
        "softwareStatus" : {
          "current" : true,
          "executeOnIdle" : true,
          "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
          "maxDownloadRate" : 123,
          "edgeUri" : "aeiou",
          "version" : {
            "latestRelease" : true,
            "current" : true,
            "selfUri" : "aeiou",
            "name" : "aeiou",
            "publishDate" : "2000-01-23T04:56:07.000+0000",
            "id" : "aeiou",
            "edgeUri" : "aeiou",
            "edgeVersion" : "aeiou"
          },
          "executeStopTime" : "2000-01-23T04:56:07.000+0000",
          "executeStartTime" : "2000-01-23T04:56:07.000+0000",
          "status" : "aeiou"
        },
        "fullSoftwareVersion" : "aeiou",
        "onlineStatus" : "aeiou",
        "description" : "aeiou",
        "createdByApp" : "aeiou",
        "edgeGroup" : {
          "phoneTrunkBaseAssignments" : [ "" ],
          "selfUri" : "aeiou",
          "description" : "aeiou",
          "dateModified" : "2000-01-23T04:56:07.000+0000",
          "createdByApp" : "aeiou",
          "version" : 123,
          "dateCreated" : "2000-01-23T04:56:07.000+0000",
          "createdBy" : "aeiou",
          "managed" : true,
          "name" : "aeiou",
          "modifiedByApp" : "aeiou",
          "modifiedBy" : "aeiou",
          "edgeTrunkBaseAssignment" : {
            "family" : 123,
            "trunkBase" : ""
          },
          "id" : "aeiou",
          "state" : "aeiou",
          "phoneTrunkBases" : [ "" ]
        },
        "patch" : "aeiou",
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "apiVersion" : "aeiou",
        "managed" : true,
        "fingerprint" : "aeiou",
        "modifiedBy" : "aeiou",
        "model" : "aeiou",
        "id" : "aeiou",
        "state" : "aeiou",
        "make" : "aeiou",
        "stagedVersion" : "aeiou",
        "interfaces" : [ {
          "macAddress" : "aeiou",
          "endpoints" : [ "" ],
          "ifName" : "aeiou",
          "ipAddress" : "aeiou",
          "name" : "aeiou",
          "type" : "aeiou",
          "lineTypes" : [ "aeiou" ],
          "addressFamilyId" : "aeiou"
        } ],
        "serialNumber" : "aeiou",
        "softwareVersionConfiguration" : "aeiou",
        "physicalEdge" : true,
        "selfUri" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "version" : 123,
        "currentVersion" : "aeiou",
        "site" : "",
        "softwareVersionPlatform" : "aeiou",
        "fingerprintHint" : "aeiou",
        "createdBy" : "aeiou",
        "softwareVersionTimestamp" : "aeiou",
        "pairingId" : "aeiou",
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "softwareVersion" : "aeiou",
        "statusCode" : "aeiou"
      } ],
      "createdBy" : "aeiou",
      "managed" : true,
      "secondarySites" : [ "" ],
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "location" : "",
      "id" : "aeiou",
      "state" : "aeiou",
      "edgeAutoUpdateConfig" : {
        "rrule" : "aeiou",
        "start" : "2000-01-23T04:56:07.000+0000",
        "timeZone" : "aeiou",
        "end" : "2000-01-23T04:56:07.000+0000"
      }
    },
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "managed" : true,
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "externalTrunkBases" : [ "" ],
    "id" : "aeiou",
    "state" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter name: (query) Name (optional)
     - parameter siteId: (query) Filter by site.id (optional)
     - parameter sortBy: (query) Sort by (optional, default to name)

     - returns: RequestBuilder<ININOutboundRouteEntityListing> 
     */
    public class func getTelephonyProvidersEdgesOutboundroutesWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, name: String? = nil, siteId: String? = nil, sortBy: String? = nil) -> RequestBuilder<ININOutboundRouteEntityListing> {
        let path = "/api/v2/telephony/providers/edges/outboundroutes"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "name": name,
            "site.id": siteId,
            "sortBy": sortBy
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININOutboundRouteEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get outbound route
     
     - parameter outboundRouteId: (path) Outbound route ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesOutboundroutesOutboundrouteId(outboundRouteId outboundRouteId: String, completion: ((data: ININOutboundRoute?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesOutboundroutesOutboundrouteIdWithRequestBuilder(outboundRouteId: outboundRouteId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get outbound route
     - GET /api/v2/telephony/providers/edges/outboundroutes/{outboundRouteId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "classificationTypes" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "distribution" : "aeiou",
  "version" : 123,
  "enabled" : true,
  "site" : {
    "primarySites" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    } ],
    "addresses" : [ {
      "address" : "aeiou",
      "display" : "aeiou",
      "mediaType" : "aeiou",
      "type" : "aeiou"
    } ],
    "secondaryEdges" : [ "" ],
    "selfUri" : "aeiou",
    "edges" : [ "" ],
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "primaryEdges" : [ {
      "softwareStatus" : {
        "current" : true,
        "executeOnIdle" : true,
        "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
        "maxDownloadRate" : 123,
        "edgeUri" : "aeiou",
        "version" : {
          "latestRelease" : true,
          "current" : true,
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "publishDate" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "edgeUri" : "aeiou",
          "edgeVersion" : "aeiou"
        },
        "executeStopTime" : "2000-01-23T04:56:07.000+0000",
        "executeStartTime" : "2000-01-23T04:56:07.000+0000",
        "status" : "aeiou"
      },
      "fullSoftwareVersion" : "aeiou",
      "onlineStatus" : "aeiou",
      "description" : "aeiou",
      "createdByApp" : "aeiou",
      "edgeGroup" : {
        "phoneTrunkBaseAssignments" : [ "" ],
        "selfUri" : "aeiou",
        "description" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "createdByApp" : "aeiou",
        "version" : 123,
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "aeiou",
        "managed" : true,
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "modifiedBy" : "aeiou",
        "edgeTrunkBaseAssignment" : {
          "family" : 123,
          "trunkBase" : ""
        },
        "id" : "aeiou",
        "state" : "aeiou",
        "phoneTrunkBases" : [ "" ]
      },
      "patch" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "apiVersion" : "aeiou",
      "managed" : true,
      "fingerprint" : "aeiou",
      "modifiedBy" : "aeiou",
      "model" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "make" : "aeiou",
      "stagedVersion" : "aeiou",
      "interfaces" : [ {
        "macAddress" : "aeiou",
        "endpoints" : [ "" ],
        "ifName" : "aeiou",
        "ipAddress" : "aeiou",
        "name" : "aeiou",
        "type" : "aeiou",
        "lineTypes" : [ "aeiou" ],
        "addressFamilyId" : "aeiou"
      } ],
      "serialNumber" : "aeiou",
      "softwareVersionConfiguration" : "aeiou",
      "physicalEdge" : true,
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "version" : 123,
      "currentVersion" : "aeiou",
      "site" : "",
      "softwareVersionPlatform" : "aeiou",
      "fingerprintHint" : "aeiou",
      "createdBy" : "aeiou",
      "softwareVersionTimestamp" : "aeiou",
      "pairingId" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "softwareVersion" : "aeiou",
      "statusCode" : "aeiou"
    } ],
    "createdBy" : "aeiou",
    "managed" : true,
    "secondarySites" : [ "" ],
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "location" : "",
    "id" : "aeiou",
    "state" : "aeiou",
    "edgeAutoUpdateConfig" : {
      "rrule" : "aeiou",
      "start" : "2000-01-23T04:56:07.000+0000",
      "timeZone" : "aeiou",
      "end" : "2000-01-23T04:56:07.000+0000"
    }
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "externalTrunkBases" : [ "" ],
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter outboundRouteId: (path) Outbound route ID 

     - returns: RequestBuilder<ININOutboundRoute> 
     */
    public class func getTelephonyProvidersEdgesOutboundroutesOutboundrouteIdWithRequestBuilder(outboundRouteId outboundRouteId: String) -> RequestBuilder<ININOutboundRoute> {
        var path = "/api/v2/telephony/providers/edges/outboundroutes/{outboundRouteId}"
        path = path.stringByReplacingOccurrencesOfString("{outboundRouteId}", withString: "\(outboundRouteId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININOutboundRoute>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a list of Phone Base Settings objects
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesPhonebasesettings(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, completion: ((data: ININPhoneBaseEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesPhonebasesettingsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of Phone Base Settings objects
     - GET /api/v2/telephony/providers/edges/phonebasesettings
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "capabilities" : {
      "provisions" : true,
      "hardwareIdType" : "aeiou",
      "registers" : true,
      "dualRegisters" : true,
      "allowReboot" : true,
      "noRebalance" : true
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "phoneMetaBase" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "id" : "aeiou",
    "lines" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou",
      "properties" : {
        "key" : "{}"
      },
      "lineMetaBase" : ""
    } ],
    "properties" : {
      "key" : "{}"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)

     - returns: RequestBuilder<ININPhoneBaseEntityListing> 
     */
    public class func getTelephonyProvidersEdgesPhonebasesettingsWithRequestBuilder(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil) -> RequestBuilder<ININPhoneBaseEntityListing> {
        let path = "/api/v2/telephony/providers/edges/phonebasesettings"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageNumber": pageNumber?.encodeToJSON(),
            "pageSize": pageSize?.encodeToJSON(),
            "sortBy": sortBy,
            "sortOrder": sortOrder
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhoneBaseEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a list of available makes and models to create a new Phone Base Settings
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, completion: ((data: ININPhoneMetaBaseEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesPhonebasesettingsAvailablemetabasesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of available makes and models to create a new Phone Base Settings
     - GET /api/v2/telephony/providers/edges/phonebasesettings/availablemetabases
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "description" : "aeiou",
    "id" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)

     - returns: RequestBuilder<ININPhoneMetaBaseEntityListing> 
     */
    public class func getTelephonyProvidersEdgesPhonebasesettingsAvailablemetabasesWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil) -> RequestBuilder<ININPhoneMetaBaseEntityListing> {
        let path = "/api/v2/telephony/providers/edges/phonebasesettings/availablemetabases"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhoneMetaBaseEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a Phone Base Settings object by ID
     
     - parameter phoneBaseId: (path) Phone base ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesPhonebasesettingsPhonebaseId(phoneBaseId phoneBaseId: String, completion: ((data: ININPhoneBase?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesPhonebasesettingsPhonebaseIdWithRequestBuilder(phoneBaseId: phoneBaseId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Phone Base Settings object by ID
     - GET /api/v2/telephony/providers/edges/phonebasesettings/{phoneBaseId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "capabilities" : {
    "provisions" : true,
    "hardwareIdType" : "aeiou",
    "registers" : true,
    "dualRegisters" : true,
    "allowReboot" : true,
    "noRebalance" : true
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "phoneMetaBase" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "id" : "aeiou",
  "lines" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou",
    "properties" : {
      "key" : "{}"
    },
    "lineMetaBase" : ""
  } ],
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter phoneBaseId: (path) Phone base ID 

     - returns: RequestBuilder<ININPhoneBase> 
     */
    public class func getTelephonyProvidersEdgesPhonebasesettingsPhonebaseIdWithRequestBuilder(phoneBaseId phoneBaseId: String) -> RequestBuilder<ININPhoneBase> {
        var path = "/api/v2/telephony/providers/edges/phonebasesettings/{phoneBaseId}"
        path = path.stringByReplacingOccurrencesOfString("{phoneBaseId}", withString: "\(phoneBaseId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhoneBase>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a Phone Base Settings instance template from a given make and model. This object can then be modified and saved as a new Phone Base Settings instance
     
     - parameter phoneMetabaseId: (query) The id of a metabase object upon which to base this Phone Base Settings 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesPhonebasesettingsTemplate(phoneMetabaseId phoneMetabaseId: String, completion: ((data: ININPhoneBase?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesPhonebasesettingsTemplateWithRequestBuilder(phoneMetabaseId: phoneMetabaseId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Phone Base Settings instance template from a given make and model. This object can then be modified and saved as a new Phone Base Settings instance
     - GET /api/v2/telephony/providers/edges/phonebasesettings/template
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "capabilities" : {
    "provisions" : true,
    "hardwareIdType" : "aeiou",
    "registers" : true,
    "dualRegisters" : true,
    "allowReboot" : true,
    "noRebalance" : true
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "phoneMetaBase" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "id" : "aeiou",
  "lines" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou",
    "properties" : {
      "key" : "{}"
    },
    "lineMetaBase" : ""
  } ],
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter phoneMetabaseId: (query) The id of a metabase object upon which to base this Phone Base Settings 

     - returns: RequestBuilder<ININPhoneBase> 
     */
    public class func getTelephonyProvidersEdgesPhonebasesettingsTemplateWithRequestBuilder(phoneMetabaseId phoneMetabaseId: String) -> RequestBuilder<ININPhoneBase> {
        let path = "/api/v2/telephony/providers/edges/phonebasesettings/template"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "phoneMetabaseId": phoneMetabaseId
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhoneBase>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a list of Phone Instances
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter siteId: (query) Filter by site.id (optional)
     - parameter webRtcUserId: (query) Filter by webRtcUser.id (optional)
     - parameter phoneBaseSettingsId: (query) Filter by phoneBaseSettings.id (optional)
     - parameter linesLoggedInUserId: (query) Filter by lines.loggedInUser.id (optional)
     - parameter phoneHardwareId: (query) Filter by phone_hardwareId (optional)
     - parameter expand: (query) Fields to expand in the response, comma-separated (optional)
     - parameter fields: (query) Fields and properties to get, comma-separated (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesPhones(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, siteId: String? = nil, webRtcUserId: String? = nil, phoneBaseSettingsId: String? = nil, linesLoggedInUserId: String? = nil, phoneHardwareId: String? = nil, expand: [String]? = nil, fields: [String]? = nil, completion: ((data: ININPhoneEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesPhonesWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, siteId: siteId, webRtcUserId: webRtcUserId, phoneBaseSettingsId: phoneBaseSettingsId, linesLoggedInUserId: linesLoggedInUserId, phoneHardwareId: phoneHardwareId, expand: expand, fields: fields).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of Phone Instances
     - GET /api/v2/telephony/providers/edges/phones
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "phoneBaseSettings" : "",
    "capabilities" : {
      "provisions" : true,
      "hardwareIdType" : "aeiou",
      "registers" : true,
      "dualRegisters" : true,
      "allowReboot" : true,
      "noRebalance" : true
    },
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "phoneMetaBase" : "",
    "createdByApp" : "aeiou",
    "edgeGroup" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "version" : 123,
    "site" : "",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "secondaryStatus" : "",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "webRtcUser" : "",
    "lines" : [ {
      "template" : "",
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "edgeGroup" : "",
      "loggedInUser" : "",
      "version" : 123,
      "site" : "",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "aeiou",
      "secondaryEdge" : "",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "primaryEdge" : {
        "softwareStatus" : {
          "current" : true,
          "executeOnIdle" : true,
          "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
          "maxDownloadRate" : 123,
          "edgeUri" : "aeiou",
          "version" : {
            "latestRelease" : true,
            "current" : true,
            "selfUri" : "aeiou",
            "name" : "aeiou",
            "publishDate" : "2000-01-23T04:56:07.000+0000",
            "id" : "aeiou",
            "edgeUri" : "aeiou",
            "edgeVersion" : "aeiou"
          },
          "executeStopTime" : "2000-01-23T04:56:07.000+0000",
          "executeStartTime" : "2000-01-23T04:56:07.000+0000",
          "status" : "aeiou"
        },
        "fullSoftwareVersion" : "aeiou",
        "onlineStatus" : "aeiou",
        "description" : "aeiou",
        "createdByApp" : "aeiou",
        "edgeGroup" : {
          "phoneTrunkBaseAssignments" : [ "" ],
          "selfUri" : "aeiou",
          "description" : "aeiou",
          "dateModified" : "2000-01-23T04:56:07.000+0000",
          "createdByApp" : "aeiou",
          "version" : 123,
          "dateCreated" : "2000-01-23T04:56:07.000+0000",
          "createdBy" : "aeiou",
          "managed" : true,
          "name" : "aeiou",
          "modifiedByApp" : "aeiou",
          "modifiedBy" : "aeiou",
          "edgeTrunkBaseAssignment" : {
            "family" : 123,
            "trunkBase" : ""
          },
          "id" : "aeiou",
          "state" : "aeiou",
          "phoneTrunkBases" : [ "" ]
        },
        "patch" : "aeiou",
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "apiVersion" : "aeiou",
        "managed" : true,
        "fingerprint" : "aeiou",
        "modifiedBy" : "aeiou",
        "model" : "aeiou",
        "id" : "aeiou",
        "state" : "aeiou",
        "make" : "aeiou",
        "stagedVersion" : "aeiou",
        "interfaces" : [ {
          "macAddress" : "aeiou",
          "endpoints" : [ "" ],
          "ifName" : "aeiou",
          "ipAddress" : "aeiou",
          "name" : "aeiou",
          "type" : "aeiou",
          "lineTypes" : [ "aeiou" ],
          "addressFamilyId" : "aeiou"
        } ],
        "serialNumber" : "aeiou",
        "softwareVersionConfiguration" : "aeiou",
        "physicalEdge" : true,
        "selfUri" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "version" : 123,
        "currentVersion" : "aeiou",
        "site" : "",
        "softwareVersionPlatform" : "aeiou",
        "fingerprintHint" : "aeiou",
        "createdBy" : "aeiou",
        "softwareVersionTimestamp" : "aeiou",
        "pairingId" : "aeiou",
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "softwareVersion" : "aeiou",
        "statusCode" : "aeiou"
      },
      "lineBaseSettings" : "",
      "properties" : {
        "key" : "{}"
      }
    } ],
    "lineBaseSettings" : "",
    "properties" : {
      "key" : "{}"
    },
    "status" : {
      "operationalStatus" : "aeiou",
      "edgesStatus" : "aeiou",
      "edge" : "",
      "lineStatuses" : [ {
        "contactAddresses" : [ "aeiou" ],
        "addressOfRecord" : "aeiou",
        "id" : "aeiou",
        "reachable" : true,
        "reachableStateTime" : "2000-01-23T04:56:07.000+0000"
      } ],
      "phoneAssignmentToEdgeType" : "aeiou",
      "provision" : {
        "errorInfo" : "aeiou",
        "time" : "2000-01-23T04:56:07.000+0000",
        "source" : "aeiou"
      },
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter siteId: (query) Filter by site.id (optional)
     - parameter webRtcUserId: (query) Filter by webRtcUser.id (optional)
     - parameter phoneBaseSettingsId: (query) Filter by phoneBaseSettings.id (optional)
     - parameter linesLoggedInUserId: (query) Filter by lines.loggedInUser.id (optional)
     - parameter phoneHardwareId: (query) Filter by phone_hardwareId (optional)
     - parameter expand: (query) Fields to expand in the response, comma-separated (optional)
     - parameter fields: (query) Fields and properties to get, comma-separated (optional)

     - returns: RequestBuilder<ININPhoneEntityListing> 
     */
    public class func getTelephonyProvidersEdgesPhonesWithRequestBuilder(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, siteId: String? = nil, webRtcUserId: String? = nil, phoneBaseSettingsId: String? = nil, linesLoggedInUserId: String? = nil, phoneHardwareId: String? = nil, expand: [String]? = nil, fields: [String]? = nil) -> RequestBuilder<ININPhoneEntityListing> {
        let path = "/api/v2/telephony/providers/edges/phones"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageNumber": pageNumber?.encodeToJSON(),
            "pageSize": pageSize?.encodeToJSON(),
            "sortBy": sortBy,
            "sortOrder": sortOrder,
            "site.id": siteId,
            "webRtcUser.id": webRtcUserId,
            "phoneBaseSettings.id": phoneBaseSettingsId,
            "lines.loggedInUser.id": linesLoggedInUserId,
            "phone_hardwareId": phoneHardwareId,
            "expand": expand,
            "fields": fields
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhoneEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a Phone by ID
     
     - parameter phoneId: (path) Phone ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesPhonesPhoneId(phoneId phoneId: String, completion: ((data: ININPhone?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesPhonesPhoneIdWithRequestBuilder(phoneId: phoneId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Phone by ID
     - GET /api/v2/telephony/providers/edges/phones/{phoneId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "phoneBaseSettings" : "",
  "capabilities" : {
    "provisions" : true,
    "hardwareIdType" : "aeiou",
    "registers" : true,
    "dualRegisters" : true,
    "allowReboot" : true,
    "noRebalance" : true
  },
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "phoneMetaBase" : "",
  "createdByApp" : "aeiou",
  "edgeGroup" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "version" : 123,
  "site" : "",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "secondaryStatus" : "",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "webRtcUser" : "",
  "lines" : [ {
    "template" : "",
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "edgeGroup" : "",
    "loggedInUser" : "",
    "version" : 123,
    "site" : "",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "secondaryEdge" : "",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "primaryEdge" : {
      "softwareStatus" : {
        "current" : true,
        "executeOnIdle" : true,
        "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
        "maxDownloadRate" : 123,
        "edgeUri" : "aeiou",
        "version" : {
          "latestRelease" : true,
          "current" : true,
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "publishDate" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "edgeUri" : "aeiou",
          "edgeVersion" : "aeiou"
        },
        "executeStopTime" : "2000-01-23T04:56:07.000+0000",
        "executeStartTime" : "2000-01-23T04:56:07.000+0000",
        "status" : "aeiou"
      },
      "fullSoftwareVersion" : "aeiou",
      "onlineStatus" : "aeiou",
      "description" : "aeiou",
      "createdByApp" : "aeiou",
      "edgeGroup" : {
        "phoneTrunkBaseAssignments" : [ "" ],
        "selfUri" : "aeiou",
        "description" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "createdByApp" : "aeiou",
        "version" : 123,
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "aeiou",
        "managed" : true,
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "modifiedBy" : "aeiou",
        "edgeTrunkBaseAssignment" : {
          "family" : 123,
          "trunkBase" : ""
        },
        "id" : "aeiou",
        "state" : "aeiou",
        "phoneTrunkBases" : [ "" ]
      },
      "patch" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "apiVersion" : "aeiou",
      "managed" : true,
      "fingerprint" : "aeiou",
      "modifiedBy" : "aeiou",
      "model" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "make" : "aeiou",
      "stagedVersion" : "aeiou",
      "interfaces" : [ {
        "macAddress" : "aeiou",
        "endpoints" : [ "" ],
        "ifName" : "aeiou",
        "ipAddress" : "aeiou",
        "name" : "aeiou",
        "type" : "aeiou",
        "lineTypes" : [ "aeiou" ],
        "addressFamilyId" : "aeiou"
      } ],
      "serialNumber" : "aeiou",
      "softwareVersionConfiguration" : "aeiou",
      "physicalEdge" : true,
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "version" : 123,
      "currentVersion" : "aeiou",
      "site" : "",
      "softwareVersionPlatform" : "aeiou",
      "fingerprintHint" : "aeiou",
      "createdBy" : "aeiou",
      "softwareVersionTimestamp" : "aeiou",
      "pairingId" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "softwareVersion" : "aeiou",
      "statusCode" : "aeiou"
    },
    "lineBaseSettings" : "",
    "properties" : {
      "key" : "{}"
    }
  } ],
  "lineBaseSettings" : "",
  "properties" : {
    "key" : "{}"
  },
  "status" : {
    "operationalStatus" : "aeiou",
    "edgesStatus" : "aeiou",
    "edge" : "",
    "lineStatuses" : [ {
      "contactAddresses" : [ "aeiou" ],
      "addressOfRecord" : "aeiou",
      "id" : "aeiou",
      "reachable" : true,
      "reachableStateTime" : "2000-01-23T04:56:07.000+0000"
    } ],
    "phoneAssignmentToEdgeType" : "aeiou",
    "provision" : {
      "errorInfo" : "aeiou",
      "time" : "2000-01-23T04:56:07.000+0000",
      "source" : "aeiou"
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  }
}}]
     
     - parameter phoneId: (path) Phone ID 

     - returns: RequestBuilder<ININPhone> 
     */
    public class func getTelephonyProvidersEdgesPhonesPhoneIdWithRequestBuilder(phoneId phoneId: String) -> RequestBuilder<ININPhone> {
        var path = "/api/v2/telephony/providers/edges/phones/{phoneId}"
        path = path.stringByReplacingOccurrencesOfString("{phoneId}", withString: "\(phoneId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhone>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a Phone instance template based on a Phone Base Settings object. This object can then be modified and saved as a new Phone instance
     
     - parameter phoneBaseSettingsId: (query) The id of a Phone Base Settings object upon which to base this Phone 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesPhonesTemplate(phoneBaseSettingsId phoneBaseSettingsId: String, completion: ((data: ININPhone?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesPhonesTemplateWithRequestBuilder(phoneBaseSettingsId: phoneBaseSettingsId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Phone instance template based on a Phone Base Settings object. This object can then be modified and saved as a new Phone instance
     - GET /api/v2/telephony/providers/edges/phones/template
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "phoneBaseSettings" : "",
  "capabilities" : {
    "provisions" : true,
    "hardwareIdType" : "aeiou",
    "registers" : true,
    "dualRegisters" : true,
    "allowReboot" : true,
    "noRebalance" : true
  },
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "phoneMetaBase" : "",
  "createdByApp" : "aeiou",
  "edgeGroup" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "version" : 123,
  "site" : "",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "secondaryStatus" : "",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "webRtcUser" : "",
  "lines" : [ {
    "template" : "",
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "edgeGroup" : "",
    "loggedInUser" : "",
    "version" : 123,
    "site" : "",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "secondaryEdge" : "",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "primaryEdge" : {
      "softwareStatus" : {
        "current" : true,
        "executeOnIdle" : true,
        "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
        "maxDownloadRate" : 123,
        "edgeUri" : "aeiou",
        "version" : {
          "latestRelease" : true,
          "current" : true,
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "publishDate" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "edgeUri" : "aeiou",
          "edgeVersion" : "aeiou"
        },
        "executeStopTime" : "2000-01-23T04:56:07.000+0000",
        "executeStartTime" : "2000-01-23T04:56:07.000+0000",
        "status" : "aeiou"
      },
      "fullSoftwareVersion" : "aeiou",
      "onlineStatus" : "aeiou",
      "description" : "aeiou",
      "createdByApp" : "aeiou",
      "edgeGroup" : {
        "phoneTrunkBaseAssignments" : [ "" ],
        "selfUri" : "aeiou",
        "description" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "createdByApp" : "aeiou",
        "version" : 123,
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "aeiou",
        "managed" : true,
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "modifiedBy" : "aeiou",
        "edgeTrunkBaseAssignment" : {
          "family" : 123,
          "trunkBase" : ""
        },
        "id" : "aeiou",
        "state" : "aeiou",
        "phoneTrunkBases" : [ "" ]
      },
      "patch" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "apiVersion" : "aeiou",
      "managed" : true,
      "fingerprint" : "aeiou",
      "modifiedBy" : "aeiou",
      "model" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "make" : "aeiou",
      "stagedVersion" : "aeiou",
      "interfaces" : [ {
        "macAddress" : "aeiou",
        "endpoints" : [ "" ],
        "ifName" : "aeiou",
        "ipAddress" : "aeiou",
        "name" : "aeiou",
        "type" : "aeiou",
        "lineTypes" : [ "aeiou" ],
        "addressFamilyId" : "aeiou"
      } ],
      "serialNumber" : "aeiou",
      "softwareVersionConfiguration" : "aeiou",
      "physicalEdge" : true,
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "version" : 123,
      "currentVersion" : "aeiou",
      "site" : "",
      "softwareVersionPlatform" : "aeiou",
      "fingerprintHint" : "aeiou",
      "createdBy" : "aeiou",
      "softwareVersionTimestamp" : "aeiou",
      "pairingId" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "softwareVersion" : "aeiou",
      "statusCode" : "aeiou"
    },
    "lineBaseSettings" : "",
    "properties" : {
      "key" : "{}"
    }
  } ],
  "lineBaseSettings" : "",
  "properties" : {
    "key" : "{}"
  },
  "status" : {
    "operationalStatus" : "aeiou",
    "edgesStatus" : "aeiou",
    "edge" : "",
    "lineStatuses" : [ {
      "contactAddresses" : [ "aeiou" ],
      "addressOfRecord" : "aeiou",
      "id" : "aeiou",
      "reachable" : true,
      "reachableStateTime" : "2000-01-23T04:56:07.000+0000"
    } ],
    "phoneAssignmentToEdgeType" : "aeiou",
    "provision" : {
      "errorInfo" : "aeiou",
      "time" : "2000-01-23T04:56:07.000+0000",
      "source" : "aeiou"
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  }
}}]
     
     - parameter phoneBaseSettingsId: (query) The id of a Phone Base Settings object upon which to base this Phone 

     - returns: RequestBuilder<ININPhone> 
     */
    public class func getTelephonyProvidersEdgesPhonesTemplateWithRequestBuilder(phoneBaseSettingsId phoneBaseSettingsId: String) -> RequestBuilder<ININPhone> {
        let path = "/api/v2/telephony/providers/edges/phones/template"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "phoneBaseSettingsId": phoneBaseSettingsId
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhone>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get the list of Sites.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter name: (query) Name (optional)
     - parameter locationId: (query) Location Id (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesSites(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, locationId: String? = nil, completion: ((data: ININSiteEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesSitesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder, name: name, locationId: locationId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the list of Sites.
     - GET /api/v2/telephony/providers/edges/sites
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "primarySites" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    } ],
    "addresses" : [ {
      "address" : "aeiou",
      "display" : "aeiou",
      "mediaType" : "aeiou",
      "type" : "aeiou"
    } ],
    "secondaryEdges" : [ "" ],
    "selfUri" : "aeiou",
    "edges" : [ "" ],
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "primaryEdges" : [ {
      "softwareStatus" : {
        "current" : true,
        "executeOnIdle" : true,
        "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
        "maxDownloadRate" : 123,
        "edgeUri" : "aeiou",
        "version" : {
          "latestRelease" : true,
          "current" : true,
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "publishDate" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "edgeUri" : "aeiou",
          "edgeVersion" : "aeiou"
        },
        "executeStopTime" : "2000-01-23T04:56:07.000+0000",
        "executeStartTime" : "2000-01-23T04:56:07.000+0000",
        "status" : "aeiou"
      },
      "fullSoftwareVersion" : "aeiou",
      "onlineStatus" : "aeiou",
      "description" : "aeiou",
      "createdByApp" : "aeiou",
      "edgeGroup" : {
        "phoneTrunkBaseAssignments" : [ "" ],
        "selfUri" : "aeiou",
        "description" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "createdByApp" : "aeiou",
        "version" : 123,
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "aeiou",
        "managed" : true,
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "modifiedBy" : "aeiou",
        "edgeTrunkBaseAssignment" : {
          "family" : 123,
          "trunkBase" : ""
        },
        "id" : "aeiou",
        "state" : "aeiou",
        "phoneTrunkBases" : [ "" ]
      },
      "patch" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "apiVersion" : "aeiou",
      "managed" : true,
      "fingerprint" : "aeiou",
      "modifiedBy" : "aeiou",
      "model" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "make" : "aeiou",
      "stagedVersion" : "aeiou",
      "interfaces" : [ {
        "macAddress" : "aeiou",
        "endpoints" : [ "" ],
        "ifName" : "aeiou",
        "ipAddress" : "aeiou",
        "name" : "aeiou",
        "type" : "aeiou",
        "lineTypes" : [ "aeiou" ],
        "addressFamilyId" : "aeiou"
      } ],
      "serialNumber" : "aeiou",
      "softwareVersionConfiguration" : "aeiou",
      "physicalEdge" : true,
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "version" : 123,
      "currentVersion" : "aeiou",
      "site" : "",
      "softwareVersionPlatform" : "aeiou",
      "fingerprintHint" : "aeiou",
      "createdBy" : "aeiou",
      "softwareVersionTimestamp" : "aeiou",
      "pairingId" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "softwareVersion" : "aeiou",
      "statusCode" : "aeiou"
    } ],
    "createdBy" : "aeiou",
    "managed" : true,
    "secondarySites" : [ "" ],
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "location" : "",
    "id" : "aeiou",
    "state" : "aeiou",
    "edgeAutoUpdateConfig" : {
      "rrule" : "aeiou",
      "start" : "2000-01-23T04:56:07.000+0000",
      "timeZone" : "aeiou",
      "end" : "2000-01-23T04:56:07.000+0000"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter name: (query) Name (optional)
     - parameter locationId: (query) Location Id (optional)

     - returns: RequestBuilder<ININSiteEntityListing> 
     */
    public class func getTelephonyProvidersEdgesSitesWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, name: String? = nil, locationId: String? = nil) -> RequestBuilder<ININSiteEntityListing> {
        let path = "/api/v2/telephony/providers/edges/sites"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "sortBy": sortBy,
            "sortOrder": sortOrder,
            "name": name,
            "location.id": locationId
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSiteEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a Site by ID.
     
     - parameter siteId: (path) Site ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesSitesSiteId(siteId siteId: String, completion: ((data: ININSite?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesSitesSiteIdWithRequestBuilder(siteId: siteId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Site by ID.
     - GET /api/v2/telephony/providers/edges/sites/{siteId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "primarySites" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "addresses" : [ {
    "address" : "aeiou",
    "display" : "aeiou",
    "mediaType" : "aeiou",
    "type" : "aeiou"
  } ],
  "secondaryEdges" : [ "" ],
  "selfUri" : "aeiou",
  "edges" : [ "" ],
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "primaryEdges" : [ {
    "softwareStatus" : {
      "current" : true,
      "executeOnIdle" : true,
      "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
      "maxDownloadRate" : 123,
      "edgeUri" : "aeiou",
      "version" : {
        "latestRelease" : true,
        "current" : true,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "publishDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "edgeUri" : "aeiou",
        "edgeVersion" : "aeiou"
      },
      "executeStopTime" : "2000-01-23T04:56:07.000+0000",
      "executeStartTime" : "2000-01-23T04:56:07.000+0000",
      "status" : "aeiou"
    },
    "fullSoftwareVersion" : "aeiou",
    "onlineStatus" : "aeiou",
    "description" : "aeiou",
    "createdByApp" : "aeiou",
    "edgeGroup" : {
      "phoneTrunkBaseAssignments" : [ "" ],
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "version" : 123,
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "aeiou",
      "managed" : true,
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "edgeTrunkBaseAssignment" : {
        "family" : 123,
        "trunkBase" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "phoneTrunkBases" : [ "" ]
    },
    "patch" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "apiVersion" : "aeiou",
    "managed" : true,
    "fingerprint" : "aeiou",
    "modifiedBy" : "aeiou",
    "model" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "make" : "aeiou",
    "stagedVersion" : "aeiou",
    "interfaces" : [ {
      "macAddress" : "aeiou",
      "endpoints" : [ "" ],
      "ifName" : "aeiou",
      "ipAddress" : "aeiou",
      "name" : "aeiou",
      "type" : "aeiou",
      "lineTypes" : [ "aeiou" ],
      "addressFamilyId" : "aeiou"
    } ],
    "serialNumber" : "aeiou",
    "softwareVersionConfiguration" : "aeiou",
    "physicalEdge" : true,
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "version" : 123,
    "currentVersion" : "aeiou",
    "site" : "",
    "softwareVersionPlatform" : "aeiou",
    "fingerprintHint" : "aeiou",
    "createdBy" : "aeiou",
    "softwareVersionTimestamp" : "aeiou",
    "pairingId" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "softwareVersion" : "aeiou",
    "statusCode" : "aeiou"
  } ],
  "createdBy" : "aeiou",
  "managed" : true,
  "secondarySites" : [ "" ],
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "location" : "",
  "id" : "aeiou",
  "state" : "aeiou",
  "edgeAutoUpdateConfig" : {
    "rrule" : "aeiou",
    "start" : "2000-01-23T04:56:07.000+0000",
    "timeZone" : "aeiou",
    "end" : "2000-01-23T04:56:07.000+0000"
  }
}}]
     
     - parameter siteId: (path) Site ID 

     - returns: RequestBuilder<ININSite> 
     */
    public class func getTelephonyProvidersEdgesSitesSiteIdWithRequestBuilder(siteId siteId: String) -> RequestBuilder<ININSite> {
        var path = "/api/v2/telephony/providers/edges/sites/{siteId}"
        path = path.stringByReplacingOccurrencesOfString("{siteId}", withString: "\(siteId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSite>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the list of Number Plans for this Site.
     
     - parameter siteId: (path) Site ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesSitesSiteIdNumberplans(siteId siteId: String, completion: ((data: [ININNumberPlan]?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesSitesSiteIdNumberplansWithRequestBuilder(siteId: siteId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the list of Number Plans for this Site.
     - GET /api/v2/telephony/providers/edges/sites/{siteId}/numberplans
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example=[ {
  "matchType" : "aeiou",
  "selfUri" : "aeiou",
  "match" : "aeiou",
  "numbers" : [ {
    "start" : "aeiou",
    "end" : "aeiou"
  } ],
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "priority" : 123,
  "digitLength" : {
    "start" : "aeiou",
    "end" : "aeiou"
  },
  "classification" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "normalizedFormat" : "aeiou"
} ]}]
     
     - parameter siteId: (path) Site ID 

     - returns: RequestBuilder<[ININNumberPlan]> 
     */
    public class func getTelephonyProvidersEdgesSitesSiteIdNumberplansWithRequestBuilder(siteId siteId: String) -> RequestBuilder<[ININNumberPlan]> {
        var path = "/api/v2/telephony/providers/edges/sites/{siteId}/numberplans"
        path = path.stringByReplacingOccurrencesOfString("{siteId}", withString: "\(siteId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ININNumberPlan]>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a list of Classifications for this Site
     
     - parameter siteId: (path) Site ID 
     - parameter classification: (query) Classification (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesSitesSiteIdNumberplansClassifications(siteId siteId: String, classification: String? = nil, completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesSitesSiteIdNumberplansClassificationsWithRequestBuilder(siteId: siteId, classification: classification).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of Classifications for this Site
     - GET /api/v2/telephony/providers/edges/sites/{siteId}/numberplans/classifications
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example=[ "aeiou" ]}]
     
     - parameter siteId: (path) Site ID 
     - parameter classification: (query) Classification (optional)

     - returns: RequestBuilder<[String]> 
     */
    public class func getTelephonyProvidersEdgesSitesSiteIdNumberplansClassificationsWithRequestBuilder(siteId siteId: String, classification: String? = nil) -> RequestBuilder<[String]> {
        var path = "/api/v2/telephony/providers/edges/sites/{siteId}/numberplans/classifications"
        path = path.stringByReplacingOccurrencesOfString("{siteId}", withString: "\(siteId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "classification": classification
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[String]>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a Number Plan by ID.
     
     - parameter siteId: (path) Site ID 
     - parameter numberPlanId: (path) Number Plan ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesSitesSiteIdNumberplansNumberplanId(siteId siteId: String, numberPlanId: String, completion: ((data: ININNumberPlan?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesSitesSiteIdNumberplansNumberplanIdWithRequestBuilder(siteId: siteId, numberPlanId: numberPlanId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Number Plan by ID.
     - GET /api/v2/telephony/providers/edges/sites/{siteId}/numberplans/{numberPlanId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "matchType" : "aeiou",
  "selfUri" : "aeiou",
  "match" : "aeiou",
  "numbers" : [ {
    "start" : "aeiou",
    "end" : "aeiou"
  } ],
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "priority" : 123,
  "digitLength" : {
    "start" : "aeiou",
    "end" : "aeiou"
  },
  "classification" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "normalizedFormat" : "aeiou"
}}]
     
     - parameter siteId: (path) Site ID 
     - parameter numberPlanId: (path) Number Plan ID 

     - returns: RequestBuilder<ININNumberPlan> 
     */
    public class func getTelephonyProvidersEdgesSitesSiteIdNumberplansNumberplanIdWithRequestBuilder(siteId siteId: String, numberPlanId: String) -> RequestBuilder<ININNumberPlan> {
        var path = "/api/v2/telephony/providers/edges/sites/{siteId}/numberplans/{numberPlanId}"
        path = path.stringByReplacingOccurrencesOfString("{siteId}", withString: "\(siteId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{numberPlanId}", withString: "\(numberPlanId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININNumberPlan>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a list of Edge-compatible time zones
     
     - parameter pageSize: (query) Page size (optional, default to 1000)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesTimezones(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, completion: ((data: ININTimeZoneEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesTimezonesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of Edge-compatible time zones
     - GET /api/v2/telephony/providers/edges/timezones
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "offset" : 123456789,
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 1000)
     - parameter pageNumber: (query) Page number (optional, default to 1)

     - returns: RequestBuilder<ININTimeZoneEntityListing> 
     */
    public class func getTelephonyProvidersEdgesTimezonesWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil) -> RequestBuilder<ININTimeZoneEntityListing> {
        let path = "/api/v2/telephony/providers/edges/timezones"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTimeZoneEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get Trunk Base Settings listing
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter recordingEnabled: (query) Filter trunks by recording enabled (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesTrunkbasesettings(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, recordingEnabled: Bool? = nil, completion: ((data: ININTrunkBase?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesTrunkbasesettingsWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, recordingEnabled: recordingEnabled).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get Trunk Base Settings listing
     - GET /api/v2/telephony/providers/edges/trunkbasesettings
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "trunkType" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "trunkMetabase" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "id" : "aeiou",
  "state" : "aeiou",
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter recordingEnabled: (query) Filter trunks by recording enabled (optional)

     - returns: RequestBuilder<ININTrunkBase> 
     */
    public class func getTelephonyProvidersEdgesTrunkbasesettingsWithRequestBuilder(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, recordingEnabled: Bool? = nil) -> RequestBuilder<ININTrunkBase> {
        let path = "/api/v2/telephony/providers/edges/trunkbasesettings"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageNumber": pageNumber?.encodeToJSON(),
            "pageSize": pageSize?.encodeToJSON(),
            "sortBy": sortBy,
            "sortOrder": sortOrder,
            "recordingEnabled": recordingEnabled
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTrunkBase>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter type
    */
    public enum ININType_getTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases: String { 
        case External = "EXTERNAL"
        case Phone = "PHONE"
        case Edge = "EDGE"
    }

    /**
     Get a list of available makes and models to create a new Trunk Base Settings
     
     - parameter type: (query)  (optional)
     - parameter pageSize: (query)  (optional, default to 25)
     - parameter pageNumber: (query)  (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases(type type: ININType_getTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, completion: ((data: ININTrunkMetabaseEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabasesWithRequestBuilder(type: type, pageSize: pageSize, pageNumber: pageNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of available makes and models to create a new Trunk Base Settings
     - GET /api/v2/telephony/providers/edges/trunkbasesettings/availablemetabases
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "description" : "aeiou",
    "id" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter type: (query)  (optional)
     - parameter pageSize: (query)  (optional, default to 25)
     - parameter pageNumber: (query)  (optional, default to 1)

     - returns: RequestBuilder<ININTrunkMetabaseEntityListing> 
     */
    public class func getTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabasesWithRequestBuilder(type type: ININType_getTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil) -> RequestBuilder<ININTrunkMetabaseEntityListing> {
        let path = "/api/v2/telephony/providers/edges/trunkbasesettings/availablemetabases"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "type": type?.rawValue,
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTrunkMetabaseEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a Trunk Base Settings instance template from a given make and model. This object can then be modified and saved as a new Trunk Base Settings instance
     
     - parameter trunkMetabaseId: (query) The id of a metabase object upon which to base this Trunk Base Settings 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesTrunkbasesettingsTemplate(trunkMetabaseId trunkMetabaseId: String, completion: ((data: ININTrunkBase?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesTrunkbasesettingsTemplateWithRequestBuilder(trunkMetabaseId: trunkMetabaseId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Trunk Base Settings instance template from a given make and model. This object can then be modified and saved as a new Trunk Base Settings instance
     - GET /api/v2/telephony/providers/edges/trunkbasesettings/template
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "trunkType" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "trunkMetabase" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "id" : "aeiou",
  "state" : "aeiou",
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter trunkMetabaseId: (query) The id of a metabase object upon which to base this Trunk Base Settings 

     - returns: RequestBuilder<ININTrunkBase> 
     */
    public class func getTelephonyProvidersEdgesTrunkbasesettingsTemplateWithRequestBuilder(trunkMetabaseId trunkMetabaseId: String) -> RequestBuilder<ININTrunkBase> {
        let path = "/api/v2/telephony/providers/edges/trunkbasesettings/template"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "trunkMetabaseId": trunkMetabaseId
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTrunkBase>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a Trunk Base Settings object by ID
     
     - parameter trunkBaseSettingsId: (path) Trunk Base ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesTrunkbasesettingsTrunkbasesettingsId(trunkBaseSettingsId trunkBaseSettingsId: String, completion: ((data: ININTrunkBase?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesTrunkbasesettingsTrunkbasesettingsIdWithRequestBuilder(trunkBaseSettingsId: trunkBaseSettingsId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Trunk Base Settings object by ID
     - GET /api/v2/telephony/providers/edges/trunkbasesettings/{trunkBaseSettingsId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "trunkType" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "trunkMetabase" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "id" : "aeiou",
  "state" : "aeiou",
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter trunkBaseSettingsId: (path) Trunk Base ID 

     - returns: RequestBuilder<ININTrunkBase> 
     */
    public class func getTelephonyProvidersEdgesTrunkbasesettingsTrunkbasesettingsIdWithRequestBuilder(trunkBaseSettingsId trunkBaseSettingsId: String) -> RequestBuilder<ININTrunkBase> {
        var path = "/api/v2/telephony/providers/edges/trunkbasesettings/{trunkBaseSettingsId}"
        path = path.stringByReplacingOccurrencesOfString("{trunkBaseSettingsId}", withString: "\(trunkBaseSettingsId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTrunkBase>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter trunkType
    */
    public enum ININTrunkType_getTelephonyProvidersEdgesTrunks: String { 
        case External = "EXTERNAL"
        case Phone = "PHONE"
        case Edge = "EDGE"
    }

    /**
     Get the list of available trunks.
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter edgeId: (query) Filter by Edge Ids (optional)
     - parameter trunkBaseId: (query) Filter by Trunk Base Ids (optional)
     - parameter trunkType: (query) Filter by a Trunk type (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesTrunks(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, edgeId: String? = nil, trunkBaseId: String? = nil, trunkType: ININTrunkType_getTelephonyProvidersEdgesTrunks? = nil, completion: ((data: ININTrunkEntityListing?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesTrunksWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, edgeId: edgeId, trunkBaseId: trunkBaseId, trunkType: trunkType).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the list of available trunks.
     - GET /api/v2/telephony/providers/edges/trunks
     - Trunks are created by assigning trunk base settings to an Edge or Edge Group.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "trunkType" : "aeiou",
    "edgeGroup" : "",
    "version" : 123,
    "enabled" : true,
    "edge" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "trunkMetabase" : "",
    "id" : "aeiou",
    "state" : "aeiou",
    "trunkBase" : ""
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter sortBy: (query) Value by which to sort (optional, default to name)
     - parameter sortOrder: (query) Sort order (optional, default to ASC)
     - parameter edgeId: (query) Filter by Edge Ids (optional)
     - parameter trunkBaseId: (query) Filter by Trunk Base Ids (optional)
     - parameter trunkType: (query) Filter by a Trunk type (optional)

     - returns: RequestBuilder<ININTrunkEntityListing> 
     */
    public class func getTelephonyProvidersEdgesTrunksWithRequestBuilder(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, edgeId: String? = nil, trunkBaseId: String? = nil, trunkType: ININTrunkType_getTelephonyProvidersEdgesTrunks? = nil) -> RequestBuilder<ININTrunkEntityListing> {
        let path = "/api/v2/telephony/providers/edges/trunks"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageNumber": pageNumber?.encodeToJSON(),
            "pageSize": pageSize?.encodeToJSON(),
            "sortBy": sortBy,
            "sortOrder": sortOrder,
            "edge.id": edgeId,
            "trunkBase.id": trunkBaseId,
            "trunkType": trunkType?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTrunkEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a Trunk by ID
     
     - parameter trunkId: (path) Trunk ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesTrunksTrunkId(trunkId trunkId: String, completion: ((data: ININTrunk?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesTrunksTrunkIdWithRequestBuilder(trunkId: trunkId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Trunk by ID
     - GET /api/v2/telephony/providers/edges/trunks/{trunkId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "trunkType" : "aeiou",
  "edgeGroup" : "",
  "version" : 123,
  "enabled" : true,
  "edge" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "trunkMetabase" : "",
  "id" : "aeiou",
  "state" : "aeiou",
  "trunkBase" : ""
}}]
     
     - parameter trunkId: (path) Trunk ID 

     - returns: RequestBuilder<ININTrunk> 
     */
    public class func getTelephonyProvidersEdgesTrunksTrunkIdWithRequestBuilder(trunkId trunkId: String) -> RequestBuilder<ININTrunk> {
        var path = "/api/v2/telephony/providers/edges/trunks/{trunkId}"
        path = path.stringByReplacingOccurrencesOfString("{trunkId}", withString: "\(trunkId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTrunk>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter trunkType
    */
    public enum ININTrunkType_getTelephonyProvidersEdgesTrunkswithrecording: String { 
        case External = "EXTERNAL"
        case Phone = "PHONE"
        case Edge = "EDGE"
    }

    /**
     Get Counts of trunks that have recording disabled or enabled
     
     - parameter trunkType: (query) The type of this trunk base. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTelephonyProvidersEdgesTrunkswithrecording(trunkType trunkType: ININTrunkType_getTelephonyProvidersEdgesTrunkswithrecording? = nil, completion: ((data: ININTrunkRecordingEnabledCount?, error: ErrorType?) -> Void)) {
        getTelephonyProvidersEdgesTrunkswithrecordingWithRequestBuilder(trunkType: trunkType).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get Counts of trunks that have recording disabled or enabled
     - GET /api/v2/telephony/providers/edges/trunkswithrecording
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "enabledCount" : 123,
  "disabledCount" : 123
}}]
     
     - parameter trunkType: (query) The type of this trunk base. (optional)

     - returns: RequestBuilder<ININTrunkRecordingEnabledCount> 
     */
    public class func getTelephonyProvidersEdgesTrunkswithrecordingWithRequestBuilder(trunkType trunkType: ININTrunkType_getTelephonyProvidersEdgesTrunkswithrecording? = nil) -> RequestBuilder<ININTrunkRecordingEnabledCount> {
        let path = "/api/v2/telephony/providers/edges/trunkswithrecording"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "trunkType": trunkType?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTrunkRecordingEnabledCount>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Create a edge.
     
     - parameter body: (body) Edge (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdges(body body: ININEdge? = nil, completion: ((data: ININEdge?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a edge.
     - POST /api/v2/telephony/providers/edges
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "softwareStatus" : {
    "current" : true,
    "executeOnIdle" : true,
    "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
    "maxDownloadRate" : 123,
    "edgeUri" : "aeiou",
    "version" : {
      "latestRelease" : true,
      "current" : true,
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "publishDate" : "2000-01-23T04:56:07.000+0000",
      "id" : "aeiou",
      "edgeUri" : "aeiou",
      "edgeVersion" : "aeiou"
    },
    "executeStopTime" : "2000-01-23T04:56:07.000+0000",
    "executeStartTime" : "2000-01-23T04:56:07.000+0000",
    "status" : "aeiou"
  },
  "fullSoftwareVersion" : "aeiou",
  "onlineStatus" : "aeiou",
  "description" : "aeiou",
  "createdByApp" : "aeiou",
  "edgeGroup" : {
    "phoneTrunkBaseAssignments" : [ "" ],
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "managed" : true,
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "edgeTrunkBaseAssignment" : {
      "family" : 123,
      "trunkBase" : ""
    },
    "id" : "aeiou",
    "state" : "aeiou",
    "phoneTrunkBases" : [ "" ]
  },
  "patch" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "apiVersion" : "aeiou",
  "managed" : true,
  "fingerprint" : "aeiou",
  "modifiedBy" : "aeiou",
  "model" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "make" : "aeiou",
  "stagedVersion" : "aeiou",
  "interfaces" : [ {
    "macAddress" : "aeiou",
    "endpoints" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    } ],
    "ifName" : "aeiou",
    "ipAddress" : "aeiou",
    "name" : "aeiou",
    "type" : "aeiou",
    "lineTypes" : [ "aeiou" ],
    "addressFamilyId" : "aeiou"
  } ],
  "serialNumber" : "aeiou",
  "softwareVersionConfiguration" : "aeiou",
  "physicalEdge" : true,
  "selfUri" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "version" : 123,
  "currentVersion" : "aeiou",
  "site" : "",
  "softwareVersionPlatform" : "aeiou",
  "fingerprintHint" : "aeiou",
  "createdBy" : "aeiou",
  "softwareVersionTimestamp" : "aeiou",
  "pairingId" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "softwareVersion" : "aeiou",
  "statusCode" : "aeiou"
}}]
     
     - parameter body: (body) Edge (optional)

     - returns: RequestBuilder<ININEdge> 
     */
    public class func postTelephonyProvidersEdgesWithRequestBuilder(body body: ININEdge? = nil) -> RequestBuilder<ININEdge> {
        let path = "/api/v2/telephony/providers/edges"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdge>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Validates a street address
     
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesAddressvalidation(body body: ININValidateAddressRequest? = nil, completion: ((data: ININValidateAddressResponse?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesAddressvalidationWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Validates a street address
     - POST /api/v2/telephony/providers/edges/addressvalidation
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "valid" : true,
  "response" : {
    "messageReturned" : [ "aeiou" ],
    "status" : "aeiou"
  }
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININValidateAddressResponse> 
     */
    public class func postTelephonyProvidersEdgesAddressvalidationWithRequestBuilder(body body: ININValidateAddressRequest? = nil) -> RequestBuilder<ININValidateAddressResponse> {
        let path = "/api/v2/telephony/providers/edges/addressvalidation"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININValidateAddressResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a certificate authority.
     
     - parameter body: (body) CertificateAuthority (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesCertificateauthorities(body body: ININDomainCertificateAuthority? = nil, completion: ((data: ININDomainCertificateAuthority?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesCertificateauthoritiesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a certificate authority.
     - POST /api/v2/telephony/providers/edges/certificateauthorities
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "certificateDetails" : [ {
    "valid" : true,
    "signatureValid" : true,
    "expired" : true,
    "subject" : "aeiou",
    "issueDate" : "2000-01-23T04:56:07.000+0000",
    "issuer" : "aeiou",
    "expirationDate" : "2000-01-23T04:56:07.000+0000"
  } ],
  "selfUri" : "aeiou",
  "certificate" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "services" : [ "aeiou" ],
  "createdByApp" : "aeiou",
  "type" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter body: (body) CertificateAuthority (optional)

     - returns: RequestBuilder<ININDomainCertificateAuthority> 
     */
    public class func postTelephonyProvidersEdgesCertificateauthoritiesWithRequestBuilder(body body: ININDomainCertificateAuthority? = nil) -> RequestBuilder<ININDomainCertificateAuthority> {
        let path = "/api/v2/telephony/providers/edges/certificateauthorities"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDomainCertificateAuthority>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a new DID pool
     
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesDidpools(body body: ININDIDPool? = nil, completion: ((data: ININDIDPool?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesDidpoolsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a new DID pool
     - POST /api/v2/telephony/providers/edges/didpools
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "comments" : "aeiou",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "provider" : "aeiou",
  "startPhoneNumber" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "endPhoneNumber" : "aeiou"
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININDIDPool> 
     */
    public class func postTelephonyProvidersEdgesDidpoolsWithRequestBuilder(body body: ININDIDPool? = nil) -> RequestBuilder<ININDIDPool> {
        let path = "/api/v2/telephony/providers/edges/didpools"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDIDPool>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create an edge logical interface.
     
     - parameter edgeId: (path) Edge ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesEdgeIdLogicalinterfaces(edgeId edgeId: String, body: ININDomainLogicalInterface? = nil, completion: ((data: ININDomainLogicalInterface?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesEdgeIdLogicalinterfacesWithRequestBuilder(edgeId: edgeId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create an edge logical interface.
     - POST /api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces
     - Create
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "hardwareAddress" : "aeiou",
  "addresses" : [ {
    "address" : "aeiou",
    "type" : "aeiou",
    "persistent" : true,
    "family" : 123
  } ],
  "phoneTrunkBaseAssignments" : [ "" ],
  "primaryDns" : "aeiou",
  "externalTrunkBaseAssignments" : [ {
    "family" : 123,
    "trunkBase" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    }
  } ],
  "description" : "aeiou",
  "createdByApp" : "aeiou",
  "useForInternalEdgeCommunication" : true,
  "routes" : [ {
    "metric" : 123,
    "prefix" : "aeiou",
    "persistent" : true,
    "family" : 123,
    "nexthop" : "aeiou"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "lastModifiedUserId" : "aeiou",
  "lastModifiedCorrelationId" : "aeiou",
  "modifiedBy" : "aeiou",
  "secondaryDns" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "friendlyName" : "aeiou",
  "commandResponses" : [ {
    "commandName" : "aeiou",
    "acknowledged" : true,
    "errorInfo" : {
      "messageWithParams" : "aeiou",
      "code" : "aeiou",
      "contextId" : "aeiou",
      "details" : "aeiou",
      "messageParams" : {
        "key" : "aeiou"
      },
      "message" : "aeiou",
      "nested" : "",
      "status" : 123
    },
    "correlationId" : "aeiou"
  } ],
  "inheritPhoneTrunkBases" : true,
  "ifStatus" : "aeiou",
  "selfUri" : "aeiou",
  "ipAddress" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "ipv6Capabilities" : "",
  "version" : 123,
  "ipv4Capabilities" : {
    "metric" : 123,
    "enabled" : true,
    "dhcp" : true
  },
  "inheritPhoneTrunkBasesIPv6" : true,
  "physicalAdapterId" : "aeiou",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "edgeAssignedId" : "aeiou",
  "vlanTagId" : 123,
  "edgeUri" : "aeiou",
  "currentState" : "aeiou",
  "gateway" : "aeiou",
  "inheritPhoneTrunkBasesIPv4" : true
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININDomainLogicalInterface> 
     */
    public class func postTelephonyProvidersEdgesEdgeIdLogicalinterfacesWithRequestBuilder(edgeId edgeId: String, body: ININDomainLogicalInterface? = nil) -> RequestBuilder<ININDomainLogicalInterface> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDomainLogicalInterface>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a job to upload a list of Edge logs.
     
     - parameter edgeId: (path) Edge ID 
     - parameter body: (body) EdgeLogsJobRequest (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesEdgeIdLogsJobs(edgeId edgeId: String, body: ININEdgeLogsJobRequest? = nil, completion: ((data: ININEdgeLogsJobResponse?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesEdgeIdLogsJobsWithRequestBuilder(edgeId: edgeId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a job to upload a list of Edge logs.
     - POST /api/v2/telephony/providers/edges/{edgeId}/logs/jobs
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "id" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter body: (body) EdgeLogsJobRequest (optional)

     - returns: RequestBuilder<ININEdgeLogsJobResponse> 
     */
    public class func postTelephonyProvidersEdgesEdgeIdLogsJobsWithRequestBuilder(edgeId edgeId: String, body: ININEdgeLogsJobRequest? = nil) -> RequestBuilder<ININEdgeLogsJobResponse> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/logs/jobs"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeLogsJobResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Request that the specified fileIds be uploaded from the Edge.
     
     - parameter edgeId: (path) Edge ID 
     - parameter jobId: (path) Job ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesEdgeIdLogsJobsJobIdUpload(edgeId edgeId: String, jobId: String, body: ININEdgeLogsJobUploadRequest? = nil, completion: ((error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesEdgeIdLogsJobsJobIdUploadWithRequestBuilder(edgeId: edgeId, jobId: jobId, body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Request that the specified fileIds be uploaded from the Edge.
     - POST /api/v2/telephony/providers/edges/{edgeId}/logs/jobs/{jobId}/upload
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter edgeId: (path) Edge ID 
     - parameter jobId: (path) Job ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func postTelephonyProvidersEdgesEdgeIdLogsJobsJobIdUploadWithRequestBuilder(edgeId edgeId: String, jobId: String, body: ININEdgeLogsJobUploadRequest? = nil) -> RequestBuilder<Void> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/logs/jobs/{jobId}/upload"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Reboot an Edge
     
     - parameter edgeId: (path) Edge ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesEdgeIdReboot(edgeId edgeId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesEdgeIdRebootWithRequestBuilder(edgeId: edgeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Reboot an Edge
     - POST /api/v2/telephony/providers/edges/{edgeId}/reboot
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter edgeId: (path) Edge ID 

     - returns: RequestBuilder<String> 
     */
    public class func postTelephonyProvidersEdgesEdgeIdRebootWithRequestBuilder(edgeId edgeId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/reboot"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Starts a software update for this edge.
     
     - parameter edgeId: (path) Edge ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesEdgeIdSoftwareupdate(edgeId edgeId: String, body: ININDomainEdgeSoftwareUpdateDto? = nil, completion: ((data: ININDomainEdgeSoftwareUpdateDto?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesEdgeIdSoftwareupdateWithRequestBuilder(edgeId: edgeId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Starts a software update for this edge.
     - POST /api/v2/telephony/providers/edges/{edgeId}/softwareupdate
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "current" : true,
  "executeOnIdle" : true,
  "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
  "maxDownloadRate" : 123,
  "edgeUri" : "aeiou",
  "version" : {
    "latestRelease" : true,
    "current" : true,
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "publishDate" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "edgeUri" : "aeiou",
    "edgeVersion" : "aeiou"
  },
  "executeStopTime" : "2000-01-23T04:56:07.000+0000",
  "executeStartTime" : "2000-01-23T04:56:07.000+0000",
  "status" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININDomainEdgeSoftwareUpdateDto> 
     */
    public class func postTelephonyProvidersEdgesEdgeIdSoftwareupdateWithRequestBuilder(edgeId edgeId: String, body: ININDomainEdgeSoftwareUpdateDto? = nil) -> RequestBuilder<ININDomainEdgeSoftwareUpdateDto> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/softwareupdate"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDomainEdgeSoftwareUpdateDto>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Unpair an Edge
     
     - parameter edgeId: (path) Edge Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesEdgeIdUnpair(edgeId edgeId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesEdgeIdUnpairWithRequestBuilder(edgeId: edgeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Unpair an Edge
     - POST /api/v2/telephony/providers/edges/{edgeId}/unpair
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter edgeId: (path) Edge Id 

     - returns: RequestBuilder<String> 
     */
    public class func postTelephonyProvidersEdgesEdgeIdUnpairWithRequestBuilder(edgeId edgeId: String) -> RequestBuilder<String> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/unpair"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create an edge group.
     
     - parameter body: (body) EdgeGroup (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesEdgegroups(body body: ININEdgeGroup? = nil, completion: ((data: ININEdgeGroup?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesEdgegroupsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create an edge group.
     - POST /api/v2/telephony/providers/edges/edgegroups
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "phoneTrunkBaseAssignments" : [ "" ],
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "edgeTrunkBaseAssignment" : {
    "family" : 123,
    "trunkBase" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    }
  },
  "id" : "aeiou",
  "state" : "aeiou",
  "phoneTrunkBases" : [ "" ]
}}]
     
     - parameter body: (body) EdgeGroup (optional)

     - returns: RequestBuilder<ININEdgeGroup> 
     */
    public class func postTelephonyProvidersEdgesEdgegroupsWithRequestBuilder(body body: ININEdgeGroup? = nil) -> RequestBuilder<ININEdgeGroup> {
        let path = "/api/v2/telephony/providers/edges/edgegroups"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeGroup>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create endpoint
     
     - parameter body: (body) EndpointTemplate (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesEndpoints(body body: ININEndpoint? = nil, completion: ((data: ININEndpoint?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesEndpointsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create endpoint
     - POST /api/v2/telephony/providers/edges/endpoints
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "schema" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "selfUri" : "aeiou",
  "count" : 123,
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "enabled" : true,
  "site" : "",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "dids" : [ "aeiou" ],
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter body: (body) EndpointTemplate (optional)

     - returns: RequestBuilder<ININEndpoint> 
     */
    public class func postTelephonyProvidersEdgesEndpointsWithRequestBuilder(body body: ININEndpoint? = nil) -> RequestBuilder<ININEndpoint> {
        let path = "/api/v2/telephony/providers/edges/endpoints"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEndpoint>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a new extension pool
     
     - parameter body: (body) ExtensionPool (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesExtensionpools(body body: ININExtensionPool? = nil, completion: ((data: ININExtension?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesExtensionpoolsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a new extension pool
     - POST /api/v2/telephony/providers/edges/extensionpools
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "owner" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "ownerType" : "aeiou",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "number" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "extensionPool" : "",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter body: (body) ExtensionPool (optional)

     - returns: RequestBuilder<ININExtension> 
     */
    public class func postTelephonyProvidersEdgesExtensionpoolsWithRequestBuilder(body body: ININExtensionPool? = nil) -> RequestBuilder<ININExtension> {
        let path = "/api/v2/telephony/providers/edges/extensionpools"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININExtension>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create outbound rule
     
     - parameter body: (body) OutboundRoute (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesOutboundroutes(body body: ININOutboundRoute? = nil, completion: ((data: ININOutboundRoute?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesOutboundroutesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create outbound rule
     - POST /api/v2/telephony/providers/edges/outboundroutes
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "classificationTypes" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "distribution" : "aeiou",
  "version" : 123,
  "enabled" : true,
  "site" : {
    "primarySites" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    } ],
    "addresses" : [ {
      "address" : "aeiou",
      "display" : "aeiou",
      "mediaType" : "aeiou",
      "type" : "aeiou"
    } ],
    "secondaryEdges" : [ "" ],
    "selfUri" : "aeiou",
    "edges" : [ "" ],
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "primaryEdges" : [ {
      "softwareStatus" : {
        "current" : true,
        "executeOnIdle" : true,
        "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
        "maxDownloadRate" : 123,
        "edgeUri" : "aeiou",
        "version" : {
          "latestRelease" : true,
          "current" : true,
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "publishDate" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "edgeUri" : "aeiou",
          "edgeVersion" : "aeiou"
        },
        "executeStopTime" : "2000-01-23T04:56:07.000+0000",
        "executeStartTime" : "2000-01-23T04:56:07.000+0000",
        "status" : "aeiou"
      },
      "fullSoftwareVersion" : "aeiou",
      "onlineStatus" : "aeiou",
      "description" : "aeiou",
      "createdByApp" : "aeiou",
      "edgeGroup" : {
        "phoneTrunkBaseAssignments" : [ "" ],
        "selfUri" : "aeiou",
        "description" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "createdByApp" : "aeiou",
        "version" : 123,
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "aeiou",
        "managed" : true,
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "modifiedBy" : "aeiou",
        "edgeTrunkBaseAssignment" : {
          "family" : 123,
          "trunkBase" : ""
        },
        "id" : "aeiou",
        "state" : "aeiou",
        "phoneTrunkBases" : [ "" ]
      },
      "patch" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "apiVersion" : "aeiou",
      "managed" : true,
      "fingerprint" : "aeiou",
      "modifiedBy" : "aeiou",
      "model" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "make" : "aeiou",
      "stagedVersion" : "aeiou",
      "interfaces" : [ {
        "macAddress" : "aeiou",
        "endpoints" : [ "" ],
        "ifName" : "aeiou",
        "ipAddress" : "aeiou",
        "name" : "aeiou",
        "type" : "aeiou",
        "lineTypes" : [ "aeiou" ],
        "addressFamilyId" : "aeiou"
      } ],
      "serialNumber" : "aeiou",
      "softwareVersionConfiguration" : "aeiou",
      "physicalEdge" : true,
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "version" : 123,
      "currentVersion" : "aeiou",
      "site" : "",
      "softwareVersionPlatform" : "aeiou",
      "fingerprintHint" : "aeiou",
      "createdBy" : "aeiou",
      "softwareVersionTimestamp" : "aeiou",
      "pairingId" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "softwareVersion" : "aeiou",
      "statusCode" : "aeiou"
    } ],
    "createdBy" : "aeiou",
    "managed" : true,
    "secondarySites" : [ "" ],
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "location" : "",
    "id" : "aeiou",
    "state" : "aeiou",
    "edgeAutoUpdateConfig" : {
      "rrule" : "aeiou",
      "start" : "2000-01-23T04:56:07.000+0000",
      "timeZone" : "aeiou",
      "end" : "2000-01-23T04:56:07.000+0000"
    }
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "externalTrunkBases" : [ "" ],
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter body: (body) OutboundRoute (optional)

     - returns: RequestBuilder<ININOutboundRoute> 
     */
    public class func postTelephonyProvidersEdgesOutboundroutesWithRequestBuilder(body body: ININOutboundRoute? = nil) -> RequestBuilder<ININOutboundRoute> {
        let path = "/api/v2/telephony/providers/edges/outboundroutes"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININOutboundRoute>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a new Phone Base Settings object
     
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesPhonebasesettings(body body: ININPhoneBase? = nil, completion: ((data: ININPhoneBase?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesPhonebasesettingsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a new Phone Base Settings object
     - POST /api/v2/telephony/providers/edges/phonebasesettings
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "capabilities" : {
    "provisions" : true,
    "hardwareIdType" : "aeiou",
    "registers" : true,
    "dualRegisters" : true,
    "allowReboot" : true,
    "noRebalance" : true
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "phoneMetaBase" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "id" : "aeiou",
  "lines" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou",
    "properties" : {
      "key" : "{}"
    },
    "lineMetaBase" : ""
  } ],
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININPhoneBase> 
     */
    public class func postTelephonyProvidersEdgesPhonebasesettingsWithRequestBuilder(body body: ININPhoneBase? = nil) -> RequestBuilder<ININPhoneBase> {
        let path = "/api/v2/telephony/providers/edges/phonebasesettings"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhoneBase>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a new Phone
     
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesPhones(body body: ININPhone? = nil, completion: ((data: ININPhone?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesPhonesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a new Phone
     - POST /api/v2/telephony/providers/edges/phones
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "phoneBaseSettings" : "",
  "capabilities" : {
    "provisions" : true,
    "hardwareIdType" : "aeiou",
    "registers" : true,
    "dualRegisters" : true,
    "allowReboot" : true,
    "noRebalance" : true
  },
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "phoneMetaBase" : "",
  "createdByApp" : "aeiou",
  "edgeGroup" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "version" : 123,
  "site" : "",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "secondaryStatus" : "",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "webRtcUser" : "",
  "lines" : [ {
    "template" : "",
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "edgeGroup" : "",
    "loggedInUser" : "",
    "version" : 123,
    "site" : "",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "secondaryEdge" : "",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "primaryEdge" : {
      "softwareStatus" : {
        "current" : true,
        "executeOnIdle" : true,
        "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
        "maxDownloadRate" : 123,
        "edgeUri" : "aeiou",
        "version" : {
          "latestRelease" : true,
          "current" : true,
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "publishDate" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "edgeUri" : "aeiou",
          "edgeVersion" : "aeiou"
        },
        "executeStopTime" : "2000-01-23T04:56:07.000+0000",
        "executeStartTime" : "2000-01-23T04:56:07.000+0000",
        "status" : "aeiou"
      },
      "fullSoftwareVersion" : "aeiou",
      "onlineStatus" : "aeiou",
      "description" : "aeiou",
      "createdByApp" : "aeiou",
      "edgeGroup" : {
        "phoneTrunkBaseAssignments" : [ "" ],
        "selfUri" : "aeiou",
        "description" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "createdByApp" : "aeiou",
        "version" : 123,
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "aeiou",
        "managed" : true,
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "modifiedBy" : "aeiou",
        "edgeTrunkBaseAssignment" : {
          "family" : 123,
          "trunkBase" : ""
        },
        "id" : "aeiou",
        "state" : "aeiou",
        "phoneTrunkBases" : [ "" ]
      },
      "patch" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "apiVersion" : "aeiou",
      "managed" : true,
      "fingerprint" : "aeiou",
      "modifiedBy" : "aeiou",
      "model" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "make" : "aeiou",
      "stagedVersion" : "aeiou",
      "interfaces" : [ {
        "macAddress" : "aeiou",
        "endpoints" : [ "" ],
        "ifName" : "aeiou",
        "ipAddress" : "aeiou",
        "name" : "aeiou",
        "type" : "aeiou",
        "lineTypes" : [ "aeiou" ],
        "addressFamilyId" : "aeiou"
      } ],
      "serialNumber" : "aeiou",
      "softwareVersionConfiguration" : "aeiou",
      "physicalEdge" : true,
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "version" : 123,
      "currentVersion" : "aeiou",
      "site" : "",
      "softwareVersionPlatform" : "aeiou",
      "fingerprintHint" : "aeiou",
      "createdBy" : "aeiou",
      "softwareVersionTimestamp" : "aeiou",
      "pairingId" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "softwareVersion" : "aeiou",
      "statusCode" : "aeiou"
    },
    "lineBaseSettings" : "",
    "properties" : {
      "key" : "{}"
    }
  } ],
  "lineBaseSettings" : "",
  "properties" : {
    "key" : "{}"
  },
  "status" : {
    "operationalStatus" : "aeiou",
    "edgesStatus" : "aeiou",
    "edge" : "",
    "lineStatuses" : [ {
      "contactAddresses" : [ "aeiou" ],
      "addressOfRecord" : "aeiou",
      "id" : "aeiou",
      "reachable" : true,
      "reachableStateTime" : "2000-01-23T04:56:07.000+0000"
    } ],
    "phoneAssignmentToEdgeType" : "aeiou",
    "provision" : {
      "errorInfo" : "aeiou",
      "time" : "2000-01-23T04:56:07.000+0000",
      "source" : "aeiou"
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  }
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININPhone> 
     */
    public class func postTelephonyProvidersEdgesPhonesWithRequestBuilder(body body: ININPhone? = nil) -> RequestBuilder<ININPhone> {
        let path = "/api/v2/telephony/providers/edges/phones"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhone>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Reboot a Phone
     
     - parameter phoneId: (path) Phone Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesPhonesPhoneIdReboot(phoneId phoneId: String, completion: ((error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesPhonesPhoneIdRebootWithRequestBuilder(phoneId: phoneId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Reboot a Phone
     - POST /api/v2/telephony/providers/edges/phones/{phoneId}/reboot
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter phoneId: (path) Phone Id 

     - returns: RequestBuilder<Void> 
     */
    public class func postTelephonyProvidersEdgesPhonesPhoneIdRebootWithRequestBuilder(phoneId phoneId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/telephony/providers/edges/phones/{phoneId}/reboot"
        path = path.stringByReplacingOccurrencesOfString("{phoneId}", withString: "\(phoneId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Reboot Multiple Phones
     
     - parameter body: (body) body (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesPhonesReboot(body body: ININPhonesReboot? = nil, completion: ((error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesPhonesRebootWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Reboot Multiple Phones
     - POST /api/v2/telephony/providers/edges/phones/reboot
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter body: (body) body (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func postTelephonyProvidersEdgesPhonesRebootWithRequestBuilder(body body: ININPhonesReboot? = nil) -> RequestBuilder<Void> {
        let path = "/api/v2/telephony/providers/edges/phones/reboot"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a Site.
     
     - parameter body: (body) Site (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesSites(body body: ININSite? = nil, completion: ((data: ININSite?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesSitesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a Site.
     - POST /api/v2/telephony/providers/edges/sites
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "primarySites" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "addresses" : [ {
    "address" : "aeiou",
    "display" : "aeiou",
    "mediaType" : "aeiou",
    "type" : "aeiou"
  } ],
  "secondaryEdges" : [ "" ],
  "selfUri" : "aeiou",
  "edges" : [ "" ],
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "primaryEdges" : [ {
    "softwareStatus" : {
      "current" : true,
      "executeOnIdle" : true,
      "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
      "maxDownloadRate" : 123,
      "edgeUri" : "aeiou",
      "version" : {
        "latestRelease" : true,
        "current" : true,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "publishDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "edgeUri" : "aeiou",
        "edgeVersion" : "aeiou"
      },
      "executeStopTime" : "2000-01-23T04:56:07.000+0000",
      "executeStartTime" : "2000-01-23T04:56:07.000+0000",
      "status" : "aeiou"
    },
    "fullSoftwareVersion" : "aeiou",
    "onlineStatus" : "aeiou",
    "description" : "aeiou",
    "createdByApp" : "aeiou",
    "edgeGroup" : {
      "phoneTrunkBaseAssignments" : [ "" ],
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "version" : 123,
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "aeiou",
      "managed" : true,
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "edgeTrunkBaseAssignment" : {
        "family" : 123,
        "trunkBase" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "phoneTrunkBases" : [ "" ]
    },
    "patch" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "apiVersion" : "aeiou",
    "managed" : true,
    "fingerprint" : "aeiou",
    "modifiedBy" : "aeiou",
    "model" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "make" : "aeiou",
    "stagedVersion" : "aeiou",
    "interfaces" : [ {
      "macAddress" : "aeiou",
      "endpoints" : [ "" ],
      "ifName" : "aeiou",
      "ipAddress" : "aeiou",
      "name" : "aeiou",
      "type" : "aeiou",
      "lineTypes" : [ "aeiou" ],
      "addressFamilyId" : "aeiou"
    } ],
    "serialNumber" : "aeiou",
    "softwareVersionConfiguration" : "aeiou",
    "physicalEdge" : true,
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "version" : 123,
    "currentVersion" : "aeiou",
    "site" : "",
    "softwareVersionPlatform" : "aeiou",
    "fingerprintHint" : "aeiou",
    "createdBy" : "aeiou",
    "softwareVersionTimestamp" : "aeiou",
    "pairingId" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "softwareVersion" : "aeiou",
    "statusCode" : "aeiou"
  } ],
  "createdBy" : "aeiou",
  "managed" : true,
  "secondarySites" : [ "" ],
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "location" : "",
  "id" : "aeiou",
  "state" : "aeiou",
  "edgeAutoUpdateConfig" : {
    "rrule" : "aeiou",
    "start" : "2000-01-23T04:56:07.000+0000",
    "timeZone" : "aeiou",
    "end" : "2000-01-23T04:56:07.000+0000"
  }
}}]
     
     - parameter body: (body) Site (optional)

     - returns: RequestBuilder<ININSite> 
     */
    public class func postTelephonyProvidersEdgesSitesWithRequestBuilder(body body: ININSite? = nil) -> RequestBuilder<ININSite> {
        let path = "/api/v2/telephony/providers/edges/sites"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSite>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Triggers the rebalance operation.
     
     - parameter siteId: (path) Site ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesSitesSiteIdRebalance(siteId siteId: String, completion: ((error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesSitesSiteIdRebalanceWithRequestBuilder(siteId: siteId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Triggers the rebalance operation.
     - POST /api/v2/telephony/providers/edges/sites/{siteId}/rebalance
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter siteId: (path) Site ID 

     - returns: RequestBuilder<Void> 
     */
    public class func postTelephonyProvidersEdgesSitesSiteIdRebalanceWithRequestBuilder(siteId siteId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/telephony/providers/edges/sites/{siteId}/rebalance"
        path = path.stringByReplacingOccurrencesOfString("{siteId}", withString: "\(siteId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a Trunk Base Settings object
     
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postTelephonyProvidersEdgesTrunkbasesettings(body body: ININTrunkBase? = nil, completion: ((data: ININTrunkBase?, error: ErrorType?) -> Void)) {
        postTelephonyProvidersEdgesTrunkbasesettingsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a Trunk Base Settings object
     - POST /api/v2/telephony/providers/edges/trunkbasesettings
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "trunkType" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "trunkMetabase" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "id" : "aeiou",
  "state" : "aeiou",
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININTrunkBase> 
     */
    public class func postTelephonyProvidersEdgesTrunkbasesettingsWithRequestBuilder(body body: ININTrunkBase? = nil) -> RequestBuilder<ININTrunkBase> {
        let path = "/api/v2/telephony/providers/edges/trunkbasesettings"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTrunkBase>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a certificate authority.
     
     - parameter certificateId: (path) Certificate ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesCertificateauthoritiesCertificateId(certificateId certificateId: String, body: ININDomainCertificateAuthority? = nil, completion: ((data: ININDomainCertificateAuthority?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesCertificateauthoritiesCertificateIdWithRequestBuilder(certificateId: certificateId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a certificate authority.
     - PUT /api/v2/telephony/providers/edges/certificateauthorities/{certificateId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "certificateDetails" : [ {
    "valid" : true,
    "signatureValid" : true,
    "expired" : true,
    "subject" : "aeiou",
    "issueDate" : "2000-01-23T04:56:07.000+0000",
    "issuer" : "aeiou",
    "expirationDate" : "2000-01-23T04:56:07.000+0000"
  } ],
  "selfUri" : "aeiou",
  "certificate" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "services" : [ "aeiou" ],
  "createdByApp" : "aeiou",
  "type" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter certificateId: (path) Certificate ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININDomainCertificateAuthority> 
     */
    public class func putTelephonyProvidersEdgesCertificateauthoritiesCertificateIdWithRequestBuilder(certificateId certificateId: String, body: ININDomainCertificateAuthority? = nil) -> RequestBuilder<ININDomainCertificateAuthority> {
        var path = "/api/v2/telephony/providers/edges/certificateauthorities/{certificateId}"
        path = path.stringByReplacingOccurrencesOfString("{certificateId}", withString: "\(certificateId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDomainCertificateAuthority>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a DID Pool by ID.
     
     - parameter didPoolId: (path) DID pool ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesDidpoolsDidpoolId(didPoolId didPoolId: String, body: ININDIDPool? = nil, completion: ((data: ININDIDPool?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesDidpoolsDidpoolIdWithRequestBuilder(didPoolId: didPoolId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a DID Pool by ID.
     - PUT /api/v2/telephony/providers/edges/didpools/{didPoolId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "comments" : "aeiou",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "provider" : "aeiou",
  "startPhoneNumber" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "endPhoneNumber" : "aeiou"
}}]
     
     - parameter didPoolId: (path) DID pool ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININDIDPool> 
     */
    public class func putTelephonyProvidersEdgesDidpoolsDidpoolIdWithRequestBuilder(didPoolId didPoolId: String, body: ININDIDPool? = nil) -> RequestBuilder<ININDIDPool> {
        var path = "/api/v2/telephony/providers/edges/didpools/{didPoolId}"
        path = path.stringByReplacingOccurrencesOfString("{didPoolId}", withString: "\(didPoolId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDIDPool>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a DID by ID.
     
     - parameter didId: (path) DID ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesDidsDidId(didId didId: String, body: ININDID? = nil, completion: ((data: ININDID?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesDidsDidIdWithRequestBuilder(didId: didId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a DID by ID.
     - PUT /api/v2/telephony/providers/edges/dids/{didId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "owner" : "",
  "ownerType" : "aeiou",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "phoneNumber" : "aeiou",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "didPool" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter didId: (path) DID ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININDID> 
     */
    public class func putTelephonyProvidersEdgesDidsDidIdWithRequestBuilder(didId didId: String, body: ININDID? = nil) -> RequestBuilder<ININDID> {
        var path = "/api/v2/telephony/providers/edges/dids/{didId}"
        path = path.stringByReplacingOccurrencesOfString("{didId}", withString: "\(didId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDID>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a edge.
     
     - parameter edgeId: (path) Edge ID 
     - parameter body: (body) Edge (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesEdgeId(edgeId edgeId: String, body: ININEdge? = nil, completion: ((data: ININEdge?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesEdgeIdWithRequestBuilder(edgeId: edgeId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a edge.
     - PUT /api/v2/telephony/providers/edges/{edgeId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "softwareStatus" : {
    "current" : true,
    "executeOnIdle" : true,
    "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
    "maxDownloadRate" : 123,
    "edgeUri" : "aeiou",
    "version" : {
      "latestRelease" : true,
      "current" : true,
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "publishDate" : "2000-01-23T04:56:07.000+0000",
      "id" : "aeiou",
      "edgeUri" : "aeiou",
      "edgeVersion" : "aeiou"
    },
    "executeStopTime" : "2000-01-23T04:56:07.000+0000",
    "executeStartTime" : "2000-01-23T04:56:07.000+0000",
    "status" : "aeiou"
  },
  "fullSoftwareVersion" : "aeiou",
  "onlineStatus" : "aeiou",
  "description" : "aeiou",
  "createdByApp" : "aeiou",
  "edgeGroup" : {
    "phoneTrunkBaseAssignments" : [ "" ],
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "managed" : true,
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "edgeTrunkBaseAssignment" : {
      "family" : 123,
      "trunkBase" : ""
    },
    "id" : "aeiou",
    "state" : "aeiou",
    "phoneTrunkBases" : [ "" ]
  },
  "patch" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "apiVersion" : "aeiou",
  "managed" : true,
  "fingerprint" : "aeiou",
  "modifiedBy" : "aeiou",
  "model" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "make" : "aeiou",
  "stagedVersion" : "aeiou",
  "interfaces" : [ {
    "macAddress" : "aeiou",
    "endpoints" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    } ],
    "ifName" : "aeiou",
    "ipAddress" : "aeiou",
    "name" : "aeiou",
    "type" : "aeiou",
    "lineTypes" : [ "aeiou" ],
    "addressFamilyId" : "aeiou"
  } ],
  "serialNumber" : "aeiou",
  "softwareVersionConfiguration" : "aeiou",
  "physicalEdge" : true,
  "selfUri" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "version" : 123,
  "currentVersion" : "aeiou",
  "site" : "",
  "softwareVersionPlatform" : "aeiou",
  "fingerprintHint" : "aeiou",
  "createdBy" : "aeiou",
  "softwareVersionTimestamp" : "aeiou",
  "pairingId" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "softwareVersion" : "aeiou",
  "statusCode" : "aeiou"
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter body: (body) Edge (optional)

     - returns: RequestBuilder<ININEdge> 
     */
    public class func putTelephonyProvidersEdgesEdgeIdWithRequestBuilder(edgeId edgeId: String, body: ININEdge? = nil) -> RequestBuilder<ININEdge> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdge>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a line.
     
     - parameter edgeId: (path) Edge ID 
     - parameter lineId: (path) Line ID 
     - parameter body: (body) Line (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesEdgeIdLinesLineId(edgeId edgeId: String, lineId: String, body: ININEdgeLine? = nil, completion: ((data: ININEdgeLine?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesEdgeIdLinesLineIdWithRequestBuilder(edgeId: edgeId, lineId: lineId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a line.
     - PUT /api/v2/telephony/providers/edges/{edgeId}/lines/{lineId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "schema" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "edge" : {
    "softwareStatus" : {
      "current" : true,
      "executeOnIdle" : true,
      "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
      "maxDownloadRate" : 123,
      "edgeUri" : "aeiou",
      "version" : {
        "latestRelease" : true,
        "current" : true,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "publishDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "edgeUri" : "aeiou",
        "edgeVersion" : "aeiou"
      },
      "executeStopTime" : "2000-01-23T04:56:07.000+0000",
      "executeStartTime" : "2000-01-23T04:56:07.000+0000",
      "status" : "aeiou"
    },
    "fullSoftwareVersion" : "aeiou",
    "onlineStatus" : "aeiou",
    "description" : "aeiou",
    "createdByApp" : "aeiou",
    "edgeGroup" : {
      "phoneTrunkBaseAssignments" : [ "" ],
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "version" : 123,
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "aeiou",
      "managed" : true,
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "edgeTrunkBaseAssignment" : {
        "family" : 123,
        "trunkBase" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "phoneTrunkBases" : [ "" ]
    },
    "patch" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "apiVersion" : "aeiou",
    "managed" : true,
    "fingerprint" : "aeiou",
    "modifiedBy" : "aeiou",
    "model" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "make" : "aeiou",
    "stagedVersion" : "aeiou",
    "interfaces" : [ {
      "macAddress" : "aeiou",
      "endpoints" : [ "" ],
      "ifName" : "aeiou",
      "ipAddress" : "aeiou",
      "name" : "aeiou",
      "type" : "aeiou",
      "lineTypes" : [ "aeiou" ],
      "addressFamilyId" : "aeiou"
    } ],
    "serialNumber" : "aeiou",
    "softwareVersionConfiguration" : "aeiou",
    "physicalEdge" : true,
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "version" : 123,
    "currentVersion" : "aeiou",
    "site" : "",
    "softwareVersionPlatform" : "aeiou",
    "fingerprintHint" : "aeiou",
    "createdBy" : "aeiou",
    "softwareVersionTimestamp" : "aeiou",
    "pairingId" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "softwareVersion" : "aeiou",
    "statusCode" : "aeiou"
  },
  "endpoint" : {
    "schema" : "",
    "selfUri" : "aeiou",
    "count" : 123,
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "enabled" : true,
    "site" : "",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "dids" : [ "aeiou" ],
    "properties" : {
      "key" : "{}"
    }
  },
  "lineType" : "aeiou",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "ipAddress" : "aeiou",
  "id" : "aeiou",
  "edgeGroup" : "",
  "logicalInterfaceId" : "aeiou",
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter lineId: (path) Line ID 
     - parameter body: (body) Line (optional)

     - returns: RequestBuilder<ININEdgeLine> 
     */
    public class func putTelephonyProvidersEdgesEdgeIdLinesLineIdWithRequestBuilder(edgeId edgeId: String, lineId: String, body: ININEdgeLine? = nil) -> RequestBuilder<ININEdgeLine> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/lines/{lineId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{lineId}", withString: "\(lineId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeLine>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an edge logical interface.
     
     - parameter edgeId: (path) Edge ID 
     - parameter interfaceId: (path) Interface ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesEdgeIdLogicalinterfacesInterfaceId(edgeId edgeId: String, interfaceId: String, body: ININDomainLogicalInterface? = nil, completion: ((data: ININDomainLogicalInterface?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesEdgeIdLogicalinterfacesInterfaceIdWithRequestBuilder(edgeId: edgeId, interfaceId: interfaceId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update an edge logical interface.
     - PUT /api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces/{interfaceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "hardwareAddress" : "aeiou",
  "addresses" : [ {
    "address" : "aeiou",
    "type" : "aeiou",
    "persistent" : true,
    "family" : 123
  } ],
  "phoneTrunkBaseAssignments" : [ "" ],
  "primaryDns" : "aeiou",
  "externalTrunkBaseAssignments" : [ {
    "family" : 123,
    "trunkBase" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    }
  } ],
  "description" : "aeiou",
  "createdByApp" : "aeiou",
  "useForInternalEdgeCommunication" : true,
  "routes" : [ {
    "metric" : 123,
    "prefix" : "aeiou",
    "persistent" : true,
    "family" : 123,
    "nexthop" : "aeiou"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "lastModifiedUserId" : "aeiou",
  "lastModifiedCorrelationId" : "aeiou",
  "modifiedBy" : "aeiou",
  "secondaryDns" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "friendlyName" : "aeiou",
  "commandResponses" : [ {
    "commandName" : "aeiou",
    "acknowledged" : true,
    "errorInfo" : {
      "messageWithParams" : "aeiou",
      "code" : "aeiou",
      "contextId" : "aeiou",
      "details" : "aeiou",
      "messageParams" : {
        "key" : "aeiou"
      },
      "message" : "aeiou",
      "nested" : "",
      "status" : 123
    },
    "correlationId" : "aeiou"
  } ],
  "inheritPhoneTrunkBases" : true,
  "ifStatus" : "aeiou",
  "selfUri" : "aeiou",
  "ipAddress" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "ipv6Capabilities" : "",
  "version" : 123,
  "ipv4Capabilities" : {
    "metric" : 123,
    "enabled" : true,
    "dhcp" : true
  },
  "inheritPhoneTrunkBasesIPv6" : true,
  "physicalAdapterId" : "aeiou",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "edgeAssignedId" : "aeiou",
  "vlanTagId" : 123,
  "edgeUri" : "aeiou",
  "currentState" : "aeiou",
  "gateway" : "aeiou",
  "inheritPhoneTrunkBasesIPv4" : true
}}]
     
     - parameter edgeId: (path) Edge ID 
     - parameter interfaceId: (path) Interface ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININDomainLogicalInterface> 
     */
    public class func putTelephonyProvidersEdgesEdgeIdLogicalinterfacesInterfaceIdWithRequestBuilder(edgeId edgeId: String, interfaceId: String, body: ININDomainLogicalInterface? = nil) -> RequestBuilder<ININDomainLogicalInterface> {
        var path = "/api/v2/telephony/providers/edges/{edgeId}/logicalinterfaces/{interfaceId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeId}", withString: "\(edgeId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{interfaceId}", withString: "\(interfaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDomainLogicalInterface>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an edge group.
     
     - parameter edgeGroupId: (path) Edge group ID 
     - parameter body: (body) EdgeGroup (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesEdgegroupsEdgegroupId(edgeGroupId edgeGroupId: String, body: ININEdgeGroup? = nil, completion: ((data: ININEdgeGroup?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesEdgegroupsEdgegroupIdWithRequestBuilder(edgeGroupId: edgeGroupId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update an edge group.
     - PUT /api/v2/telephony/providers/edges/edgegroups/{edgeGroupId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "phoneTrunkBaseAssignments" : [ "" ],
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "edgeTrunkBaseAssignment" : {
    "family" : 123,
    "trunkBase" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    }
  },
  "id" : "aeiou",
  "state" : "aeiou",
  "phoneTrunkBases" : [ "" ]
}}]
     
     - parameter edgeGroupId: (path) Edge group ID 
     - parameter body: (body) EdgeGroup (optional)

     - returns: RequestBuilder<ININEdgeGroup> 
     */
    public class func putTelephonyProvidersEdgesEdgegroupsEdgegroupIdWithRequestBuilder(edgeGroupId edgeGroupId: String, body: ININEdgeGroup? = nil) -> RequestBuilder<ININEdgeGroup> {
        var path = "/api/v2/telephony/providers/edges/edgegroups/{edgeGroupId}"
        path = path.stringByReplacingOccurrencesOfString("{edgeGroupId}", withString: "\(edgeGroupId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEdgeGroup>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update endpoint
     
     - parameter endpointId: (path) Endpoint ID 
     - parameter body: (body) EndpointTemplate (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesEndpointsEndpointId(endpointId endpointId: String, body: ININEndpoint? = nil, completion: ((data: ININEndpoint?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesEndpointsEndpointIdWithRequestBuilder(endpointId: endpointId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update endpoint
     - PUT /api/v2/telephony/providers/edges/endpoints/{endpointId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "schema" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "selfUri" : "aeiou",
  "count" : 123,
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "enabled" : true,
  "site" : "",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "dids" : [ "aeiou" ],
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter endpointId: (path) Endpoint ID 
     - parameter body: (body) EndpointTemplate (optional)

     - returns: RequestBuilder<ININEndpoint> 
     */
    public class func putTelephonyProvidersEdgesEndpointsEndpointIdWithRequestBuilder(endpointId endpointId: String, body: ININEndpoint? = nil) -> RequestBuilder<ININEndpoint> {
        var path = "/api/v2/telephony/providers/edges/endpoints/{endpointId}"
        path = path.stringByReplacingOccurrencesOfString("{endpointId}", withString: "\(endpointId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININEndpoint>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an extension pool by ID
     
     - parameter extensionPoolId: (path) Extension pool ID 
     - parameter body: (body) ExtensionPool (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesExtensionpoolsExtensionpoolId(extensionPoolId extensionPoolId: String, body: ININExtensionPool? = nil, completion: ((data: ININExtensionPool?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesExtensionpoolsExtensionpoolIdWithRequestBuilder(extensionPoolId: extensionPoolId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update an extension pool by ID
     - PUT /api/v2/telephony/providers/edges/extensionpools/{extensionPoolId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "startNumber" : "aeiou",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "endNumber" : "aeiou",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter extensionPoolId: (path) Extension pool ID 
     - parameter body: (body) ExtensionPool (optional)

     - returns: RequestBuilder<ININExtensionPool> 
     */
    public class func putTelephonyProvidersEdgesExtensionpoolsExtensionpoolIdWithRequestBuilder(extensionPoolId extensionPoolId: String, body: ININExtensionPool? = nil) -> RequestBuilder<ININExtensionPool> {
        var path = "/api/v2/telephony/providers/edges/extensionpools/{extensionPoolId}"
        path = path.stringByReplacingOccurrencesOfString("{extensionPoolId}", withString: "\(extensionPoolId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININExtensionPool>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an extension by ID.
     
     - parameter extensionId: (path) Extension ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesExtensionsExtensionId(extensionId extensionId: String, body: ININExtension? = nil, completion: ((data: ININExtension?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesExtensionsExtensionIdWithRequestBuilder(extensionId: extensionId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update an extension by ID.
     - PUT /api/v2/telephony/providers/edges/extensions/{extensionId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "owner" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "ownerType" : "aeiou",
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "number" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "extensionPool" : "",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter extensionId: (path) Extension ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININExtension> 
     */
    public class func putTelephonyProvidersEdgesExtensionsExtensionIdWithRequestBuilder(extensionId extensionId: String, body: ININExtension? = nil) -> RequestBuilder<ININExtension> {
        var path = "/api/v2/telephony/providers/edges/extensions/{extensionId}"
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININExtension>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update outbound route
     
     - parameter outboundRouteId: (path) Outbound route ID 
     - parameter body: (body) OutboundRoute (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesOutboundroutesOutboundrouteId(outboundRouteId outboundRouteId: String, body: ININOutboundRoute? = nil, completion: ((data: ININOutboundRoute?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesOutboundroutesOutboundrouteIdWithRequestBuilder(outboundRouteId: outboundRouteId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update outbound route
     - PUT /api/v2/telephony/providers/edges/outboundroutes/{outboundRouteId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "classificationTypes" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "distribution" : "aeiou",
  "version" : 123,
  "enabled" : true,
  "site" : {
    "primarySites" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    } ],
    "addresses" : [ {
      "address" : "aeiou",
      "display" : "aeiou",
      "mediaType" : "aeiou",
      "type" : "aeiou"
    } ],
    "secondaryEdges" : [ "" ],
    "selfUri" : "aeiou",
    "edges" : [ "" ],
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "version" : 123,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "primaryEdges" : [ {
      "softwareStatus" : {
        "current" : true,
        "executeOnIdle" : true,
        "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
        "maxDownloadRate" : 123,
        "edgeUri" : "aeiou",
        "version" : {
          "latestRelease" : true,
          "current" : true,
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "publishDate" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "edgeUri" : "aeiou",
          "edgeVersion" : "aeiou"
        },
        "executeStopTime" : "2000-01-23T04:56:07.000+0000",
        "executeStartTime" : "2000-01-23T04:56:07.000+0000",
        "status" : "aeiou"
      },
      "fullSoftwareVersion" : "aeiou",
      "onlineStatus" : "aeiou",
      "description" : "aeiou",
      "createdByApp" : "aeiou",
      "edgeGroup" : {
        "phoneTrunkBaseAssignments" : [ "" ],
        "selfUri" : "aeiou",
        "description" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "createdByApp" : "aeiou",
        "version" : 123,
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "aeiou",
        "managed" : true,
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "modifiedBy" : "aeiou",
        "edgeTrunkBaseAssignment" : {
          "family" : 123,
          "trunkBase" : ""
        },
        "id" : "aeiou",
        "state" : "aeiou",
        "phoneTrunkBases" : [ "" ]
      },
      "patch" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "apiVersion" : "aeiou",
      "managed" : true,
      "fingerprint" : "aeiou",
      "modifiedBy" : "aeiou",
      "model" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "make" : "aeiou",
      "stagedVersion" : "aeiou",
      "interfaces" : [ {
        "macAddress" : "aeiou",
        "endpoints" : [ "" ],
        "ifName" : "aeiou",
        "ipAddress" : "aeiou",
        "name" : "aeiou",
        "type" : "aeiou",
        "lineTypes" : [ "aeiou" ],
        "addressFamilyId" : "aeiou"
      } ],
      "serialNumber" : "aeiou",
      "softwareVersionConfiguration" : "aeiou",
      "physicalEdge" : true,
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "version" : 123,
      "currentVersion" : "aeiou",
      "site" : "",
      "softwareVersionPlatform" : "aeiou",
      "fingerprintHint" : "aeiou",
      "createdBy" : "aeiou",
      "softwareVersionTimestamp" : "aeiou",
      "pairingId" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "softwareVersion" : "aeiou",
      "statusCode" : "aeiou"
    } ],
    "createdBy" : "aeiou",
    "managed" : true,
    "secondarySites" : [ "" ],
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "location" : "",
    "id" : "aeiou",
    "state" : "aeiou",
    "edgeAutoUpdateConfig" : {
      "rrule" : "aeiou",
      "start" : "2000-01-23T04:56:07.000+0000",
      "timeZone" : "aeiou",
      "end" : "2000-01-23T04:56:07.000+0000"
    }
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "externalTrunkBases" : [ "" ],
  "id" : "aeiou",
  "state" : "aeiou"
}}]
     
     - parameter outboundRouteId: (path) Outbound route ID 
     - parameter body: (body) OutboundRoute (optional)

     - returns: RequestBuilder<ININOutboundRoute> 
     */
    public class func putTelephonyProvidersEdgesOutboundroutesOutboundrouteIdWithRequestBuilder(outboundRouteId outboundRouteId: String, body: ININOutboundRoute? = nil) -> RequestBuilder<ININOutboundRoute> {
        var path = "/api/v2/telephony/providers/edges/outboundroutes/{outboundRouteId}"
        path = path.stringByReplacingOccurrencesOfString("{outboundRouteId}", withString: "\(outboundRouteId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININOutboundRoute>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a Phone Base Settings by ID
     
     - parameter phoneBaseId: (path) Phone base ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesPhonebasesettingsPhonebaseId(phoneBaseId phoneBaseId: String, body: ININPhoneBase? = nil, completion: ((data: ININPhoneBase?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesPhonebasesettingsPhonebaseIdWithRequestBuilder(phoneBaseId: phoneBaseId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a Phone Base Settings by ID
     - PUT /api/v2/telephony/providers/edges/phonebasesettings/{phoneBaseId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "capabilities" : {
    "provisions" : true,
    "hardwareIdType" : "aeiou",
    "registers" : true,
    "dualRegisters" : true,
    "allowReboot" : true,
    "noRebalance" : true
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "phoneMetaBase" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "id" : "aeiou",
  "lines" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou",
    "properties" : {
      "key" : "{}"
    },
    "lineMetaBase" : ""
  } ],
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter phoneBaseId: (path) Phone base ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININPhoneBase> 
     */
    public class func putTelephonyProvidersEdgesPhonebasesettingsPhonebaseIdWithRequestBuilder(phoneBaseId phoneBaseId: String, body: ININPhoneBase? = nil) -> RequestBuilder<ININPhoneBase> {
        var path = "/api/v2/telephony/providers/edges/phonebasesettings/{phoneBaseId}"
        path = path.stringByReplacingOccurrencesOfString("{phoneBaseId}", withString: "\(phoneBaseId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhoneBase>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a Phone by ID
     
     - parameter phoneId: (path) Phone ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesPhonesPhoneId(phoneId phoneId: String, body: ININPhone? = nil, completion: ((data: ININPhone?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesPhonesPhoneIdWithRequestBuilder(phoneId: phoneId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a Phone by ID
     - PUT /api/v2/telephony/providers/edges/phones/{phoneId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "phoneBaseSettings" : "",
  "capabilities" : {
    "provisions" : true,
    "hardwareIdType" : "aeiou",
    "registers" : true,
    "dualRegisters" : true,
    "allowReboot" : true,
    "noRebalance" : true
  },
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "phoneMetaBase" : "",
  "createdByApp" : "aeiou",
  "edgeGroup" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "version" : 123,
  "site" : "",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "secondaryStatus" : "",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "webRtcUser" : "",
  "lines" : [ {
    "template" : "",
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "createdByApp" : "aeiou",
    "edgeGroup" : "",
    "loggedInUser" : "",
    "version" : 123,
    "site" : "",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "createdBy" : "aeiou",
    "secondaryEdge" : "",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "modifiedBy" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "primaryEdge" : {
      "softwareStatus" : {
        "current" : true,
        "executeOnIdle" : true,
        "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
        "maxDownloadRate" : 123,
        "edgeUri" : "aeiou",
        "version" : {
          "latestRelease" : true,
          "current" : true,
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "publishDate" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "edgeUri" : "aeiou",
          "edgeVersion" : "aeiou"
        },
        "executeStopTime" : "2000-01-23T04:56:07.000+0000",
        "executeStartTime" : "2000-01-23T04:56:07.000+0000",
        "status" : "aeiou"
      },
      "fullSoftwareVersion" : "aeiou",
      "onlineStatus" : "aeiou",
      "description" : "aeiou",
      "createdByApp" : "aeiou",
      "edgeGroup" : {
        "phoneTrunkBaseAssignments" : [ "" ],
        "selfUri" : "aeiou",
        "description" : "aeiou",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "createdByApp" : "aeiou",
        "version" : 123,
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "aeiou",
        "managed" : true,
        "name" : "aeiou",
        "modifiedByApp" : "aeiou",
        "modifiedBy" : "aeiou",
        "edgeTrunkBaseAssignment" : {
          "family" : 123,
          "trunkBase" : ""
        },
        "id" : "aeiou",
        "state" : "aeiou",
        "phoneTrunkBases" : [ "" ]
      },
      "patch" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "apiVersion" : "aeiou",
      "managed" : true,
      "fingerprint" : "aeiou",
      "modifiedBy" : "aeiou",
      "model" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou",
      "make" : "aeiou",
      "stagedVersion" : "aeiou",
      "interfaces" : [ {
        "macAddress" : "aeiou",
        "endpoints" : [ "" ],
        "ifName" : "aeiou",
        "ipAddress" : "aeiou",
        "name" : "aeiou",
        "type" : "aeiou",
        "lineTypes" : [ "aeiou" ],
        "addressFamilyId" : "aeiou"
      } ],
      "serialNumber" : "aeiou",
      "softwareVersionConfiguration" : "aeiou",
      "physicalEdge" : true,
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "version" : 123,
      "currentVersion" : "aeiou",
      "site" : "",
      "softwareVersionPlatform" : "aeiou",
      "fingerprintHint" : "aeiou",
      "createdBy" : "aeiou",
      "softwareVersionTimestamp" : "aeiou",
      "pairingId" : "aeiou",
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "softwareVersion" : "aeiou",
      "statusCode" : "aeiou"
    },
    "lineBaseSettings" : "",
    "properties" : {
      "key" : "{}"
    }
  } ],
  "lineBaseSettings" : "",
  "properties" : {
    "key" : "{}"
  },
  "status" : {
    "operationalStatus" : "aeiou",
    "edgesStatus" : "aeiou",
    "edge" : "",
    "lineStatuses" : [ {
      "contactAddresses" : [ "aeiou" ],
      "addressOfRecord" : "aeiou",
      "id" : "aeiou",
      "reachable" : true,
      "reachableStateTime" : "2000-01-23T04:56:07.000+0000"
    } ],
    "phoneAssignmentToEdgeType" : "aeiou",
    "provision" : {
      "errorInfo" : "aeiou",
      "time" : "2000-01-23T04:56:07.000+0000",
      "source" : "aeiou"
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  }
}}]
     
     - parameter phoneId: (path) Phone ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININPhone> 
     */
    public class func putTelephonyProvidersEdgesPhonesPhoneIdWithRequestBuilder(phoneId phoneId: String, body: ININPhone? = nil) -> RequestBuilder<ININPhone> {
        var path = "/api/v2/telephony/providers/edges/phones/{phoneId}"
        path = path.stringByReplacingOccurrencesOfString("{phoneId}", withString: "\(phoneId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPhone>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a Site by ID.
     
     - parameter siteId: (path) Site ID 
     - parameter body: (body) Site (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesSitesSiteId(siteId siteId: String, body: ININSite? = nil, completion: ((data: ININSite?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesSitesSiteIdWithRequestBuilder(siteId: siteId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a Site by ID.
     - PUT /api/v2/telephony/providers/edges/sites/{siteId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "primarySites" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "addresses" : [ {
    "address" : "aeiou",
    "display" : "aeiou",
    "mediaType" : "aeiou",
    "type" : "aeiou"
  } ],
  "secondaryEdges" : [ "" ],
  "selfUri" : "aeiou",
  "edges" : [ "" ],
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "primaryEdges" : [ {
    "softwareStatus" : {
      "current" : true,
      "executeOnIdle" : true,
      "downloadStartTime" : "2000-01-23T04:56:07.000+0000",
      "maxDownloadRate" : 123,
      "edgeUri" : "aeiou",
      "version" : {
        "latestRelease" : true,
        "current" : true,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "publishDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "edgeUri" : "aeiou",
        "edgeVersion" : "aeiou"
      },
      "executeStopTime" : "2000-01-23T04:56:07.000+0000",
      "executeStartTime" : "2000-01-23T04:56:07.000+0000",
      "status" : "aeiou"
    },
    "fullSoftwareVersion" : "aeiou",
    "onlineStatus" : "aeiou",
    "description" : "aeiou",
    "createdByApp" : "aeiou",
    "edgeGroup" : {
      "phoneTrunkBaseAssignments" : [ "" ],
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "createdByApp" : "aeiou",
      "version" : 123,
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "aeiou",
      "managed" : true,
      "name" : "aeiou",
      "modifiedByApp" : "aeiou",
      "modifiedBy" : "aeiou",
      "edgeTrunkBaseAssignment" : {
        "family" : 123,
        "trunkBase" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "phoneTrunkBases" : [ "" ]
    },
    "patch" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "apiVersion" : "aeiou",
    "managed" : true,
    "fingerprint" : "aeiou",
    "modifiedBy" : "aeiou",
    "model" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "make" : "aeiou",
    "stagedVersion" : "aeiou",
    "interfaces" : [ {
      "macAddress" : "aeiou",
      "endpoints" : [ "" ],
      "ifName" : "aeiou",
      "ipAddress" : "aeiou",
      "name" : "aeiou",
      "type" : "aeiou",
      "lineTypes" : [ "aeiou" ],
      "addressFamilyId" : "aeiou"
    } ],
    "serialNumber" : "aeiou",
    "softwareVersionConfiguration" : "aeiou",
    "physicalEdge" : true,
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "version" : 123,
    "currentVersion" : "aeiou",
    "site" : "",
    "softwareVersionPlatform" : "aeiou",
    "fingerprintHint" : "aeiou",
    "createdBy" : "aeiou",
    "softwareVersionTimestamp" : "aeiou",
    "pairingId" : "aeiou",
    "name" : "aeiou",
    "modifiedByApp" : "aeiou",
    "softwareVersion" : "aeiou",
    "statusCode" : "aeiou"
  } ],
  "createdBy" : "aeiou",
  "managed" : true,
  "secondarySites" : [ "" ],
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "location" : "",
  "id" : "aeiou",
  "state" : "aeiou",
  "edgeAutoUpdateConfig" : {
    "rrule" : "aeiou",
    "start" : "2000-01-23T04:56:07.000+0000",
    "timeZone" : "aeiou",
    "end" : "2000-01-23T04:56:07.000+0000"
  }
}}]
     
     - parameter siteId: (path) Site ID 
     - parameter body: (body) Site (optional)

     - returns: RequestBuilder<ININSite> 
     */
    public class func putTelephonyProvidersEdgesSitesSiteIdWithRequestBuilder(siteId siteId: String, body: ININSite? = nil) -> RequestBuilder<ININSite> {
        var path = "/api/v2/telephony/providers/edges/sites/{siteId}"
        path = path.stringByReplacingOccurrencesOfString("{siteId}", withString: "\(siteId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSite>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update the list of Number Plans.
     
     - parameter siteId: (path) Site ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesSitesSiteIdNumberplans(siteId siteId: String, body: [ININNumberPlan]? = nil, completion: ((data: [ININNumberPlan]?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesSitesSiteIdNumberplansWithRequestBuilder(siteId: siteId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update the list of Number Plans.
     - PUT /api/v2/telephony/providers/edges/sites/{siteId}/numberplans
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example=[ {
  "matchType" : "aeiou",
  "selfUri" : "aeiou",
  "match" : "aeiou",
  "numbers" : [ {
    "start" : "aeiou",
    "end" : "aeiou"
  } ],
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "priority" : 123,
  "digitLength" : {
    "start" : "aeiou",
    "end" : "aeiou"
  },
  "classification" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "normalizedFormat" : "aeiou"
} ]}]
     
     - parameter siteId: (path) Site ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<[ININNumberPlan]> 
     */
    public class func putTelephonyProvidersEdgesSitesSiteIdNumberplansWithRequestBuilder(siteId siteId: String, body: [ININNumberPlan]? = nil) -> RequestBuilder<[ININNumberPlan]> {
        var path = "/api/v2/telephony/providers/edges/sites/{siteId}/numberplans"
        path = path.stringByReplacingOccurrencesOfString("{siteId}", withString: "\(siteId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ININNumberPlan]>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a Trunk Base Settings object by ID
     
     - parameter trunkBaseSettingsId: (path) Trunk Base ID 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putTelephonyProvidersEdgesTrunkbasesettingsTrunkbasesettingsId(trunkBaseSettingsId trunkBaseSettingsId: String, body: ININTrunkBase? = nil, completion: ((data: ININTrunkBase?, error: ErrorType?) -> Void)) {
        putTelephonyProvidersEdgesTrunkbasesettingsTrunkbasesettingsIdWithRequestBuilder(trunkBaseSettingsId: trunkBaseSettingsId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a Trunk Base Settings object by ID
     - PUT /api/v2/telephony/providers/edges/trunkbasesettings/{trunkBaseSettingsId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "createdByApp" : "aeiou",
  "trunkType" : "aeiou",
  "version" : 123,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "createdBy" : "aeiou",
  "managed" : true,
  "name" : "aeiou",
  "modifiedByApp" : "aeiou",
  "modifiedBy" : "aeiou",
  "trunkMetabase" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "id" : "aeiou",
  "state" : "aeiou",
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter trunkBaseSettingsId: (path) Trunk Base ID 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININTrunkBase> 
     */
    public class func putTelephonyProvidersEdgesTrunkbasesettingsTrunkbasesettingsIdWithRequestBuilder(trunkBaseSettingsId trunkBaseSettingsId: String, body: ININTrunkBase? = nil) -> RequestBuilder<ININTrunkBase> {
        var path = "/api/v2/telephony/providers/edges/trunkbasesettings/{trunkBaseSettingsId}"
        path = path.stringByReplacingOccurrencesOfString("{trunkBaseSettingsId}", withString: "\(trunkBaseSettingsId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTrunkBase>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
