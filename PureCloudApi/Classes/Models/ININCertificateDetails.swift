//
// ININCertificateDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Represents the details of a parsed certificate. */
public class ININCertificateDetails: JSONEncodable {
    /** Information about the issuer of the certificate.  The value of this property is a comma separated key&#x3D;value format.  Each key is one of the attribute names supported by X.500. */
    public var issuer: String?
    /** Information about the subject of the certificate.  The value of this property is a comma separated key&#x3D;value format.  Each key is one of the attribute names supported by X.500. */
    public var subject: String?
    /** The expiration date of the certificate. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var expirationDate: NSDate?
    /** The issue date of the certificate. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var issueDate: NSDate?
    /** True if the certificate is expired, false otherwise. */
    public var expired: Bool?
    public var signatureValid: Bool?
    public var valid: Bool?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["issuer"] = self.issuer
        nillableDictionary["subject"] = self.subject
        nillableDictionary["expirationDate"] = self.expirationDate?.encodeToJSON()
        nillableDictionary["issueDate"] = self.issueDate?.encodeToJSON()
        nillableDictionary["expired"] = self.expired
        nillableDictionary["signatureValid"] = self.signatureValid
        nillableDictionary["valid"] = self.valid
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
