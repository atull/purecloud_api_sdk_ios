//
// OAuthAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class OAuthAPI: APIBase {
    /**
     Delete OAuth Client
     
     - parameter clientId: (path) Client ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOauthClientsClientId(clientId clientId: String, completion: ((error: ErrorType?) -> Void)) {
        deleteOauthClientsClientIdWithRequestBuilder(clientId: clientId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete OAuth Client
     - DELETE /api/v2/oauth/clients/{clientId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter clientId: (path) Client ID 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteOauthClientsClientIdWithRequestBuilder(clientId clientId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/oauth/clients/{clientId}"
        path = path.stringByReplacingOccurrencesOfString("{clientId}", withString: "\(clientId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     The list of OAuth clients
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOauthClients(completion: ((data: ININOAuthClientEntityListing?, error: ErrorType?) -> Void)) {
        getOauthClientsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     The list of OAuth clients
     - GET /api/v2/oauth/clients
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "authorizedGrantType" : "aeiou",
    "roleIds" : [ "aeiou" ],
    "accessTokenValiditySeconds" : 123456789,
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "registeredRedirectUri" : [ "aeiou" ],
    "description" : "aeiou",
    "id" : "aeiou",
    "secret" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]

     - returns: RequestBuilder<ININOAuthClientEntityListing> 
     */
    public class func getOauthClientsWithRequestBuilder() -> RequestBuilder<ININOAuthClientEntityListing> {
        let path = "/api/v2/oauth/clients"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININOAuthClientEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get OAuth Client
     
     - parameter clientId: (path) Client ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOauthClientsClientId(clientId clientId: String, completion: ((data: ININOAuthClient?, error: ErrorType?) -> Void)) {
        getOauthClientsClientIdWithRequestBuilder(clientId: clientId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get OAuth Client
     - GET /api/v2/oauth/clients/{clientId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "authorizedGrantType" : "aeiou",
  "roleIds" : [ "aeiou" ],
  "accessTokenValiditySeconds" : 123456789,
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "registeredRedirectUri" : [ "aeiou" ],
  "description" : "aeiou",
  "id" : "aeiou",
  "secret" : "aeiou"
}}]
     
     - parameter clientId: (path) Client ID 

     - returns: RequestBuilder<ININOAuthClient> 
     */
    public class func getOauthClientsClientIdWithRequestBuilder(clientId clientId: String) -> RequestBuilder<ININOAuthClient> {
        var path = "/api/v2/oauth/clients/{clientId}"
        path = path.stringByReplacingOccurrencesOfString("{clientId}", withString: "\(clientId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININOAuthClient>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create OAuth client
     
     - parameter body: (body) Client (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOauthClients(body body: ININOAuthClient? = nil, completion: ((data: ININOAuthClient?, error: ErrorType?) -> Void)) {
        postOauthClientsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create OAuth client
     - POST /api/v2/oauth/clients
     - The OAuth Grant/Client is required in order to create an authentication token and gain access to PureCloud.  The preferred authorizedGrantTypes is 'CODE' which requires applications to send a client ID and client secret. This is typically a web server.  If the client is unable to secure the client secret then the 'TOKEN' grant type aka IMPLICIT should be used. This is would be for browser or mobile apps.  If a client is to be used outside of the context of a user then the 'CLIENT-CREDENTIALS' grant may be used. In this case the client must be granted roles  via the 'roleIds' field.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "authorizedGrantType" : "aeiou",
  "roleIds" : [ "aeiou" ],
  "accessTokenValiditySeconds" : 123456789,
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "registeredRedirectUri" : [ "aeiou" ],
  "description" : "aeiou",
  "id" : "aeiou",
  "secret" : "aeiou"
}}]
     
     - parameter body: (body) Client (optional)

     - returns: RequestBuilder<ININOAuthClient> 
     */
    public class func postOauthClientsWithRequestBuilder(body body: ININOAuthClient? = nil) -> RequestBuilder<ININOAuthClient> {
        let path = "/api/v2/oauth/clients"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININOAuthClient>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Regenerate Client Secret
     
     - parameter clientId: (path) Client ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOauthClientsClientIdSecret(clientId clientId: String, completion: ((error: ErrorType?) -> Void)) {
        postOauthClientsClientIdSecretWithRequestBuilder(clientId: clientId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Regenerate Client Secret
     - POST /api/v2/oauth/clients/{clientId}/secret
     - This operation will set the client secret to a randomly generated cryptographically random value. All clients must be updated with the new secret. This operation should be used with caution.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter clientId: (path) Client ID 

     - returns: RequestBuilder<Void> 
     */
    public class func postOauthClientsClientIdSecretWithRequestBuilder(clientId clientId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/oauth/clients/{clientId}/secret"
        path = path.stringByReplacingOccurrencesOfString("{clientId}", withString: "\(clientId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update OAuth Client
     
     - parameter clientId: (path) Client ID 
     - parameter body: (body) Client (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOauthClientsClientId(clientId clientId: String, body: ININOAuthClient? = nil, completion: ((data: ININOAuthClient?, error: ErrorType?) -> Void)) {
        putOauthClientsClientIdWithRequestBuilder(clientId: clientId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update OAuth Client
     - PUT /api/v2/oauth/clients/{clientId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "authorizedGrantType" : "aeiou",
  "roleIds" : [ "aeiou" ],
  "accessTokenValiditySeconds" : 123456789,
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "registeredRedirectUri" : [ "aeiou" ],
  "description" : "aeiou",
  "id" : "aeiou",
  "secret" : "aeiou"
}}]
     
     - parameter clientId: (path) Client ID 
     - parameter body: (body) Client (optional)

     - returns: RequestBuilder<ININOAuthClient> 
     */
    public class func putOauthClientsClientIdWithRequestBuilder(clientId clientId: String, body: ININOAuthClient? = nil) -> RequestBuilder<ININOAuthClient> {
        var path = "/api/v2/oauth/clients/{clientId}"
        path = path.stringByReplacingOccurrencesOfString("{clientId}", withString: "\(clientId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININOAuthClient>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
