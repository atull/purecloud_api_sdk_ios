//
// LanguagesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class LanguagesAPI: APIBase {
    /**
     Delete Language
     
     - parameter languageId: (path) Language ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteLanguagesLanguageId(languageId languageId: String, completion: ((error: ErrorType?) -> Void)) {
        deleteLanguagesLanguageIdWithRequestBuilder(languageId: languageId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete Language
     - DELETE /api/v2/languages/{languageId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter languageId: (path) Language ID 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteLanguagesLanguageIdWithRequestBuilder(languageId languageId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/languages/{languageId}"
        path = path.stringByReplacingOccurrencesOfString("{languageId}", withString: "\(languageId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter sortOrder
    */
    public enum ININSortOrder_getLanguages: String { 
        case Ascending = "ascending"
        case Descending = "descending"
    }

    /**
     Get the list of supported languages.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortOrder: (query) Ascending or descending sort order (optional, default to ASC)
     - parameter name: (query) Name (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getLanguages(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortOrder: ININSortOrder_getLanguages? = nil, name: String? = nil, completion: ((data: ININLanguageEntityListing?, error: ErrorType?) -> Void)) {
        getLanguagesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortOrder: sortOrder, name: name).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the list of supported languages.
     - GET /api/v2/languages
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "state" : "aeiou",
    "version" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortOrder: (query) Ascending or descending sort order (optional, default to ASC)
     - parameter name: (query) Name (optional)

     - returns: RequestBuilder<ININLanguageEntityListing> 
     */
    public class func getLanguagesWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortOrder: ININSortOrder_getLanguages? = nil, name: String? = nil) -> RequestBuilder<ININLanguageEntityListing> {
        let path = "/api/v2/languages"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "sortOrder": sortOrder?.rawValue,
            "name": name
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLanguageEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get language
     
     - parameter languageId: (path) Language ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getLanguagesLanguageId(languageId languageId: String, completion: ((data: ININLanguage?, error: ErrorType?) -> Void)) {
        getLanguagesLanguageIdWithRequestBuilder(languageId: languageId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get language
     - GET /api/v2/languages/{languageId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "state" : "aeiou",
  "version" : "aeiou"
}}]
     
     - parameter languageId: (path) Language ID 

     - returns: RequestBuilder<ININLanguage> 
     */
    public class func getLanguagesLanguageIdWithRequestBuilder(languageId languageId: String) -> RequestBuilder<ININLanguage> {
        var path = "/api/v2/languages/{languageId}"
        path = path.stringByReplacingOccurrencesOfString("{languageId}", withString: "\(languageId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLanguage>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create Language
     
     - parameter body: (body) Language (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postLanguages(body body: ININLanguage? = nil, completion: ((data: ININLanguage?, error: ErrorType?) -> Void)) {
        postLanguagesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create Language
     - POST /api/v2/languages
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "state" : "aeiou",
  "version" : "aeiou"
}}]
     
     - parameter body: (body) Language (optional)

     - returns: RequestBuilder<ININLanguage> 
     */
    public class func postLanguagesWithRequestBuilder(body body: ININLanguage? = nil) -> RequestBuilder<ININLanguage> {
        let path = "/api/v2/languages"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLanguage>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update Language
     
     - parameter languageId: (path) Language ID 
     - parameter body: (body) Language (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putLanguagesLanguageId(languageId languageId: String, body: ININLanguage? = nil, completion: ((data: ININLanguage?, error: ErrorType?) -> Void)) {
        putLanguagesLanguageIdWithRequestBuilder(languageId: languageId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update Language
     - PUT /api/v2/languages/{languageId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "state" : "aeiou",
  "version" : "aeiou"
}}]
     
     - parameter languageId: (path) Language ID 
     - parameter body: (body) Language (optional)

     - returns: RequestBuilder<ININLanguage> 
     */
    public class func putLanguagesLanguageIdWithRequestBuilder(languageId languageId: String, body: ININLanguage? = nil) -> RequestBuilder<ININLanguage> {
        var path = "/api/v2/languages/{languageId}"
        path = path.stringByReplacingOccurrencesOfString("{languageId}", withString: "\(languageId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLanguage>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
