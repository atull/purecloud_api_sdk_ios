//
// StationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class StationsAPI: APIBase {
    /**
     Unassigns the user assigned to this station
     
     - parameter stationId: (path) Station ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteStationsStationIdAssociateduser(stationId stationId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteStationsStationIdAssociateduserWithRequestBuilder(stationId: stationId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Unassigns the user assigned to this station
     - DELETE /api/v2/stations/{stationId}/associateduser
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter stationId: (path) Station ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteStationsStationIdAssociateduserWithRequestBuilder(stationId stationId: String) -> RequestBuilder<String> {
        var path = "/api/v2/stations/{stationId}/associateduser"
        path = path.stringByReplacingOccurrencesOfString("{stationId}", withString: "\(stationId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the list of available stations.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to name)
     - parameter name: (query) Name (optional)
     - parameter lineAppearanceId: (query) lineAppearanceId (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getStations(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, name: String? = nil, lineAppearanceId: String? = nil, completion: ((data: ININStationEntityListing?, error: ErrorType?) -> Void)) {
        getStationsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, name: name, lineAppearanceId: lineAppearanceId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the list of available stations.
     - GET /api/v2/stations
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "secondaryEdge" : "",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "lineAppearanceId" : "aeiou",
    "description" : "aeiou",
    "id" : "aeiou",
    "primaryEdge" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "type" : "aeiou",
    "userId" : "aeiou",
    "status" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to name)
     - parameter name: (query) Name (optional)
     - parameter lineAppearanceId: (query) lineAppearanceId (optional)

     - returns: RequestBuilder<ININStationEntityListing> 
     */
    public class func getStationsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, name: String? = nil, lineAppearanceId: String? = nil) -> RequestBuilder<ININStationEntityListing> {
        let path = "/api/v2/stations"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "sortBy": sortBy,
            "name": name,
            "lineAppearanceId": lineAppearanceId
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININStationEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get station.
     
     - parameter stationId: (path) Station ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getStationsStationId(stationId stationId: String, completion: ((data: ININStation?, error: ErrorType?) -> Void)) {
        getStationsStationIdWithRequestBuilder(stationId: stationId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get station.
     - GET /api/v2/stations/{stationId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "secondaryEdge" : "",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "lineAppearanceId" : "aeiou",
  "description" : "aeiou",
  "id" : "aeiou",
  "primaryEdge" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "type" : "aeiou",
  "userId" : "aeiou",
  "status" : "aeiou"
}}]
     
     - parameter stationId: (path) Station ID 

     - returns: RequestBuilder<ININStation> 
     */
    public class func getStationsStationIdWithRequestBuilder(stationId stationId: String) -> RequestBuilder<ININStation> {
        var path = "/api/v2/stations/{stationId}"
        path = path.stringByReplacingOccurrencesOfString("{stationId}", withString: "\(stationId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININStation>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
