//
// ININDocument.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININDocument: JSONEncodable {
    public enum ININSystemType: String { 
        case Document = "DOCUMENT"
        case Fax = "FAX"
        case Recording = "RECORDING"
    }
    public enum ININUploadMethod: String { 
        case SinglePut = "SINGLE_PUT"
        case MultipartPost = "MULTIPART_POST"
    }
    public enum ININSharingStatus: String { 
        case None = "NONE"
        case Limited = "LIMITED"
        case Public = "PUBLIC"
    }
    /** The globally unique identifier for the object. */
    public var id: String?
    public var name: String?
    public var changeNumber: Int32?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var dateCreated: NSDate?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var dateModified: NSDate?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var dateUploaded: NSDate?
    public var contentUri: String?
    public var workspace: ININUriReference?
    public var createdBy: ININUriReference?
    public var uploadedBy: ININUriReference?
    public var contentType: String?
    public var contentLength: Int64?
    public var systemType: ININSystemType?
    public var filename: String?
    public var pageCount: Int64?
    public var read: Bool?
    public var callerAddress: String?
    public var receiverAddress: String?
    public var tags: [String]?
    public var tagValues: [ININTagValue]?
    public var attributes: [ININDocumentAttribute]?
    public var thumbnails: [ININDocumentThumbnail]?
    public var uploadStatus: ININUriReference?
    public var uploadDestinationUri: String?
    public var uploadMethod: ININUploadMethod?
    public var lockInfo: ININLockInfo?
    /** A list of permitted action rights for the user making the request */
    public var acl: [String]?
    public var sharingStatus: ININSharingStatus?
    public var sharingUri: String?
    public var downloadSharingUri: String?
    /** The URI for this object */
    public var selfUri: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["changeNumber"] = self.changeNumber?.encodeToJSON()
        nillableDictionary["dateCreated"] = self.dateCreated?.encodeToJSON()
        nillableDictionary["dateModified"] = self.dateModified?.encodeToJSON()
        nillableDictionary["dateUploaded"] = self.dateUploaded?.encodeToJSON()
        nillableDictionary["contentUri"] = self.contentUri
        nillableDictionary["workspace"] = self.workspace?.encodeToJSON()
        nillableDictionary["createdBy"] = self.createdBy?.encodeToJSON()
        nillableDictionary["uploadedBy"] = self.uploadedBy?.encodeToJSON()
        nillableDictionary["contentType"] = self.contentType
        nillableDictionary["contentLength"] = self.contentLength?.encodeToJSON()
        nillableDictionary["systemType"] = self.systemType?.rawValue
        nillableDictionary["filename"] = self.filename
        nillableDictionary["pageCount"] = self.pageCount?.encodeToJSON()
        nillableDictionary["read"] = self.read
        nillableDictionary["callerAddress"] = self.callerAddress
        nillableDictionary["receiverAddress"] = self.receiverAddress
        nillableDictionary["tags"] = self.tags?.encodeToJSON()
        nillableDictionary["tagValues"] = self.tagValues?.encodeToJSON()
        nillableDictionary["attributes"] = self.attributes?.encodeToJSON()
        nillableDictionary["thumbnails"] = self.thumbnails?.encodeToJSON()
        nillableDictionary["uploadStatus"] = self.uploadStatus?.encodeToJSON()
        nillableDictionary["uploadDestinationUri"] = self.uploadDestinationUri
        nillableDictionary["uploadMethod"] = self.uploadMethod?.rawValue
        nillableDictionary["lockInfo"] = self.lockInfo?.encodeToJSON()
        nillableDictionary["acl"] = self.acl?.encodeToJSON()
        nillableDictionary["sharingStatus"] = self.sharingStatus?.rawValue
        nillableDictionary["sharingUri"] = self.sharingUri
        nillableDictionary["downloadSharingUri"] = self.downloadSharingUri
        nillableDictionary["selfUri"] = self.selfUri
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
