#import <Foundation/Foundation.h>
#import "SWGErrorBody.h"
#import "SWGOrphanRecording.h"
#import "SWGRecording.h"
#import "SWGAnnotation.h"
#import "SWGOrphanRecordingListing.h"
#import "SWGLocalEncryptionConfigurationListing.h"
#import "SWGLocalEncryptionConfiguration.h"
#import "SWGPolicyEntityListing.h"
#import "SWGPolicy.h"
#import "SWGEncryptionKeyEntityListing.h"
#import "SWGKeyRotationSchedule.h"
#import "SWGRecordingSettings.h"
#import "SWGScreenRecordingSessionListing.h"
#import "SWGScreenRecordingSessionRequest.h"
#import "SWGEncryptionKey.h"
#import "SWGLocalEncryptionKeyRequest.h"
#import "SWGPolicyCreate.h"
#import "SWGApi.h"

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */


@interface SWGRecordingApi: NSObject <SWGApi>

extern NSString* kSWGRecordingApiErrorDomain;
extern NSInteger kSWGRecordingApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Delete annotation
/// 
///
/// @param conversationId Conversation ID
/// @param recordingId Recording ID
/// @param annotationId Annotation ID
/// 
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out.",
///  code:0 message:"successful operation"
///
/// @return 
-(NSNumber*) deleteConversationsConversationIdRecordingsRecordingIdAnnotationsAnnotationIdWithConversationId: (NSString*) conversationId
    recordingId: (NSString*) recordingId
    annotationId: (NSString*) annotationId
    completionHandler: (void (^)(NSError* error)) handler;


///  deletes a single orphan recording
/// 
///
/// @param orphanId Orphan ID
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGOrphanRecording*
-(NSNumber*) deleteOrphanrecordingsOrphanIdWithOrphanId: (NSString*) orphanId
    completionHandler: (void (^)(SWGOrphanRecording* output, NSError* error)) handler;


/// Delete media retention policies
/// Bulk delete of media retention policies, this will only delete the polices that match the ids specified in the query param.
///
/// @param ids 
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return NSString*
-(NSNumber*) deleteRecordingMediaretentionpoliciesWithIds: (NSString*) ids
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Delete a media retention policy
/// 
///
/// @param policyId Policy ID
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return NSString*
-(NSNumber*) deleteRecordingMediaretentionpoliciesPolicyIdWithPolicyId: (NSString*) policyId
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Get all of a Conversation's Recordings.
/// 
///
/// @param conversationId Conversation ID
/// @param maxWaitMs The maximum number of milliseconds to wait for the recording to be ready. (optional) (default to 5000)
/// @param formatId The desired media format (optional) (default to WEBM)
/// 
///  code:200 message:"successful operation",
///  code:202 message:"Success - recording is transcoding",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return NSArray<SWGRecording>*
-(NSNumber*) getConversationsConversationIdRecordingsWithConversationId: (NSString*) conversationId
    maxWaitMs: (NSNumber*) maxWaitMs
    formatId: (NSString*) formatId
    completionHandler: (void (^)(NSArray<SWGRecording>* output, NSError* error)) handler;


/// Gets a specific recording.
/// 
///
/// @param conversationId Conversation ID
/// @param recordingId Recording ID
/// @param formatId The desired media format. (optional) (default to WEBM)
/// @param download requesting a download format of the recording (optional) (default to false)
/// @param fileName the name of the downloaded fileName (optional)
/// 
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out.",
///  code:0 message:"successful operation"
///
/// @return 
-(NSNumber*) getConversationsConversationIdRecordingsRecordingIdWithConversationId: (NSString*) conversationId
    recordingId: (NSString*) recordingId
    formatId: (NSString*) formatId
    download: (NSNumber*) download
    fileName: (NSString*) fileName
    completionHandler: (void (^)(NSError* error)) handler;


/// Get annotations for recording
/// 
///
/// @param conversationId Conversation ID
/// @param recordingId Recording ID
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return NSArray<SWGAnnotation>*
-(NSNumber*) getConversationsConversationIdRecordingsRecordingIdAnnotationsWithConversationId: (NSString*) conversationId
    recordingId: (NSString*) recordingId
    completionHandler: (void (^)(NSArray<SWGAnnotation>* output, NSError* error)) handler;


/// Get annotation
/// 
///
/// @param conversationId Conversation ID
/// @param recordingId Recording ID
/// @param annotationId Annotation ID
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGAnnotation*
-(NSNumber*) getConversationsConversationIdRecordingsRecordingIdAnnotationsAnnotationIdWithConversationId: (NSString*) conversationId
    recordingId: (NSString*) recordingId
    annotationId: (NSString*) annotationId
    completionHandler: (void (^)(SWGAnnotation* output, NSError* error)) handler;


/// Gets all orphan recordings
/// 
///
/// @param pageSize The total page size requested (optional) (default to 25)
/// @param pageNumber The page number requested (optional) (default to 1)
/// @param sortBy variable name requested to sort by (optional)
/// @param expand variable name requested by expand list (optional)
/// @param nextPage next page token (optional)
/// @param previousPage Previous page token (optional)
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGOrphanRecordingListing*
-(NSNumber*) getOrphanrecordingsWithPageSize: (NSNumber*) pageSize
    pageNumber: (NSNumber*) pageNumber
    sortBy: (NSString*) sortBy
    expand: (NSArray<NSObject*>*) expand
    nextPage: (NSString*) nextPage
    previousPage: (NSString*) previousPage
    completionHandler: (void (^)(SWGOrphanRecordingListing* output, NSError* error)) handler;


/// Gets a single orphan recording
/// 
///
/// @param orphanId Orphan ID
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGOrphanRecording*
-(NSNumber*) getOrphanrecordingsOrphanIdWithOrphanId: (NSString*) orphanId
    completionHandler: (void (^)(SWGOrphanRecording* output, NSError* error)) handler;


/// gets a list local key settings data
/// 
///
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGLocalEncryptionConfigurationListing*
-(NSNumber*) getRecordingLocalkeysSettingsWithCompletionHandler: 
    (void (^)(SWGLocalEncryptionConfigurationListing* output, NSError* error)) handler;


/// Get the local encryption settings
/// 
///
/// @param settingsId Settings Id
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGLocalEncryptionConfiguration*
-(NSNumber*) getRecordingLocalkeysSettingsSettingsIdWithSettingsId: (NSString*) settingsId
    completionHandler: (void (^)(SWGLocalEncryptionConfiguration* output, NSError* error)) handler;


/// Gets media retention policy list with query options to filter on name and enabled.
/// for a less verbose response, add summary=true to this endpoint
///
/// @param pageSize The total page size requested (optional) (default to 25)
/// @param pageNumber The page number requested (optional) (default to 1)
/// @param sortBy variable name requested to sort by (optional)
/// @param expand variable name requested by expand list (optional)
/// @param nextPage next page token (optional)
/// @param previousPage Previous page token (optional)
/// @param name the policy name - used for filtering results in searches. (optional)
/// @param enabled checks to see if policy is enabled - use enabled &#x3D; true or enabled &#x3D; false (optional)
/// @param summary provides a less verbose response of policy lists. (optional) (default to false)
/// @param hasErrors provides a way to fetch all policies with errors or policies that do not have errors (optional)
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGPolicyEntityListing*
-(NSNumber*) getRecordingMediaretentionpoliciesWithPageSize: (NSNumber*) pageSize
    pageNumber: (NSNumber*) pageNumber
    sortBy: (NSString*) sortBy
    expand: (NSArray<NSObject*>*) expand
    nextPage: (NSString*) nextPage
    previousPage: (NSString*) previousPage
    name: (NSString*) name
    enabled: (NSNumber*) enabled
    summary: (NSNumber*) summary
    hasErrors: (NSNumber*) hasErrors
    completionHandler: (void (^)(SWGPolicyEntityListing* output, NSError* error)) handler;


/// Get a media retention policy
/// 
///
/// @param policyId Policy ID
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGPolicy*
-(NSNumber*) getRecordingMediaretentionpoliciesPolicyIdWithPolicyId: (NSString*) policyId
    completionHandler: (void (^)(SWGPolicy* output, NSError* error)) handler;


/// Get encryption key list
/// 
///
/// @param pageSize Page size (optional) (default to 25)
/// @param pageNumber Page number (optional) (default to 1)
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGEncryptionKeyEntityListing*
-(NSNumber*) getRecordingRecordingkeysWithPageSize: (NSNumber*) pageSize
    pageNumber: (NSNumber*) pageNumber
    completionHandler: (void (^)(SWGEncryptionKeyEntityListing* output, NSError* error)) handler;


/// Get key rotation schedule
/// 
///
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGKeyRotationSchedule*
-(NSNumber*) getRecordingRecordingkeysRotationscheduleWithCompletionHandler: 
    (void (^)(SWGKeyRotationSchedule* output, NSError* error)) handler;


/// Get the Recording Settings for the Organization
/// 
///
/// @param createDefault If no settings are found, a new one is created with default values (optional) (default to false)
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGRecordingSettings*
-(NSNumber*) getRecordingSettingsWithCreateDefault: (NSNumber*) createDefault
    completionHandler: (void (^)(SWGRecordingSettings* output, NSError* error)) handler;


/// Retrieves a paged listing of screen recording sessions
/// 
///
/// @param pageSize Page size (optional) (default to 25)
/// @param pageNumber Page number (optional) (default to 1)
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGScreenRecordingSessionListing*
-(NSNumber*) getRecordingsScreensessionsWithPageSize: (NSNumber*) pageSize
    pageNumber: (NSNumber*) pageNumber
    completionHandler: (void (^)(SWGScreenRecordingSessionListing* output, NSError* error)) handler;


/// Patch a media retention policy
/// 
///
/// @param policyId Policy ID
/// @param body Policy
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGPolicy*
-(NSNumber*) patchRecordingMediaretentionpoliciesPolicyIdWithPolicyId: (NSString*) policyId
    body: (SWGPolicy*) body
    completionHandler: (void (^)(SWGPolicy* output, NSError* error)) handler;


/// Update a screen recording session
/// 
///
/// @param recordingSessionId Screen recording session ID
/// @param body  (optional)
/// 
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out.",
///  code:0 message:"successful operation"
///
/// @return 
-(NSNumber*) patchRecordingsScreensessionsRecordingsessionIdWithRecordingSessionId: (NSString*) recordingSessionId
    body: (SWGScreenRecordingSessionRequest*) body
    completionHandler: (void (^)(NSError* error)) handler;


/// Create annotation
/// 
///
/// @param conversationId Conversation ID
/// @param recordingId Recording ID
/// @param body annotation
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGAnnotation*
-(NSNumber*) postConversationsConversationIdRecordingsRecordingIdAnnotationsWithConversationId: (NSString*) conversationId
    recordingId: (NSString*) recordingId
    body: (SWGAnnotation*) body
    completionHandler: (void (^)(SWGAnnotation* output, NSError* error)) handler;


/// create a local recording key
/// 
///
/// @param body Local Encryption body
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGEncryptionKey*
-(NSNumber*) postRecordingLocalkeysWithBody: (SWGLocalEncryptionKeyRequest*) body
    completionHandler: (void (^)(SWGEncryptionKey* output, NSError* error)) handler;


/// create settings for local key creation
/// 
///
/// @param body Local Encryption Configuration
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGLocalEncryptionConfiguration*
-(NSNumber*) postRecordingLocalkeysSettingsWithBody: (SWGLocalEncryptionConfiguration*) body
    completionHandler: (void (^)(SWGLocalEncryptionConfiguration* output, NSError* error)) handler;


/// Create media retention policy
/// 
///
/// @param body Policy
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGPolicy*
-(NSNumber*) postRecordingMediaretentionpoliciesWithBody: (SWGPolicyCreate*) body
    completionHandler: (void (^)(SWGPolicy* output, NSError* error)) handler;


/// Create encryption key
/// 
///
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGEncryptionKey*
-(NSNumber*) postRecordingRecordingkeysWithCompletionHandler: 
    (void (^)(SWGEncryptionKey* output, NSError* error)) handler;


/// Updates the retention records on a recording.
/// Currently supports updating and removing both archive and delete dates for eligible recordings. A request to change the archival date of an archived recording will result in a restoration of the recording until the new date set. 
///
/// @param conversationId Conversation ID
/// @param recordingId Recording ID
/// @param body recording
/// 
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out.",
///  code:0 message:"successful operation"
///
/// @return 
-(NSNumber*) putConversationsConversationIdRecordingsRecordingIdWithConversationId: (NSString*) conversationId
    recordingId: (NSString*) recordingId
    body: (SWGRecording*) body
    completionHandler: (void (^)(NSError* error)) handler;


/// Update annotation
/// 
///
/// @param conversationId Conversation ID
/// @param recordingId Recording ID
/// @param annotationId Annotation ID
/// @param body annotation
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGAnnotation*
-(NSNumber*) putConversationsConversationIdRecordingsRecordingIdAnnotationsAnnotationIdWithConversationId: (NSString*) conversationId
    recordingId: (NSString*) recordingId
    annotationId: (NSString*) annotationId
    body: (SWGAnnotation*) body
    completionHandler: (void (^)(SWGAnnotation* output, NSError* error)) handler;


/// Update the local encryption settings
/// 
///
/// @param settingsId Settings Id
/// @param body Local Encryption metadata
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGLocalEncryptionConfiguration*
-(NSNumber*) putRecordingLocalkeysSettingsSettingsIdWithSettingsId: (NSString*) settingsId
    body: (SWGLocalEncryptionConfiguration*) body
    completionHandler: (void (^)(SWGLocalEncryptionConfiguration* output, NSError* error)) handler;


/// Update a media retention policy
/// 
///
/// @param policyId Policy ID
/// @param body Policy
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGPolicy*
-(NSNumber*) putRecordingMediaretentionpoliciesPolicyIdWithPolicyId: (NSString*) policyId
    body: (SWGPolicy*) body
    completionHandler: (void (^)(SWGPolicy* output, NSError* error)) handler;


/// Update key rotation schedule
/// 
///
/// @param body KeyRotationSchedule
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGKeyRotationSchedule*
-(NSNumber*) putRecordingRecordingkeysRotationscheduleWithBody: (SWGKeyRotationSchedule*) body
    completionHandler: (void (^)(SWGKeyRotationSchedule* output, NSError* error)) handler;


/// Update the Recording Settings for the Organization
/// 
///
/// @param body Recording settings
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGRecordingSettings*
-(NSNumber*) putRecordingSettingsWithBody: (SWGRecordingSettings*) body
    completionHandler: (void (^)(SWGRecordingSettings* output, NSError* error)) handler;



@end
