//
// AnalyticsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class AnalyticsAPI: APIBase {
    /**
     Delete a scheduled report job.
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteAnalyticsReportingSchedulesScheduleId(scheduleId scheduleId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteAnalyticsReportingSchedulesScheduleIdWithRequestBuilder(scheduleId: scheduleId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a scheduled report job.
     - DELETE /api/v2/analytics/reporting/schedules/{scheduleId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter scheduleId: (path) Schedule ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteAnalyticsReportingSchedulesScheduleIdWithRequestBuilder(scheduleId scheduleId: String) -> RequestBuilder<String> {
        var path = "/api/v2/analytics/reporting/schedules/{scheduleId}"
        path = path.stringByReplacingOccurrencesOfString("{scheduleId}", withString: "\(scheduleId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a conversation by id
     
     - parameter conversationId: (path) conversationId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAnalyticsConversationsConversationIdDetails(conversationId conversationId: String, completion: ((data: ININAnalyticsConversation?, error: ErrorType?) -> Void)) {
        getAnalyticsConversationsConversationIdDetailsWithRequestBuilder(conversationId: conversationId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a conversation by id
     - GET /api/v2/analytics/conversations/{conversationId}/details
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "conversationStart" : "2000-01-23T04:56:07.000+0000",
  "evaluations" : [ {
    "evaluationId" : "aeiou",
    "formId" : "aeiou",
    "queueId" : "aeiou",
    "formName" : "aeiou",
    "eventTime" : "aeiou",
    "contextId" : "aeiou",
    "getoTotalScore" : 123456789,
    "evaluatorId" : "aeiou",
    "userId" : "aeiou",
    "getoTotalCriticalScore" : 123456789
  } ],
  "conversationId" : "aeiou",
  "participants" : [ {
    "participantId" : "aeiou",
    "sessions" : [ {
      "outboundContactId" : "aeiou",
      "dispositionAnalyzer" : "aeiou",
      "remoteNameDisplayable" : "aeiou",
      "monitoredParticipantId" : "aeiou",
      "callbackScheduledTime" : "2000-01-23T04:56:07.000+0000",
      "addressOther" : "aeiou",
      "addressSelf" : "aeiou",
      "callbackNumbers" : [ "aeiou" ],
      "skipEnabled" : true,
      "mediaType" : "aeiou",
      "monitoredSessionId" : "aeiou",
      "sessionId" : "aeiou",
      "outboundCampaignId" : "aeiou",
      "roomId" : "aeiou",
      "dispositionName" : "aeiou",
      "segments" : [ {
        "queueId" : "aeiou",
        "conference" : true,
        "subject" : "aeiou",
        "sourceConversationId" : "aeiou",
        "groupId" : "aeiou",
        "errorCode" : "aeiou",
        "q850ResponseCodes" : [ 123456789 ],
        "requestedRoutingSkillIds" : [ "aeiou" ],
        "wrapUpCode" : "aeiou",
        "destinationConversationId" : "aeiou",
        "segmentEnd" : "2000-01-23T04:56:07.000+0000",
        "wrapUpNote" : "aeiou",
        "destinationSessionId" : "aeiou",
        "wrapUpTags" : [ "aeiou" ],
        "disconnectType" : "aeiou",
        "sourceSessionId" : "aeiou",
        "segmentStart" : "2000-01-23T04:56:07.000+0000",
        "requestedRoutingUserIds" : [ "aeiou" ],
        "sipResponseCodes" : [ 123456789 ],
        "requestedLanguageId" : "aeiou",
        "segmentType" : "aeiou",
        "properties" : [ {
          "propertyType" : "aeiou",
          "property" : "aeiou",
          "value" : "aeiou"
        } ]
      } ],
      "edgeId" : "aeiou",
      "scriptId" : "aeiou",
      "callbackUserName" : "aeiou",
      "timeoutSeconds" : 123,
      "outboundContactListId" : "aeiou",
      "dnis" : "aeiou",
      "ani" : "aeiou",
      "direction" : "aeiou"
    } ],
    "purpose" : "aeiou",
    "participantName" : "aeiou",
    "userId" : "aeiou"
  } ]
}}]
     
     - parameter conversationId: (path) conversationId 

     - returns: RequestBuilder<ININAnalyticsConversation> 
     */
    public class func getAnalyticsConversationsConversationIdDetailsWithRequestBuilder(conversationId conversationId: String) -> RequestBuilder<ININAnalyticsConversation> {
        var path = "/api/v2/analytics/conversations/{conversationId}/details"
        path = path.stringByReplacingOccurrencesOfString("{conversationId}", withString: "\(conversationId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAnalyticsConversation>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get list of reporting metadata.
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter locale: (query) Locale (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAnalyticsReportingMetadata(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, locale: String? = nil, completion: ((data: ININReportMetaDataEntityListing?, error: ErrorType?) -> Void)) {
        getAnalyticsReportingMetadataWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize, locale: locale).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get list of reporting metadata.
     - GET /api/v2/analytics/reporting/metadata
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "exampleUrl" : "aeiou",
    "keywords" : [ "aeiou" ],
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "description" : "aeiou",
    "id" : "aeiou",
    "title" : "aeiou",
    "parameters" : [ {
      "parameterType" : "aeiou",
      "domain" : "aeiou",
      "name" : "aeiou",
      "required" : true
    } ],
    "availableLocales" : [ "aeiou" ]
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter locale: (query) Locale (optional)

     - returns: RequestBuilder<ININReportMetaDataEntityListing> 
     */
    public class func getAnalyticsReportingMetadataWithRequestBuilder(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, locale: String? = nil) -> RequestBuilder<ININReportMetaDataEntityListing> {
        let path = "/api/v2/analytics/reporting/metadata"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageNumber": pageNumber?.encodeToJSON(),
            "pageSize": pageSize?.encodeToJSON(),
            "locale": locale
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININReportMetaDataEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a reporting metadata.
     
     - parameter reportId: (path) Report ID 
     - parameter locale: (query) Locale (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAnalyticsReportingReportIdMetadata(reportId reportId: String, locale: String? = nil, completion: ((data: ININReportMetaData?, error: ErrorType?) -> Void)) {
        getAnalyticsReportingReportIdMetadataWithRequestBuilder(reportId: reportId, locale: locale).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a reporting metadata.
     - GET /api/v2/analytics/reporting/{reportId}/metadata
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "exampleUrl" : "aeiou",
  "keywords" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "id" : "aeiou",
  "title" : "aeiou",
  "parameters" : [ {
    "parameterType" : "aeiou",
    "domain" : "aeiou",
    "name" : "aeiou",
    "required" : true
  } ],
  "availableLocales" : [ "aeiou" ]
}}]
     
     - parameter reportId: (path) Report ID 
     - parameter locale: (query) Locale (optional)

     - returns: RequestBuilder<ININReportMetaData> 
     */
    public class func getAnalyticsReportingReportIdMetadataWithRequestBuilder(reportId reportId: String, locale: String? = nil) -> RequestBuilder<ININReportMetaData> {
        var path = "/api/v2/analytics/reporting/{reportId}/metadata"
        path = path.stringByReplacingOccurrencesOfString("{reportId}", withString: "\(reportId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "locale": locale
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININReportMetaData>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a list of report formats
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAnalyticsReportingReportformats(completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getAnalyticsReportingReportformatsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of report formats
     - GET /api/v2/analytics/reporting/reportformats
     - Get a list of report formats.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example=[ "aeiou" ]}]

     - returns: RequestBuilder<[String]> 
     */
    public class func getAnalyticsReportingReportformatsWithRequestBuilder() -> RequestBuilder<[String]> {
        let path = "/api/v2/analytics/reporting/reportformats"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[String]>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a list of scheduled report jobs
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAnalyticsReportingSchedules(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil, completion: ((data: ININReportScheduleEntityListing?, error: ErrorType?) -> Void)) {
        getAnalyticsReportingSchedulesWithRequestBuilder(pageNumber: pageNumber, pageSize: pageSize).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of scheduled report jobs
     - GET /api/v2/analytics/reporting/schedules
     - Get a list of scheduled report jobs.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "quartzCronExpression" : "aeiou",
    "reportId" : "aeiou",
    "lastRun" : {
      "reportId" : "aeiou",
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "errorMessage" : "aeiou",
      "runDurationMsec" : 123456789,
      "reportFormat" : "aeiou",
      "id" : "aeiou",
      "runTime" : "2000-01-23T04:56:07.000+0000",
      "reportUrl" : "aeiou",
      "scheduleUri" : "aeiou",
      "runStatus" : "aeiou"
    },
    "selfUri" : "aeiou",
    "nextFireTime" : "2000-01-23T04:56:07.000+0000",
    "description" : "aeiou",
    "timeZone" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "reportFormat" : "aeiou",
    "locale" : "aeiou",
    "enabled" : true,
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "name" : "aeiou",
    "timePeriod" : "aeiou",
    "interval" : "aeiou",
    "id" : "aeiou",
    "parameters" : {
      "key" : "{}"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter pageSize: (query) Page size (optional, default to 25)

     - returns: RequestBuilder<ININReportScheduleEntityListing> 
     */
    public class func getAnalyticsReportingSchedulesWithRequestBuilder(pageNumber pageNumber: Int32? = nil, pageSize: Int32? = nil) -> RequestBuilder<ININReportScheduleEntityListing> {
        let path = "/api/v2/analytics/reporting/schedules"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageNumber": pageNumber?.encodeToJSON(),
            "pageSize": pageSize?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININReportScheduleEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a scheduled report job.
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAnalyticsReportingSchedulesScheduleId(scheduleId scheduleId: String, completion: ((data: ININReportSchedule?, error: ErrorType?) -> Void)) {
        getAnalyticsReportingSchedulesScheduleIdWithRequestBuilder(scheduleId: scheduleId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a scheduled report job.
     - GET /api/v2/analytics/reporting/schedules/{scheduleId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "quartzCronExpression" : "aeiou",
  "reportId" : "aeiou",
  "lastRun" : {
    "reportId" : "aeiou",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "errorMessage" : "aeiou",
    "runDurationMsec" : 123456789,
    "reportFormat" : "aeiou",
    "id" : "aeiou",
    "runTime" : "2000-01-23T04:56:07.000+0000",
    "reportUrl" : "aeiou",
    "scheduleUri" : "aeiou",
    "runStatus" : "aeiou"
  },
  "selfUri" : "aeiou",
  "nextFireTime" : "2000-01-23T04:56:07.000+0000",
  "description" : "aeiou",
  "timeZone" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "reportFormat" : "aeiou",
  "locale" : "aeiou",
  "enabled" : true,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "name" : "aeiou",
  "timePeriod" : "aeiou",
  "interval" : "aeiou",
  "id" : "aeiou",
  "parameters" : {
    "key" : "{}"
  }
}}]
     
     - parameter scheduleId: (path) Schedule ID 

     - returns: RequestBuilder<ININReportSchedule> 
     */
    public class func getAnalyticsReportingSchedulesScheduleIdWithRequestBuilder(scheduleId scheduleId: String) -> RequestBuilder<ININReportSchedule> {
        var path = "/api/v2/analytics/reporting/schedules/{scheduleId}"
        path = path.stringByReplacingOccurrencesOfString("{scheduleId}", withString: "\(scheduleId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININReportSchedule>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get list of completed scheduled report jobs.
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter pageNumber: (query)  (optional, default to 1)
     - parameter pageSize: (query)  (optional, default to 25)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAnalyticsReportingSchedulesScheduleIdHistory(scheduleId scheduleId: String, pageNumber: Int32? = nil, pageSize: Int32? = nil, completion: ((data: ININReportRunEntryEntityDomainListing?, error: ErrorType?) -> Void)) {
        getAnalyticsReportingSchedulesScheduleIdHistoryWithRequestBuilder(scheduleId: scheduleId, pageNumber: pageNumber, pageSize: pageSize).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get list of completed scheduled report jobs.
     - GET /api/v2/analytics/reporting/schedules/{scheduleId}/history
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "reportId" : "aeiou",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "errorMessage" : "aeiou",
    "runDurationMsec" : 123456789,
    "reportFormat" : "aeiou",
    "id" : "aeiou",
    "runTime" : "2000-01-23T04:56:07.000+0000",
    "reportUrl" : "aeiou",
    "scheduleUri" : "aeiou",
    "runStatus" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter pageNumber: (query)  (optional, default to 1)
     - parameter pageSize: (query)  (optional, default to 25)

     - returns: RequestBuilder<ININReportRunEntryEntityDomainListing> 
     */
    public class func getAnalyticsReportingSchedulesScheduleIdHistoryWithRequestBuilder(scheduleId scheduleId: String, pageNumber: Int32? = nil, pageSize: Int32? = nil) -> RequestBuilder<ININReportRunEntryEntityDomainListing> {
        var path = "/api/v2/analytics/reporting/schedules/{scheduleId}/history"
        path = path.stringByReplacingOccurrencesOfString("{scheduleId}", withString: "\(scheduleId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageNumber": pageNumber?.encodeToJSON(),
            "pageSize": pageSize?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININReportRunEntryEntityDomainListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get most recently completed scheduled report job.
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAnalyticsReportingSchedulesScheduleIdHistoryLatest(scheduleId scheduleId: String, completion: ((data: ININReportRunEntry?, error: ErrorType?) -> Void)) {
        getAnalyticsReportingSchedulesScheduleIdHistoryLatestWithRequestBuilder(scheduleId: scheduleId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get most recently completed scheduled report job.
     - GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "reportId" : "aeiou",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "errorMessage" : "aeiou",
  "runDurationMsec" : 123456789,
  "reportFormat" : "aeiou",
  "id" : "aeiou",
  "runTime" : "2000-01-23T04:56:07.000+0000",
  "reportUrl" : "aeiou",
  "scheduleUri" : "aeiou",
  "runStatus" : "aeiou"
}}]
     
     - parameter scheduleId: (path) Schedule ID 

     - returns: RequestBuilder<ININReportRunEntry> 
     */
    public class func getAnalyticsReportingSchedulesScheduleIdHistoryLatestWithRequestBuilder(scheduleId scheduleId: String) -> RequestBuilder<ININReportRunEntry> {
        var path = "/api/v2/analytics/reporting/schedules/{scheduleId}/history/latest"
        path = path.stringByReplacingOccurrencesOfString("{scheduleId}", withString: "\(scheduleId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININReportRunEntry>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     A completed scheduled report job
     
     - parameter runId: (path) Run ID 
     - parameter scheduleId: (path) Schedule ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAnalyticsReportingSchedulesScheduleIdHistoryRunId(runId runId: String, scheduleId: String, completion: ((data: ININReportRunEntry?, error: ErrorType?) -> Void)) {
        getAnalyticsReportingSchedulesScheduleIdHistoryRunIdWithRequestBuilder(runId: runId, scheduleId: scheduleId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     A completed scheduled report job
     - GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/{runId}
     - A completed scheduled report job.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "reportId" : "aeiou",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "errorMessage" : "aeiou",
  "runDurationMsec" : 123456789,
  "reportFormat" : "aeiou",
  "id" : "aeiou",
  "runTime" : "2000-01-23T04:56:07.000+0000",
  "reportUrl" : "aeiou",
  "scheduleUri" : "aeiou",
  "runStatus" : "aeiou"
}}]
     
     - parameter runId: (path) Run ID 
     - parameter scheduleId: (path) Schedule ID 

     - returns: RequestBuilder<ININReportRunEntry> 
     */
    public class func getAnalyticsReportingSchedulesScheduleIdHistoryRunIdWithRequestBuilder(runId runId: String, scheduleId: String) -> RequestBuilder<ININReportRunEntry> {
        var path = "/api/v2/analytics/reporting/schedules/{scheduleId}/history/{runId}"
        path = path.stringByReplacingOccurrencesOfString("{runId}", withString: "\(runId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{scheduleId}", withString: "\(scheduleId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININReportRunEntry>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a list of report time periods.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAnalyticsReportingTimeperiods(completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getAnalyticsReportingTimeperiodsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of report time periods.
     - GET /api/v2/analytics/reporting/timeperiods
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example=[ "aeiou" ]}]

     - returns: RequestBuilder<[String]> 
     */
    public class func getAnalyticsReportingTimeperiodsWithRequestBuilder() -> RequestBuilder<[String]> {
        let path = "/api/v2/analytics/reporting/timeperiods"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[String]>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Query for conversation aggregates
     
     - parameter body: (body) query (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAnalyticsConversationsAggregatesQuery(body body: ININAggregationQuery? = nil, completion: ((data: ININAggregateQueryResponse?, error: ErrorType?) -> Void)) {
        postAnalyticsConversationsAggregatesQueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query for conversation aggregates
     - POST /api/v2/analytics/conversations/aggregates/query
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "data" : [ {
      "interval" : "aeiou",
      "metrics" : [ {
        "metric" : "aeiou",
        "stats" : {
          "current" : 1.3579000000000001069366817318950779736042022705078125,
          "min" : 1.3579000000000001069366817318950779736042022705078125,
          "max" : 1.3579000000000001069366817318950779736042022705078125,
          "count" : 123456789,
          "sum" : 1.3579000000000001069366817318950779736042022705078125,
          "ratio" : 1.3579000000000001069366817318950779736042022705078125,
          "numerator" : 1.3579000000000001069366817318950779736042022705078125,
          "denominator" : 1.3579000000000001069366817318950779736042022705078125,
          "target" : 1.3579000000000001069366817318950779736042022705078125
        },
        "qualifier" : "aeiou"
      } ]
    } ],
    "group" : {
      "key" : "aeiou"
    }
  } ]
}}]
     
     - parameter body: (body) query (optional)

     - returns: RequestBuilder<ININAggregateQueryResponse> 
     */
    public class func postAnalyticsConversationsAggregatesQueryWithRequestBuilder(body body: ININAggregationQuery? = nil) -> RequestBuilder<ININAggregateQueryResponse> {
        let path = "/api/v2/analytics/conversations/aggregates/query"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAggregateQueryResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Index conversation properties
     
     - parameter conversationId: (path) conversationId 
     - parameter body: (body) request (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAnalyticsConversationsConversationIdDetailsProperties(conversationId conversationId: String, body: ININPropertyIndexRequest? = nil, completion: ((data: ININPropertyIndexRequest?, error: ErrorType?) -> Void)) {
        postAnalyticsConversationsConversationIdDetailsPropertiesWithRequestBuilder(conversationId: conversationId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Index conversation properties
     - POST /api/v2/analytics/conversations/{conversationId}/details/properties
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "sessionId" : "aeiou",
  "properties" : [ {
    "propertyType" : "aeiou",
    "property" : "aeiou",
    "value" : "aeiou"
  } ],
  "timestamp" : 123456789
}}]
     
     - parameter conversationId: (path) conversationId 
     - parameter body: (body) request (optional)

     - returns: RequestBuilder<ININPropertyIndexRequest> 
     */
    public class func postAnalyticsConversationsConversationIdDetailsPropertiesWithRequestBuilder(conversationId conversationId: String, body: ININPropertyIndexRequest? = nil) -> RequestBuilder<ININPropertyIndexRequest> {
        var path = "/api/v2/analytics/conversations/{conversationId}/details/properties"
        path = path.stringByReplacingOccurrencesOfString("{conversationId}", withString: "\(conversationId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPropertyIndexRequest>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Query for conversation details
     
     - parameter body: (body) query (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAnalyticsConversationsDetailsQuery(body body: ININConversationQuery? = nil, completion: ((data: ININAnalyticsConversationQueryResponse?, error: ErrorType?) -> Void)) {
        postAnalyticsConversationsDetailsQueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query for conversation details
     - POST /api/v2/analytics/conversations/details/query
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "conversations" : [ {
    "conversationStart" : "2000-01-23T04:56:07.000+0000",
    "evaluations" : [ {
      "evaluationId" : "aeiou",
      "formId" : "aeiou",
      "queueId" : "aeiou",
      "formName" : "aeiou",
      "eventTime" : "aeiou",
      "contextId" : "aeiou",
      "getoTotalScore" : 123456789,
      "evaluatorId" : "aeiou",
      "userId" : "aeiou",
      "getoTotalCriticalScore" : 123456789
    } ],
    "conversationId" : "aeiou",
    "participants" : [ {
      "participantId" : "aeiou",
      "sessions" : [ {
        "outboundContactId" : "aeiou",
        "dispositionAnalyzer" : "aeiou",
        "remoteNameDisplayable" : "aeiou",
        "monitoredParticipantId" : "aeiou",
        "callbackScheduledTime" : "2000-01-23T04:56:07.000+0000",
        "addressOther" : "aeiou",
        "addressSelf" : "aeiou",
        "callbackNumbers" : [ "aeiou" ],
        "skipEnabled" : true,
        "mediaType" : "aeiou",
        "monitoredSessionId" : "aeiou",
        "sessionId" : "aeiou",
        "outboundCampaignId" : "aeiou",
        "roomId" : "aeiou",
        "dispositionName" : "aeiou",
        "segments" : [ {
          "queueId" : "aeiou",
          "conference" : true,
          "subject" : "aeiou",
          "sourceConversationId" : "aeiou",
          "groupId" : "aeiou",
          "errorCode" : "aeiou",
          "q850ResponseCodes" : [ 123456789 ],
          "requestedRoutingSkillIds" : [ "aeiou" ],
          "wrapUpCode" : "aeiou",
          "destinationConversationId" : "aeiou",
          "segmentEnd" : "2000-01-23T04:56:07.000+0000",
          "wrapUpNote" : "aeiou",
          "destinationSessionId" : "aeiou",
          "wrapUpTags" : [ "aeiou" ],
          "disconnectType" : "aeiou",
          "sourceSessionId" : "aeiou",
          "segmentStart" : "2000-01-23T04:56:07.000+0000",
          "requestedRoutingUserIds" : [ "aeiou" ],
          "sipResponseCodes" : [ 123456789 ],
          "requestedLanguageId" : "aeiou",
          "segmentType" : "aeiou",
          "properties" : [ {
            "propertyType" : "aeiou",
            "property" : "aeiou",
            "value" : "aeiou"
          } ]
        } ],
        "edgeId" : "aeiou",
        "scriptId" : "aeiou",
        "callbackUserName" : "aeiou",
        "timeoutSeconds" : 123,
        "outboundContactListId" : "aeiou",
        "dnis" : "aeiou",
        "ani" : "aeiou",
        "direction" : "aeiou"
      } ],
      "purpose" : "aeiou",
      "participantName" : "aeiou",
      "userId" : "aeiou"
    } ]
  } ],
  "aggregations" : [ {
    "metric" : "aeiou",
    "count" : 123456789,
    "type" : "aeiou",
    "dimension" : "aeiou",
    "results" : [ {
      "count" : 123456789,
      "lt" : 1.3579000000000001069366817318950779736042022705078125,
      "gte" : 1.3579000000000001069366817318950779736042022705078125,
      "value" : "aeiou"
    } ]
  } ]
}}]
     
     - parameter body: (body) query (optional)

     - returns: RequestBuilder<ININAnalyticsConversationQueryResponse> 
     */
    public class func postAnalyticsConversationsDetailsQueryWithRequestBuilder(body body: ININConversationQuery? = nil) -> RequestBuilder<ININAnalyticsConversationQueryResponse> {
        let path = "/api/v2/analytics/conversations/details/query"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAnalyticsConversationQueryResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Query for evaluation aggregates
     
     - parameter body: (body) query (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAnalyticsEvaluationsAggregatesQuery(body body: ININAggregationQuery? = nil, completion: ((data: ININAggregateQueryResponse?, error: ErrorType?) -> Void)) {
        postAnalyticsEvaluationsAggregatesQueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query for evaluation aggregates
     - POST /api/v2/analytics/evaluations/aggregates/query
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "data" : [ {
      "interval" : "aeiou",
      "metrics" : [ {
        "metric" : "aeiou",
        "stats" : {
          "current" : 1.3579000000000001069366817318950779736042022705078125,
          "min" : 1.3579000000000001069366817318950779736042022705078125,
          "max" : 1.3579000000000001069366817318950779736042022705078125,
          "count" : 123456789,
          "sum" : 1.3579000000000001069366817318950779736042022705078125,
          "ratio" : 1.3579000000000001069366817318950779736042022705078125,
          "numerator" : 1.3579000000000001069366817318950779736042022705078125,
          "denominator" : 1.3579000000000001069366817318950779736042022705078125,
          "target" : 1.3579000000000001069366817318950779736042022705078125
        },
        "qualifier" : "aeiou"
      } ]
    } ],
    "group" : {
      "key" : "aeiou"
    }
  } ]
}}]
     
     - parameter body: (body) query (optional)

     - returns: RequestBuilder<ININAggregateQueryResponse> 
     */
    public class func postAnalyticsEvaluationsAggregatesQueryWithRequestBuilder(body body: ININAggregationQuery? = nil) -> RequestBuilder<ININAggregateQueryResponse> {
        let path = "/api/v2/analytics/evaluations/aggregates/query"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAggregateQueryResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Query for queue observations
     
     - parameter body: (body) query (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAnalyticsQueuesObservationsQuery(body body: ININObservationQuery? = nil, completion: ((data: ININObservationQueryResponse?, error: ErrorType?) -> Void)) {
        postAnalyticsQueuesObservationsQueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query for queue observations
     - POST /api/v2/analytics/queues/observations/query
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "data" : [ {
      "metric" : "aeiou",
      "stats" : {
        "current" : 1.3579000000000001069366817318950779736042022705078125,
        "min" : 1.3579000000000001069366817318950779736042022705078125,
        "max" : 1.3579000000000001069366817318950779736042022705078125,
        "count" : 123456789,
        "sum" : 1.3579000000000001069366817318950779736042022705078125,
        "ratio" : 1.3579000000000001069366817318950779736042022705078125,
        "numerator" : 1.3579000000000001069366817318950779736042022705078125,
        "denominator" : 1.3579000000000001069366817318950779736042022705078125,
        "target" : 1.3579000000000001069366817318950779736042022705078125
      },
      "qualifier" : "aeiou"
    } ],
    "group" : {
      "key" : "aeiou"
    }
  } ]
}}]
     
     - parameter body: (body) query (optional)

     - returns: RequestBuilder<ININObservationQueryResponse> 
     */
    public class func postAnalyticsQueuesObservationsQueryWithRequestBuilder(body body: ININObservationQuery? = nil) -> RequestBuilder<ININObservationQueryResponse> {
        let path = "/api/v2/analytics/queues/observations/query"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININObservationQueryResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a scheduled report job
     
     - parameter body: (body) ReportSchedule (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAnalyticsReportingSchedules(body body: ININReportSchedule? = nil, completion: ((data: ININReportSchedule?, error: ErrorType?) -> Void)) {
        postAnalyticsReportingSchedulesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a scheduled report job
     - POST /api/v2/analytics/reporting/schedules
     - Create a scheduled report job.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "quartzCronExpression" : "aeiou",
  "reportId" : "aeiou",
  "lastRun" : {
    "reportId" : "aeiou",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "errorMessage" : "aeiou",
    "runDurationMsec" : 123456789,
    "reportFormat" : "aeiou",
    "id" : "aeiou",
    "runTime" : "2000-01-23T04:56:07.000+0000",
    "reportUrl" : "aeiou",
    "scheduleUri" : "aeiou",
    "runStatus" : "aeiou"
  },
  "selfUri" : "aeiou",
  "nextFireTime" : "2000-01-23T04:56:07.000+0000",
  "description" : "aeiou",
  "timeZone" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "reportFormat" : "aeiou",
  "locale" : "aeiou",
  "enabled" : true,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "name" : "aeiou",
  "timePeriod" : "aeiou",
  "interval" : "aeiou",
  "id" : "aeiou",
  "parameters" : {
    "key" : "{}"
  }
}}]
     
     - parameter body: (body) ReportSchedule (optional)

     - returns: RequestBuilder<ININReportSchedule> 
     */
    public class func postAnalyticsReportingSchedulesWithRequestBuilder(body body: ININReportSchedule? = nil) -> RequestBuilder<ININReportSchedule> {
        let path = "/api/v2/analytics/reporting/schedules"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININReportSchedule>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Place a scheduled report immediately into the reporting queue
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAnalyticsReportingSchedulesScheduleIdRunreport(scheduleId scheduleId: String, completion: ((data: ININRunNowResponse?, error: ErrorType?) -> Void)) {
        postAnalyticsReportingSchedulesScheduleIdRunreportWithRequestBuilder(scheduleId: scheduleId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Place a scheduled report immediately into the reporting queue
     - POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "id" : "aeiou"
}}]
     
     - parameter scheduleId: (path) Schedule ID 

     - returns: RequestBuilder<ININRunNowResponse> 
     */
    public class func postAnalyticsReportingSchedulesScheduleIdRunreportWithRequestBuilder(scheduleId scheduleId: String) -> RequestBuilder<ININRunNowResponse> {
        var path = "/api/v2/analytics/reporting/schedules/{scheduleId}/runreport"
        path = path.stringByReplacingOccurrencesOfString("{scheduleId}", withString: "\(scheduleId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININRunNowResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Query for user aggregates
     
     - parameter body: (body) query (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAnalyticsUsersAggregatesQuery(body body: ININAggregationQuery? = nil, completion: ((data: ININPresenceQueryResponse?, error: ErrorType?) -> Void)) {
        postAnalyticsUsersAggregatesQueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query for user aggregates
     - POST /api/v2/analytics/users/aggregates/query
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "systemToOrganizationMappings" : {
    "key" : [ "aeiou" ]
  },
  "results" : [ {
    "data" : [ {
      "interval" : "aeiou",
      "metrics" : [ {
        "metric" : "aeiou",
        "stats" : {
          "current" : 1.3579000000000001069366817318950779736042022705078125,
          "min" : 1.3579000000000001069366817318950779736042022705078125,
          "max" : 1.3579000000000001069366817318950779736042022705078125,
          "count" : 123456789,
          "sum" : 1.3579000000000001069366817318950779736042022705078125,
          "ratio" : 1.3579000000000001069366817318950779736042022705078125,
          "numerator" : 1.3579000000000001069366817318950779736042022705078125,
          "denominator" : 1.3579000000000001069366817318950779736042022705078125,
          "target" : 1.3579000000000001069366817318950779736042022705078125
        },
        "qualifier" : "aeiou"
      } ]
    } ],
    "group" : {
      "key" : "aeiou"
    }
  } ]
}}]
     
     - parameter body: (body) query (optional)

     - returns: RequestBuilder<ININPresenceQueryResponse> 
     */
    public class func postAnalyticsUsersAggregatesQueryWithRequestBuilder(body body: ININAggregationQuery? = nil) -> RequestBuilder<ININPresenceQueryResponse> {
        let path = "/api/v2/analytics/users/aggregates/query"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININPresenceQueryResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Query for user observations
     
     - parameter body: (body) query (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postAnalyticsUsersObservationsQuery(body body: ININObservationQuery? = nil, completion: ((data: ININObservationQueryResponse?, error: ErrorType?) -> Void)) {
        postAnalyticsUsersObservationsQueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query for user observations
     - POST /api/v2/analytics/users/observations/query
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "results" : [ {
    "data" : [ {
      "metric" : "aeiou",
      "stats" : {
        "current" : 1.3579000000000001069366817318950779736042022705078125,
        "min" : 1.3579000000000001069366817318950779736042022705078125,
        "max" : 1.3579000000000001069366817318950779736042022705078125,
        "count" : 123456789,
        "sum" : 1.3579000000000001069366817318950779736042022705078125,
        "ratio" : 1.3579000000000001069366817318950779736042022705078125,
        "numerator" : 1.3579000000000001069366817318950779736042022705078125,
        "denominator" : 1.3579000000000001069366817318950779736042022705078125,
        "target" : 1.3579000000000001069366817318950779736042022705078125
      },
      "qualifier" : "aeiou"
    } ],
    "group" : {
      "key" : "aeiou"
    }
  } ]
}}]
     
     - parameter body: (body) query (optional)

     - returns: RequestBuilder<ININObservationQueryResponse> 
     */
    public class func postAnalyticsUsersObservationsQueryWithRequestBuilder(body body: ININObservationQuery? = nil) -> RequestBuilder<ININObservationQueryResponse> {
        let path = "/api/v2/analytics/users/observations/query"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININObservationQueryResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a scheduled report job.
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter body: (body) ReportSchedule (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putAnalyticsReportingSchedulesScheduleId(scheduleId scheduleId: String, body: ININReportSchedule? = nil, completion: ((data: ININReportSchedule?, error: ErrorType?) -> Void)) {
        putAnalyticsReportingSchedulesScheduleIdWithRequestBuilder(scheduleId: scheduleId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a scheduled report job.
     - PUT /api/v2/analytics/reporting/schedules/{scheduleId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "quartzCronExpression" : "aeiou",
  "reportId" : "aeiou",
  "lastRun" : {
    "reportId" : "aeiou",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "errorMessage" : "aeiou",
    "runDurationMsec" : 123456789,
    "reportFormat" : "aeiou",
    "id" : "aeiou",
    "runTime" : "2000-01-23T04:56:07.000+0000",
    "reportUrl" : "aeiou",
    "scheduleUri" : "aeiou",
    "runStatus" : "aeiou"
  },
  "selfUri" : "aeiou",
  "nextFireTime" : "2000-01-23T04:56:07.000+0000",
  "description" : "aeiou",
  "timeZone" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "reportFormat" : "aeiou",
  "locale" : "aeiou",
  "enabled" : true,
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "name" : "aeiou",
  "timePeriod" : "aeiou",
  "interval" : "aeiou",
  "id" : "aeiou",
  "parameters" : {
    "key" : "{}"
  }
}}]
     
     - parameter scheduleId: (path) Schedule ID 
     - parameter body: (body) ReportSchedule (optional)

     - returns: RequestBuilder<ININReportSchedule> 
     */
    public class func putAnalyticsReportingSchedulesScheduleIdWithRequestBuilder(scheduleId scheduleId: String, body: ININReportSchedule? = nil) -> RequestBuilder<ININReportSchedule> {
        var path = "/api/v2/analytics/reporting/schedules/{scheduleId}"
        path = path.stringByReplacingOccurrencesOfString("{scheduleId}", withString: "\(scheduleId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININReportSchedule>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
