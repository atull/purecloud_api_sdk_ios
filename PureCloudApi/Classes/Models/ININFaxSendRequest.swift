//
// ININFaxSendRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININFaxSendRequest: JSONEncodable {
    public enum ININContentType: String { 
        case ApplicationPdf = "application/pdf"
        case ImageTiff = "image/tiff"
        case ApplicationMsword = "application/msword"
        case ApplicationVndOasisOpendocumentText = "application/vnd.oasis.opendocument.text"
        case ApplicationVndOpenxmlformatsOfficedocumentWordprocessingmlDocument = "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    }
    /** The globally unique identifier for the object. */
    public var id: String?
    public var name: String?
    /** A list of outbound fax dialing addresses. E.g. +13175555555 or 3175555555 */
    public var addresses: [String]?
    /** DocumentId of Content Management artifact. If Content Management document is not used for faxing, documentId should be null */
    public var documentId: String?
    /** The content type that is going to be uploaded. If Content Management document is used for faxing, contentType will be ignored */
    public var contentType: ININContentType?
    /** Workspace in which the document should be stored. If Content Management document is used for faxing, workspace will be ignored */
    public var workspace: ININWorkspace?
    /** Data for coversheet generation. */
    public var coverSheet: ININCoverSheet?
    /** The URI for this object */
    public var selfUri: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["addresses"] = self.addresses?.encodeToJSON()
        nillableDictionary["documentId"] = self.documentId
        nillableDictionary["contentType"] = self.contentType?.rawValue
        nillableDictionary["workspace"] = self.workspace?.encodeToJSON()
        nillableDictionary["coverSheet"] = self.coverSheet?.encodeToJSON()
        nillableDictionary["selfUri"] = self.selfUri
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
