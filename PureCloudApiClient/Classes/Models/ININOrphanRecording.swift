//
// ININOrphanRecording.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININOrphanRecording: JSONEncodable {
    public enum ININProviderType: String { 
        case Edge = "EDGE"
        case Chat = "CHAT"
        case Email = "EMAIL"
    }
    public enum ININMediaType: String { 
        case Call = "CALL"
        case Chat = "CHAT"
        case Email = "EMAIL"
    }
    public enum ININFileState: String { 
        case Archived = "ARCHIVED"
        case Available = "AVAILABLE"
        case Deleted = "DELETED"
        case Restored = "RESTORED"
        case Restoring = "RESTORING"
        case Uploading = "UPLOADING"
    }
    /** The globally unique identifier for the object. */
    public var id: String?
    public var name: String?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var createdTime: NSDate?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var recoveredTime: NSDate?
    public var providerType: ININProviderType?
    public var mediaSizeBytes: Int64?
    public var mediaType: ININMediaType?
    public var fileState: ININFileState?
    public var providerEndpoint: ININEndpoint?
    public var recording: ININRecording?
    /** The URI for this object */
    public var selfUri: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["createdTime"] = self.createdTime?.encodeToJSON()
        nillableDictionary["recoveredTime"] = self.recoveredTime?.encodeToJSON()
        nillableDictionary["providerType"] = self.providerType?.rawValue
        nillableDictionary["mediaSizeBytes"] = self.mediaSizeBytes?.encodeToJSON()
        nillableDictionary["mediaType"] = self.mediaType?.rawValue
        nillableDictionary["fileState"] = self.fileState?.rawValue
        nillableDictionary["providerEndpoint"] = self.providerEndpoint?.encodeToJSON()
        nillableDictionary["recording"] = self.recording?.encodeToJSON()
        nillableDictionary["selfUri"] = self.selfUri
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
