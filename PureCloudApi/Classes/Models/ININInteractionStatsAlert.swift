//
// ININInteractionStatsAlert.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININInteractionStatsAlert: JSONEncodable {
    public enum ININDimension: String { 
        case Queueid = "queueId"
        case Userid = "userId"
    }
    public enum ININMetric: String { 
        case Tabandon = "tAbandon"
        case Tanswered = "tAnswered"
        case Ttalk = "tTalk"
        case Noffered = "nOffered"
        case Thandle = "tHandle"
        case Ntransferred = "nTransferred"
        case Oservicelevel = "oServiceLevel"
        case Twait = "tWait"
        case Theld = "tHeld"
        case Tacw = "tAcw"
    }
    public enum ININMediaType: String { 
        case Voice = "voice"
        case Chat = "chat"
        case Email = "email"
    }
    public enum ININNumericRange: String { 
        case Gt = "gt"
        case Gte = "gte"
        case Lt = "lt"
        case Lte = "lte"
        case Eq = "eq"
        case Ne = "ne"
    }
    public enum ININStatistic: String { 
        case Count = "count"
        case Min = "min"
        case Ratio = "ratio"
        case Max = "max"
    }
    /** The globally unique identifier for the object. */
    public var id: String?
    /** Name of the rule that generated the alert */
    public var name: String?
    /** The dimension of concern. */
    public var dimension: ININDimension?
    /** The value of the dimension. */
    public var dimensionValue: String?
    /** The metric to be assessed. */
    public var metric: ININMetric?
    /** The media type. */
    public var mediaType: ININMediaType?
    /** The comparison descriptor used against the metric&#39;s value. */
    public var numericRange: ININNumericRange?
    /** The statistic of concern for the metric. */
    public var statistic: ININStatistic?
    /** The threshold value. */
    public var value: Double?
    /** The id of the rule. */
    public var ruleId: String?
    /** Indicates if the alert has been read. */
    public var unread: Bool?
    /** The date/time the alert was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var startDate: NSDate?
    /** The date/time the owning rule exiting in alarm status. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var endDate: NSDate?
    /** The ids of users who were notified of alarm state change. */
    public var notificationUsers: [ININUser]?
    /** A collection of notification methods. &#x3D; [&#39;SMS&#39;, &#39;DEVICE&#39;, &#39;EMAIL&#39;] */
    public var alertTypes: [String]?
    public var ruleUri: String?
    /** The URI for this object */
    public var selfUri: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["dimension"] = self.dimension?.rawValue
        nillableDictionary["dimensionValue"] = self.dimensionValue
        nillableDictionary["metric"] = self.metric?.rawValue
        nillableDictionary["mediaType"] = self.mediaType?.rawValue
        nillableDictionary["numericRange"] = self.numericRange?.rawValue
        nillableDictionary["statistic"] = self.statistic?.rawValue
        nillableDictionary["value"] = self.value
        nillableDictionary["ruleId"] = self.ruleId
        nillableDictionary["unread"] = self.unread
        nillableDictionary["startDate"] = self.startDate?.encodeToJSON()
        nillableDictionary["endDate"] = self.endDate?.encodeToJSON()
        nillableDictionary["notificationUsers"] = self.notificationUsers?.encodeToJSON()
        nillableDictionary["alertTypes"] = self.alertTypes?.encodeToJSON()
        nillableDictionary["ruleUri"] = self.ruleUri
        nillableDictionary["selfUri"] = self.selfUri
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
