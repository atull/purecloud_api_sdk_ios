//
// ContentManagementAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ContentManagementAPI: APIBase {
    /**
     Delete a document.
     
     - parameter documentId: (path) Document ID 
     - parameter _override: (query) Override any lock on the document (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteContentmanagementDocumentsDocumentId(documentId documentId: String, _override: Bool? = nil, completion: ((error: ErrorType?) -> Void)) {
        deleteContentmanagementDocumentsDocumentIdWithRequestBuilder(documentId: documentId, _override: _override).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a document.
     - DELETE /api/v2/contentmanagement/documents/{documentId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter documentId: (path) Document ID 
     - parameter _override: (query) Override any lock on the document (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func deleteContentmanagementDocumentsDocumentIdWithRequestBuilder(documentId documentId: String, _override: Bool? = nil) -> RequestBuilder<Void> {
        var path = "/api/v2/contentmanagement/documents/{documentId}"
        path = path.stringByReplacingOccurrencesOfString("{documentId}", withString: "\(documentId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "override": _override
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Deletes an existing share.
     
     - parameter shareId: (path) Share ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteContentmanagementSharesShareId(shareId shareId: String, completion: ((error: ErrorType?) -> Void)) {
        deleteContentmanagementSharesShareIdWithRequestBuilder(shareId: shareId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Deletes an existing share.
     - DELETE /api/v2/contentmanagement/shares/{shareId}
     - This revokes sharing rights specified in the share record
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter shareId: (path) Share ID 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteContentmanagementSharesShareIdWithRequestBuilder(shareId shareId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/contentmanagement/shares/{shareId}"
        path = path.stringByReplacingOccurrencesOfString("{shareId}", withString: "\(shareId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Cancel the command for this status
     
     - parameter statusId: (path) Status ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteContentmanagementStatusStatusId(statusId statusId: String, completion: ((error: ErrorType?) -> Void)) {
        deleteContentmanagementStatusStatusIdWithRequestBuilder(statusId: statusId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Cancel the command for this status
     - DELETE /api/v2/contentmanagement/status/{statusId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter statusId: (path) Status ID 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteContentmanagementStatusStatusIdWithRequestBuilder(statusId statusId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/contentmanagement/status/{statusId}"
        path = path.stringByReplacingOccurrencesOfString("{statusId}", withString: "\(statusId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a workspace
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter moveChildrenToWorkspaceId: (query) New location for objects in deleted workspace. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteContentmanagementWorkspacesWorkspaceId(workspaceId workspaceId: String, moveChildrenToWorkspaceId: String? = nil, completion: ((error: ErrorType?) -> Void)) {
        deleteContentmanagementWorkspacesWorkspaceIdWithRequestBuilder(workspaceId: workspaceId, moveChildrenToWorkspaceId: moveChildrenToWorkspaceId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a workspace
     - DELETE /api/v2/contentmanagement/workspaces/{workspaceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter moveChildrenToWorkspaceId: (query) New location for objects in deleted workspace. (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func deleteContentmanagementWorkspacesWorkspaceIdWithRequestBuilder(workspaceId workspaceId: String, moveChildrenToWorkspaceId: String? = nil) -> RequestBuilder<Void> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "moveChildrenToWorkspaceId": moveChildrenToWorkspaceId
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Delete a member from a workspace
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteContentmanagementWorkspacesWorkspaceIdMembersMemberId(workspaceId workspaceId: String, memberId: String, completion: ((error: ErrorType?) -> Void)) {
        deleteContentmanagementWorkspacesWorkspaceIdMembersMemberIdWithRequestBuilder(workspaceId: workspaceId, memberId: memberId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a member from a workspace
     - DELETE /api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteContentmanagementWorkspacesWorkspaceIdMembersMemberIdWithRequestBuilder(workspaceId workspaceId: String, memberId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{memberId}", withString: "\(memberId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete workspace tag
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteContentmanagementWorkspacesWorkspaceIdTagvaluesTagId(workspaceId workspaceId: String, tagId: String, completion: ((error: ErrorType?) -> Void)) {
        deleteContentmanagementWorkspacesWorkspaceIdTagvaluesTagIdWithRequestBuilder(workspaceId: workspaceId, tagId: tagId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete workspace tag
     - DELETE /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}
     - Delete a tag from a workspace. Will remove this tag from all documents.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteContentmanagementWorkspacesWorkspaceIdTagvaluesTagIdWithRequestBuilder(workspaceId workspaceId: String, tagId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{tagId}", withString: "\(tagId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementDocuments: String { 
        case Acl = "acl"
        case Workspace = "workspace"
    }

    /**
     Get a list of documents.
     
     - parameter workspaceId: (query) Workspace ID 
     - parameter name: (query) Name (optional)
     - parameter expand: (query) Expand some document fields (optional)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) name or dateCreated (optional)
     - parameter sortOrder: (query) ascending or descending (optional, default to ascending)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementDocuments(workspaceId workspaceId: String, name: String? = nil, expand: ININExpand_getContentmanagementDocuments? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, completion: ((data: ININDocumentEntityListing?, error: ErrorType?) -> Void)) {
        getContentmanagementDocumentsWithRequestBuilder(workspaceId: workspaceId, name: name, expand: expand, pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of documents.
     - GET /api/v2/contentmanagement/documents
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "workspace" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "downloadSharingUri" : "aeiou",
    "dateUploaded" : "2000-01-23T04:56:07.000+0000",
    "uploadStatus" : "",
    "acl" : [ "aeiou" ],
    "uploadMethod" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "systemType" : "aeiou",
    "changeNumber" : 123,
    "id" : "aeiou",
    "tagValues" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "inUse" : true,
      "id" : "aeiou",
      "acl" : [ "aeiou" ]
    } ],
    "uploadedBy" : "",
    "contentType" : "aeiou",
    "callerAddress" : "aeiou",
    "pageCount" : 123456789,
    "read" : true,
    "sharingStatus" : "aeiou",
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "tags" : [ "aeiou" ],
    "receiverAddress" : "aeiou",
    "lockInfo" : {
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "lockedBy" : "",
      "dateExpires" : "2000-01-23T04:56:07.000+0000",
      "action" : "aeiou"
    },
    "filename" : "aeiou",
    "createdBy" : "",
    "contentUri" : "aeiou",
    "name" : "aeiou",
    "contentLength" : 123456789,
    "attributes" : [ {
      "values" : [ "aeiou" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "",
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "description" : "aeiou",
        "modifiedBy" : "",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "version" : 123
      }
    } ],
    "thumbnails" : [ {
      "imageUri" : "aeiou",
      "resolution" : "aeiou"
    } ],
    "sharingUri" : "aeiou",
    "uploadDestinationUri" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter workspaceId: (query) Workspace ID 
     - parameter name: (query) Name (optional)
     - parameter expand: (query) Expand some document fields (optional)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) name or dateCreated (optional)
     - parameter sortOrder: (query) ascending or descending (optional, default to ascending)

     - returns: RequestBuilder<ININDocumentEntityListing> 
     */
    public class func getContentmanagementDocumentsWithRequestBuilder(workspaceId workspaceId: String, name: String? = nil, expand: ININExpand_getContentmanagementDocuments? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil) -> RequestBuilder<ININDocumentEntityListing> {
        let path = "/api/v2/contentmanagement/documents"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "workspaceId": workspaceId,
            "name": name,
            "expand": expand?.rawValue,
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "sortBy": sortBy,
            "sortOrder": sortOrder
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDocumentEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementDocumentsDocumentId: String { 
        case Lockinfo = "lockInfo"
        case Acl = "acl"
        case Workspace = "workspace"
    }

    /**
     Get a document.
     
     - parameter documentId: (path) Document ID 
     - parameter expand: (query) Expand some document fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementDocumentsDocumentId(documentId documentId: String, expand: ININExpand_getContentmanagementDocumentsDocumentId? = nil, completion: ((data: ININDocument?, error: ErrorType?) -> Void)) {
        getContentmanagementDocumentsDocumentIdWithRequestBuilder(documentId: documentId, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a document.
     - GET /api/v2/contentmanagement/documents/{documentId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "downloadSharingUri" : "aeiou",
  "dateUploaded" : "2000-01-23T04:56:07.000+0000",
  "uploadStatus" : "",
  "acl" : [ "aeiou" ],
  "uploadMethod" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "systemType" : "aeiou",
  "changeNumber" : 123,
  "id" : "aeiou",
  "tagValues" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "inUse" : true,
    "id" : "aeiou",
    "acl" : [ "aeiou" ]
  } ],
  "uploadedBy" : "",
  "contentType" : "aeiou",
  "callerAddress" : "aeiou",
  "pageCount" : 123456789,
  "read" : true,
  "sharingStatus" : "aeiou",
  "selfUri" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "tags" : [ "aeiou" ],
  "receiverAddress" : "aeiou",
  "lockInfo" : {
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "lockedBy" : "",
    "dateExpires" : "2000-01-23T04:56:07.000+0000",
    "action" : "aeiou"
  },
  "filename" : "aeiou",
  "createdBy" : "",
  "contentUri" : "aeiou",
  "name" : "aeiou",
  "contentLength" : 123456789,
  "attributes" : [ {
    "values" : [ "aeiou" ],
    "attribute" : {
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "",
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "description" : "aeiou",
      "modifiedBy" : "",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "id" : "aeiou",
      "version" : 123
    }
  } ],
  "thumbnails" : [ {
    "imageUri" : "aeiou",
    "resolution" : "aeiou"
  } ],
  "sharingUri" : "aeiou",
  "uploadDestinationUri" : "aeiou"
}}]
     
     - parameter documentId: (path) Document ID 
     - parameter expand: (query) Expand some document fields (optional)

     - returns: RequestBuilder<ININDocument> 
     */
    public class func getContentmanagementDocumentsDocumentIdWithRequestBuilder(documentId documentId: String, expand: ININExpand_getContentmanagementDocumentsDocumentId? = nil) -> RequestBuilder<ININDocument> {
        var path = "/api/v2/contentmanagement/documents/{documentId}"
        path = path.stringByReplacingOccurrencesOfString("{documentId}", withString: "\(documentId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "expand": expand?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDocument>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a list of audits for a document.
     
     - parameter documentId: (path) Document ID 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter transactionFilter: (query) Transaction filter (optional)
     - parameter level: (query) level (optional, default to USER)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to ascending)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementDocumentsDocumentIdAudits(documentId documentId: String, pageSize: Int32? = nil, pageNumber: Int32? = nil, transactionFilter: String? = nil, level: String? = nil, sortBy: String? = nil, sortOrder: String? = nil, completion: ((data: ININDocumentAuditEntityListing?, error: ErrorType?) -> Void)) {
        getContentmanagementDocumentsDocumentIdAuditsWithRequestBuilder(documentId: documentId, pageSize: pageSize, pageNumber: pageNumber, transactionFilter: transactionFilter, level: level, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of audits for a document.
     - GET /api/v2/contentmanagement/documents/{documentId}/audits
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "workspace" : "",
    "level" : "aeiou",
    "transactionInitiator" : true,
    "selfUri" : "aeiou",
    "changes" : [ {
      "property" : "aeiou",
      "newValues" : [ "aeiou" ],
      "oldValues" : [ "aeiou" ],
      "entity" : ""
    } ],
    "serviceName" : "aeiou",
    "transactionId" : "aeiou",
    "actionContext" : "aeiou",
    "application" : "aeiou",
    "name" : "aeiou",
    "action" : "aeiou",
    "id" : "aeiou",
    "user" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "entity" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "action" : "aeiou",
      "id" : "aeiou",
      "type" : "aeiou"
    },
    "timestamp" : "2000-01-23T04:56:07.000+0000",
    "status" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter documentId: (path) Document ID 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter transactionFilter: (query) Transaction filter (optional)
     - parameter level: (query) level (optional, default to USER)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to ascending)

     - returns: RequestBuilder<ININDocumentAuditEntityListing> 
     */
    public class func getContentmanagementDocumentsDocumentIdAuditsWithRequestBuilder(documentId documentId: String, pageSize: Int32? = nil, pageNumber: Int32? = nil, transactionFilter: String? = nil, level: String? = nil, sortBy: String? = nil, sortOrder: String? = nil) -> RequestBuilder<ININDocumentAuditEntityListing> {
        var path = "/api/v2/contentmanagement/documents/{documentId}/audits"
        path = path.stringByReplacingOccurrencesOfString("{documentId}", withString: "\(documentId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "transactionFilter": transactionFilter,
            "level": level,
            "sortBy": sortBy,
            "sortOrder": sortOrder
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDocumentAuditEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter disposition
    */
    public enum ININDisposition_getContentmanagementDocumentsDocumentIdContent: String { 
        case Attachment = "attachment"
        case Inline = "inline"
    }

    /**
     Download a document.
     
     - parameter documentId: (path) Document ID 
     - parameter disposition: (query) Request how the content will be downloaded: attached as a file or inline. Default is attachment. (optional)
     - parameter contentType: (query) The requested format for the specified document. If supported, the document will be returned in that format. Example contentType&#x3D;audio/wav (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementDocumentsDocumentIdContent(documentId documentId: String, disposition: ININDisposition_getContentmanagementDocumentsDocumentIdContent? = nil, contentType: String? = nil, completion: ((error: ErrorType?) -> Void)) {
        getContentmanagementDocumentsDocumentIdContentWithRequestBuilder(documentId: documentId, disposition: disposition, contentType: contentType).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Download a document.
     - GET /api/v2/contentmanagement/documents/{documentId}/content
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter documentId: (path) Document ID 
     - parameter disposition: (query) Request how the content will be downloaded: attached as a file or inline. Default is attachment. (optional)
     - parameter contentType: (query) The requested format for the specified document. If supported, the document will be returned in that format. Example contentType&#x3D;audio/wav (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func getContentmanagementDocumentsDocumentIdContentWithRequestBuilder(documentId documentId: String, disposition: ININDisposition_getContentmanagementDocumentsDocumentIdContent? = nil, contentType: String? = nil) -> RequestBuilder<Void> {
        var path = "/api/v2/contentmanagement/documents/{documentId}/content"
        path = path.stringByReplacingOccurrencesOfString("{documentId}", withString: "\(documentId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "disposition": disposition?.rawValue,
            "contentType": contentType
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementQuery: String { 
        case Acl = "acl"
        case Workspace = "workspace"
    }

    /**
     Query content
     
     - parameter queryPhrase: (query) Phrase tokens are ANDed together over all searchable fields 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) name or dateCreated (optional, default to name)
     - parameter sortOrder: (query) ascending or descending (optional, default to ascending)
     - parameter expand: (query) Expand some document fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementQuery(queryPhrase queryPhrase: String, pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, expand: ININExpand_getContentmanagementQuery? = nil, completion: ((data: ININQueryResults?, error: ErrorType?) -> Void)) {
        getContentmanagementQueryWithRequestBuilder(queryPhrase: queryPhrase, pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query content
     - GET /api/v2/contentmanagement/query
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "facetInfo" : {
    "attributes" : [ {
      "name" : "aeiou",
      "count" : 123,
      "id" : "aeiou"
    } ],
    "facets" : [ {
      "other" : 123456789,
      "total" : 123456789,
      "terms" : [ {
        "name" : "aeiou",
        "count" : 123456789,
        "term" : "aeiou",
        "id" : "aeiou",
        "time" : "2000-01-23T04:56:07.000+0000",
        "key" : 123456789
      } ],
      "termCount" : 123,
      "missing" : 123456789,
      "termType" : "aeiou",
      "attribute" : {
        "name" : "aeiou",
        "id" : "aeiou",
        "type" : "aeiou"
      },
      "statistics" : {
        "dateMax" : "2000-01-23T04:56:07.000+0000",
        "stdDeviation" : 1.3579000000000001069366817318950779736042022705078125,
        "dateMin" : "2000-01-23T04:56:07.000+0000",
        "min" : 1.3579000000000001069366817318950779736042022705078125,
        "max" : 1.3579000000000001069366817318950779736042022705078125,
        "mean" : 1.3579000000000001069366817318950779736042022705078125,
        "count" : 123456789
      }
    } ]
  },
  "results" : {
    "total" : 123456789,
    "pageCount" : 123,
    "pageNumber" : 123,
    "entities" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou",
      "body" : {
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou"
      }
    } ],
    "firstUri" : "aeiou",
    "selfUri" : "aeiou",
    "lastUri" : "aeiou",
    "pageSize" : 123,
    "previousUri" : "aeiou",
    "nextUri" : "aeiou"
  }
}}]
     
     - parameter queryPhrase: (query) Phrase tokens are ANDed together over all searchable fields 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) name or dateCreated (optional, default to name)
     - parameter sortOrder: (query) ascending or descending (optional, default to ascending)
     - parameter expand: (query) Expand some document fields (optional)

     - returns: RequestBuilder<ININQueryResults> 
     */
    public class func getContentmanagementQueryWithRequestBuilder(queryPhrase queryPhrase: String, pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, expand: ININExpand_getContentmanagementQuery? = nil) -> RequestBuilder<ININQueryResults> {
        let path = "/api/v2/contentmanagement/query"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "sortBy": sortBy,
            "sortOrder": sortOrder,
            "queryPhrase": queryPhrase,
            "expand": expand?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININQueryResults>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a List of Security Profiles
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementSecurityprofiles(completion: ((data: ININSecurityProfileEntityListing?, error: ErrorType?) -> Void)) {
        getContentmanagementSecurityprofilesWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a List of Security Profiles
     - GET /api/v2/contentmanagement/securityprofiles
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "permissions" : [ "aeiou" ],
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]

     - returns: RequestBuilder<ININSecurityProfileEntityListing> 
     */
    public class func getContentmanagementSecurityprofilesWithRequestBuilder() -> RequestBuilder<ININSecurityProfileEntityListing> {
        let path = "/api/v2/contentmanagement/securityprofiles"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSecurityProfileEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a Security Profile
     
     - parameter securityProfileId: (path) Security Profile Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementSecurityprofilesSecurityprofileId(securityProfileId securityProfileId: String, completion: ((data: ININSecurityProfile?, error: ErrorType?) -> Void)) {
        getContentmanagementSecurityprofilesSecurityprofileIdWithRequestBuilder(securityProfileId: securityProfileId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Security Profile
     - GET /api/v2/contentmanagement/securityprofiles/{securityProfileId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "permissions" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "id" : "aeiou"
}}]
     
     - parameter securityProfileId: (path) Security Profile Id 

     - returns: RequestBuilder<ININSecurityProfile> 
     */
    public class func getContentmanagementSecurityprofilesSecurityprofileIdWithRequestBuilder(securityProfileId securityProfileId: String) -> RequestBuilder<ININSecurityProfile> {
        var path = "/api/v2/contentmanagement/securityprofiles/{securityProfileId}"
        path = path.stringByReplacingOccurrencesOfString("{securityProfileId}", withString: "\(securityProfileId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSecurityProfile>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter disposition
    */
    public enum ININDisposition_getContentmanagementSharedSharedId: String { 
        case Attachment = "attachment"
        case Inline = "inline"
        case None = "none"
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementSharedSharedId: String { 
        case DocumentAcl = "document.acl"
    }

    /**
     Get shared documents. Securely download a shared document.
     
     - parameter sharedId: (path) Shared ID 
     - parameter redirect: (query) Turn on or off redirect (optional, default to true)
     - parameter disposition: (query) Request how the share content will be downloaded: attached as a file or inline. Default is attachment. (optional, default to attachment)
     - parameter contentType: (query) The requested format for the specified document. If supported, the document will be returned in that format. Example contentType&#x3D;audio/wav (optional)
     - parameter expand: (query) Expand some document fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementSharedSharedId(sharedId sharedId: String, redirect: Bool? = nil, disposition: ININDisposition_getContentmanagementSharedSharedId? = nil, contentType: String? = nil, expand: ININExpand_getContentmanagementSharedSharedId? = nil, completion: ((error: ErrorType?) -> Void)) {
        getContentmanagementSharedSharedIdWithRequestBuilder(sharedId: sharedId, redirect: redirect, disposition: disposition, contentType: contentType, expand: expand).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Get shared documents. Securely download a shared document.
     - GET /api/v2/contentmanagement/shared/{sharedId}
     - This method requires the download sharing URI obtained in the get document response (downloadSharingUri). Documents may be shared between users in the same workspace. Documents may also be shared between any user by creating a content management share.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter sharedId: (path) Shared ID 
     - parameter redirect: (query) Turn on or off redirect (optional, default to true)
     - parameter disposition: (query) Request how the share content will be downloaded: attached as a file or inline. Default is attachment. (optional, default to attachment)
     - parameter contentType: (query) The requested format for the specified document. If supported, the document will be returned in that format. Example contentType&#x3D;audio/wav (optional)
     - parameter expand: (query) Expand some document fields (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func getContentmanagementSharedSharedIdWithRequestBuilder(sharedId sharedId: String, redirect: Bool? = nil, disposition: ININDisposition_getContentmanagementSharedSharedId? = nil, contentType: String? = nil, expand: ININExpand_getContentmanagementSharedSharedId? = nil) -> RequestBuilder<Void> {
        var path = "/api/v2/contentmanagement/shared/{sharedId}"
        path = path.stringByReplacingOccurrencesOfString("{sharedId}", withString: "\(sharedId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "redirect": redirect,
            "disposition": disposition?.rawValue,
            "contentType": contentType,
            "expand": expand?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementShares: String { 
        case Member = "member"
    }

    /**
     Gets a list of shares.  You must specify at least one filter (e.g. entityId).
     
     - parameter entityId: (query) Filters the shares returned to only the entity specified by the value of this parameter. (optional)
     - parameter expand: (query) Expand share fields (optional)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementShares(entityId entityId: String? = nil, expand: ININExpand_getContentmanagementShares? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, completion: ((data: ININShareEntityListing?, error: ErrorType?) -> Void)) {
        getContentmanagementSharesWithRequestBuilder(entityId: entityId, expand: expand, pageSize: pageSize, pageNumber: pageNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of shares.  You must specify at least one filter (e.g. entityId).
     - GET /api/v2/contentmanagement/shares
     - Failing to specify a filter will return 400.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "workspace" : "",
    "sharedEntity" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "sharedEntityType" : "aeiou",
    "sharedBy" : "",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "member" : "",
    "id" : "aeiou",
    "memberType" : "aeiou",
    "user" : {
      "addresses" : [ "" ],
      "images" : [ {
        "imageUri" : "aeiou",
        "resolution" : "aeiou"
      } ],
      "selfUri" : "aeiou",
      "conversationSummary" : {
        "call" : {
          "enterprise" : "",
          "contactCenter" : {
            "acw" : 123,
            "active" : 123
          }
        },
        "socialExpression" : "",
        "chat" : "",
        "callback" : "",
        "video" : "",
        "userId" : "aeiou",
        "email" : ""
      },
      "primaryContactInfo" : [ {
        "address" : "aeiou",
        "display" : "aeiou",
        "mediaType" : "aeiou",
        "type" : "aeiou"
      } ],
      "routingStatus" : {
        "startTime" : "2000-01-23T04:56:07.000+0000",
        "userId" : "aeiou",
        "status" : "aeiou"
      },
      "title" : "aeiou",
      "version" : 123,
      "outOfOffice" : {
        "endDate" : "2000-01-23T04:56:07.000+0000",
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "active" : true,
        "id" : "aeiou",
        "user" : "",
        "startDate" : "2000-01-23T04:56:07.000+0000"
      },
      "authorization" : {
        "permissions" : [ "aeiou" ],
        "permissionPolicies" : [ {
          "policyDescription" : "aeiou",
          "resourceConditionNode" : {
            "operands" : [ {
              "type" : "aeiou",
              "value" : "aeiou"
            } ],
            "variableName" : "aeiou",
            "conjunction" : "aeiou",
            "terms" : [ "" ],
            "operator" : "aeiou"
          },
          "actionSetKey" : "aeiou",
          "namedResources" : [ "aeiou" ],
          "policyName" : "aeiou",
          "entityName" : "aeiou",
          "domain" : "aeiou",
          "id" : "aeiou",
          "resourceCondition" : "aeiou",
          "actionSet" : [ "aeiou" ]
        } ],
        "roles" : [ {
          "name" : "aeiou",
          "id" : "aeiou"
        } ]
      },
      "chat" : {
        "jabberId" : "aeiou"
      },
      "name" : "aeiou",
      "station" : {
        "defaultStation" : "",
        "lastAssociatedStation" : "",
        "associatedStation" : {
          "associatedDate" : "2000-01-23T04:56:07.000+0000",
          "defaultUser" : "",
          "id" : "aeiou",
          "associatedUser" : "",
          "providerInfo" : {
            "key" : "aeiou"
          }
        },
        "effectiveStation" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "department" : "aeiou",
      "presence" : {
        "presenceDefinition" : {
          "createdDate" : "2000-01-23T04:56:07.000+0000",
          "createdBy" : "",
          "languageLabels" : {
            "key" : "aeiou"
          },
          "systemPresence" : "aeiou",
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "modifiedDate" : "2000-01-23T04:56:07.000+0000",
          "modifiedBy" : "",
          "id" : "aeiou",
          "deactivated" : true,
          "primary" : true
        },
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "modifiedDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "source" : "aeiou",
        "message" : "aeiou",
        "primary" : true
      },
      "email" : "aeiou",
      "username" : "aeiou",
      "geolocation" : {
        "country" : "aeiou",
        "city" : "aeiou",
        "latitude" : 1.3579000000000001069366817318950779736042022705078125,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou",
        "type" : "aeiou",
        "region" : "aeiou",
        "primary" : true,
        "longitude" : 1.3579000000000001069366817318950779736042022705078125
      }
    },
    "group" : {
      "images" : [ "" ],
      "addresses" : [ "" ],
      "visibility" : "aeiou",
      "memberCount" : 123456789,
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "type" : "aeiou",
      "version" : 123,
      "rulesVisible" : true,
      "name" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter entityId: (query) Filters the shares returned to only the entity specified by the value of this parameter. (optional)
     - parameter expand: (query) Expand share fields (optional)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)

     - returns: RequestBuilder<ININShareEntityListing> 
     */
    public class func getContentmanagementSharesWithRequestBuilder(entityId entityId: String? = nil, expand: ININExpand_getContentmanagementShares? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil) -> RequestBuilder<ININShareEntityListing> {
        let path = "/api/v2/contentmanagement/shares"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "entityId": entityId,
            "expand": expand?.rawValue,
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININShareEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementSharesShareId: String { 
        case Member = "member"
    }

    /**
     Retrieve details about an existing share.
     
     - parameter shareId: (path) Share ID 
     - parameter expand: (query) Expand share fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementSharesShareId(shareId shareId: String, expand: ININExpand_getContentmanagementSharesShareId? = nil, completion: ((data: ININShare?, error: ErrorType?) -> Void)) {
        getContentmanagementSharesShareIdWithRequestBuilder(shareId: shareId, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Retrieve details about an existing share.
     - GET /api/v2/contentmanagement/shares/{shareId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "workspace" : "",
  "sharedEntity" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "sharedEntityType" : "aeiou",
  "sharedBy" : "",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "member" : "",
  "id" : "aeiou",
  "memberType" : "aeiou",
  "user" : {
    "addresses" : [ "" ],
    "images" : [ {
      "imageUri" : "aeiou",
      "resolution" : "aeiou"
    } ],
    "selfUri" : "aeiou",
    "conversationSummary" : {
      "call" : {
        "enterprise" : "",
        "contactCenter" : {
          "acw" : 123,
          "active" : 123
        }
      },
      "socialExpression" : "",
      "chat" : "",
      "callback" : "",
      "video" : "",
      "userId" : "aeiou",
      "email" : ""
    },
    "primaryContactInfo" : [ {
      "address" : "aeiou",
      "display" : "aeiou",
      "mediaType" : "aeiou",
      "type" : "aeiou"
    } ],
    "routingStatus" : {
      "startTime" : "2000-01-23T04:56:07.000+0000",
      "userId" : "aeiou",
      "status" : "aeiou"
    },
    "title" : "aeiou",
    "version" : 123,
    "outOfOffice" : {
      "endDate" : "2000-01-23T04:56:07.000+0000",
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "active" : true,
      "id" : "aeiou",
      "user" : "",
      "startDate" : "2000-01-23T04:56:07.000+0000"
    },
    "authorization" : {
      "permissions" : [ "aeiou" ],
      "permissionPolicies" : [ {
        "policyDescription" : "aeiou",
        "resourceConditionNode" : {
          "operands" : [ {
            "type" : "aeiou",
            "value" : "aeiou"
          } ],
          "variableName" : "aeiou",
          "conjunction" : "aeiou",
          "terms" : [ "" ],
          "operator" : "aeiou"
        },
        "actionSetKey" : "aeiou",
        "namedResources" : [ "aeiou" ],
        "policyName" : "aeiou",
        "entityName" : "aeiou",
        "domain" : "aeiou",
        "id" : "aeiou",
        "resourceCondition" : "aeiou",
        "actionSet" : [ "aeiou" ]
      } ],
      "roles" : [ {
        "name" : "aeiou",
        "id" : "aeiou"
      } ]
    },
    "chat" : {
      "jabberId" : "aeiou"
    },
    "name" : "aeiou",
    "station" : {
      "defaultStation" : "",
      "lastAssociatedStation" : "",
      "associatedStation" : {
        "associatedDate" : "2000-01-23T04:56:07.000+0000",
        "defaultUser" : "",
        "id" : "aeiou",
        "associatedUser" : "",
        "providerInfo" : {
          "key" : "aeiou"
        }
      },
      "effectiveStation" : ""
    },
    "id" : "aeiou",
    "state" : "aeiou",
    "department" : "aeiou",
    "presence" : {
      "presenceDefinition" : {
        "createdDate" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "",
        "languageLabels" : {
          "key" : "aeiou"
        },
        "systemPresence" : "aeiou",
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "modifiedDate" : "2000-01-23T04:56:07.000+0000",
        "modifiedBy" : "",
        "id" : "aeiou",
        "deactivated" : true,
        "primary" : true
      },
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "modifiedDate" : "2000-01-23T04:56:07.000+0000",
      "id" : "aeiou",
      "source" : "aeiou",
      "message" : "aeiou",
      "primary" : true
    },
    "email" : "aeiou",
    "username" : "aeiou",
    "geolocation" : {
      "country" : "aeiou",
      "city" : "aeiou",
      "latitude" : 1.3579000000000001069366817318950779736042022705078125,
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou",
      "type" : "aeiou",
      "region" : "aeiou",
      "primary" : true,
      "longitude" : 1.3579000000000001069366817318950779736042022705078125
    }
  },
  "group" : {
    "images" : [ "" ],
    "addresses" : [ "" ],
    "visibility" : "aeiou",
    "memberCount" : 123456789,
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "type" : "aeiou",
    "version" : 123,
    "rulesVisible" : true,
    "name" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou"
  }
}}]
     
     - parameter shareId: (path) Share ID 
     - parameter expand: (query) Expand share fields (optional)

     - returns: RequestBuilder<ININShare> 
     */
    public class func getContentmanagementSharesShareIdWithRequestBuilder(shareId shareId: String, expand: ININExpand_getContentmanagementSharesShareId? = nil) -> RequestBuilder<ININShare> {
        var path = "/api/v2/contentmanagement/shares/{shareId}"
        path = path.stringByReplacingOccurrencesOfString("{shareId}", withString: "\(shareId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "expand": expand?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININShare>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a list of statuses for pending operations
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementStatus(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, completion: ((data: ININCommandStatusEntityListing?, error: ErrorType?) -> Void)) {
        getContentmanagementStatusWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of statuses for pending operations
     - GET /api/v2/contentmanagement/status
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "commandType" : "aeiou",
    "document" : {
      "workspace" : {
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou"
      },
      "downloadSharingUri" : "aeiou",
      "dateUploaded" : "2000-01-23T04:56:07.000+0000",
      "uploadStatus" : "",
      "acl" : [ "aeiou" ],
      "uploadMethod" : "aeiou",
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "systemType" : "aeiou",
      "changeNumber" : 123,
      "id" : "aeiou",
      "tagValues" : [ {
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "inUse" : true,
        "id" : "aeiou",
        "acl" : [ "aeiou" ]
      } ],
      "uploadedBy" : "",
      "contentType" : "aeiou",
      "callerAddress" : "aeiou",
      "pageCount" : 123456789,
      "read" : true,
      "sharingStatus" : "aeiou",
      "selfUri" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "tags" : [ "aeiou" ],
      "receiverAddress" : "aeiou",
      "lockInfo" : {
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "lockedBy" : "",
        "dateExpires" : "2000-01-23T04:56:07.000+0000",
        "action" : "aeiou"
      },
      "filename" : "aeiou",
      "createdBy" : "",
      "contentUri" : "aeiou",
      "name" : "aeiou",
      "contentLength" : 123456789,
      "attributes" : [ {
        "values" : [ "aeiou" ],
        "attribute" : {
          "dateCreated" : "2000-01-23T04:56:07.000+0000",
          "createdBy" : "",
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "description" : "aeiou",
          "modifiedBy" : "",
          "dateModified" : "2000-01-23T04:56:07.000+0000",
          "id" : "aeiou",
          "version" : 123
        }
      } ],
      "thumbnails" : [ {
        "imageUri" : "aeiou",
        "resolution" : "aeiou"
      } ],
      "sharingUri" : "aeiou",
      "uploadDestinationUri" : "aeiou"
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "expiration" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "userId" : "aeiou",
    "statusCode" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)

     - returns: RequestBuilder<ININCommandStatusEntityListing> 
     */
    public class func getContentmanagementStatusWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil) -> RequestBuilder<ININCommandStatusEntityListing> {
        let path = "/api/v2/contentmanagement/status"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCommandStatusEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a status.
     
     - parameter statusId: (path) Status ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementStatusStatusId(statusId statusId: String, completion: ((data: ININCommandStatus?, error: ErrorType?) -> Void)) {
        getContentmanagementStatusStatusIdWithRequestBuilder(statusId: statusId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a status.
     - GET /api/v2/contentmanagement/status/{statusId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "commandType" : "aeiou",
  "document" : {
    "workspace" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "downloadSharingUri" : "aeiou",
    "dateUploaded" : "2000-01-23T04:56:07.000+0000",
    "uploadStatus" : "",
    "acl" : [ "aeiou" ],
    "uploadMethod" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "systemType" : "aeiou",
    "changeNumber" : 123,
    "id" : "aeiou",
    "tagValues" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "inUse" : true,
      "id" : "aeiou",
      "acl" : [ "aeiou" ]
    } ],
    "uploadedBy" : "",
    "contentType" : "aeiou",
    "callerAddress" : "aeiou",
    "pageCount" : 123456789,
    "read" : true,
    "sharingStatus" : "aeiou",
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "tags" : [ "aeiou" ],
    "receiverAddress" : "aeiou",
    "lockInfo" : {
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "lockedBy" : "",
      "dateExpires" : "2000-01-23T04:56:07.000+0000",
      "action" : "aeiou"
    },
    "filename" : "aeiou",
    "createdBy" : "",
    "contentUri" : "aeiou",
    "name" : "aeiou",
    "contentLength" : 123456789,
    "attributes" : [ {
      "values" : [ "aeiou" ],
      "attribute" : {
        "dateCreated" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "",
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "description" : "aeiou",
        "modifiedBy" : "",
        "dateModified" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "version" : 123
      }
    } ],
    "thumbnails" : [ {
      "imageUri" : "aeiou",
      "resolution" : "aeiou"
    } ],
    "sharingUri" : "aeiou",
    "uploadDestinationUri" : "aeiou"
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "expiration" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "userId" : "aeiou",
  "statusCode" : "aeiou"
}}]
     
     - parameter statusId: (path) Status ID 

     - returns: RequestBuilder<ININCommandStatus> 
     */
    public class func getContentmanagementStatusStatusIdWithRequestBuilder(statusId statusId: String) -> RequestBuilder<ININCommandStatus> {
        var path = "/api/v2/contentmanagement/status/{statusId}"
        path = path.stringByReplacingOccurrencesOfString("{statusId}", withString: "\(statusId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCommandStatus>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get usage details.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementUsage(completion: ((data: ININUsage?, error: ErrorType?) -> Void)) {
        getContentmanagementUsageWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get usage details.
     - GET /api/v2/contentmanagement/usage
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "types" : [ {
    "totalDocumentCount" : 123456789,
    "totalDocumentByteCount" : 123456789,
    "type" : "aeiou"
  } ]
}}]

     - returns: RequestBuilder<ININUsage> 
     */
    public class func getContentmanagementUsageWithRequestBuilder() -> RequestBuilder<ININUsage> {
        let path = "/api/v2/contentmanagement/usage"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININUsage>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter access
    */
    public enum ININAccess_getContentmanagementWorkspaces: String { 
        case Content = "content"
        case Admin = "admin"
        case DocumentCreate = "document:create"
        case DocumentViewcontent = "document:viewContent"
        case DocumentViewmetadata = "document:viewMetadata"
        case DocumentDownload = "document:download"
        case DocumentDelete = "document:delete"
        case DocumentUpdate = "document:update"
        case DocumentShare = "document:share"
        case DocumentShareview = "document:shareView"
        case DocumentEmail = "document:email"
        case DocumentPrint = "document:print"
        case DocumentAuditview = "document:auditView"
        case DocumentReplace = "document:replace"
        case DocumentTag = "document:tag"
        case TagCreate = "tag:create"
        case TagView = "tag:view"
        case TagUpdate = "tag:update"
        case TagApply = "tag:apply"
        case TagRemove = "tag:remove"
        case TagDelete = "tag:delete"
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementWorkspaces: String { 
        case Summary = "summary"
        case Acl = "acl"
    }

    /**
     Get a list of workspaces.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter access: (query) Requested access level (optional, default to document:viewmetadata)
     - parameter expand: (query) Expand some workspace fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementWorkspaces(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, access: ININAccess_getContentmanagementWorkspaces? = nil, expand: ININExpand_getContentmanagementWorkspaces? = nil, completion: ((data: ININWorkspaceEntityListing?, error: ErrorType?) -> Void)) {
        getContentmanagementWorkspacesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, access: access, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of workspaces.
     - GET /api/v2/contentmanagement/workspaces
     - Specifying 'content' access will return all workspaces the user has document access to, while 'admin' access will return all group workspaces the user has administrative rights to.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "bucket" : "aeiou",
    "summary" : {
      "totalDocumentCount" : 123456789,
      "totalDocumentByteCount" : 123456789
    },
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "isCurrentUserWorkspace" : true,
    "acl" : [ "aeiou" ],
    "type" : "aeiou",
    "user" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter access: (query) Requested access level (optional, default to document:viewmetadata)
     - parameter expand: (query) Expand some workspace fields (optional)

     - returns: RequestBuilder<ININWorkspaceEntityListing> 
     */
    public class func getContentmanagementWorkspacesWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, access: ININAccess_getContentmanagementWorkspaces? = nil, expand: ININExpand_getContentmanagementWorkspaces? = nil) -> RequestBuilder<ININWorkspaceEntityListing> {
        let path = "/api/v2/contentmanagement/workspaces"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "access": access?.rawValue,
            "expand": expand?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININWorkspaceEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementWorkspacesWorkspaceId: String { 
        case Summary = "summary"
        case Acl = "acl"
    }

    /**
     Get a workspace.
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter expand: (query) Expand some workspace fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementWorkspacesWorkspaceId(workspaceId workspaceId: String, expand: ININExpand_getContentmanagementWorkspacesWorkspaceId? = nil, completion: ((data: ININWorkspace?, error: ErrorType?) -> Void)) {
        getContentmanagementWorkspacesWorkspaceIdWithRequestBuilder(workspaceId: workspaceId, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a workspace.
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "bucket" : "aeiou",
  "summary" : {
    "totalDocumentCount" : 123456789,
    "totalDocumentByteCount" : 123456789
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "isCurrentUserWorkspace" : true,
  "acl" : [ "aeiou" ],
  "type" : "aeiou",
  "user" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  }
}}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter expand: (query) Expand some workspace fields (optional)

     - returns: RequestBuilder<ININWorkspace> 
     */
    public class func getContentmanagementWorkspacesWorkspaceIdWithRequestBuilder(workspaceId workspaceId: String, expand: ININExpand_getContentmanagementWorkspacesWorkspaceId? = nil) -> RequestBuilder<ININWorkspace> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "expand": expand?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININWorkspace>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementWorkspacesWorkspaceIdMembers: String { 
        case Member = "member"
    }

    /**
     Get a list workspace members
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter expand: (query) Expand workspace member fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementWorkspacesWorkspaceIdMembers(workspaceId workspaceId: String, pageSize: Int32? = nil, pageNumber: Int32? = nil, expand: ININExpand_getContentmanagementWorkspacesWorkspaceIdMembers? = nil, completion: ((data: ININWorkspaceMemberEntityListing?, error: ErrorType?) -> Void)) {
        getContentmanagementWorkspacesWorkspaceIdMembersWithRequestBuilder(workspaceId: workspaceId, pageSize: pageSize, pageNumber: pageNumber, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list workspace members
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}/members
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "workspace" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "securityProfile" : {
      "permissions" : [ "aeiou" ],
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "member" : "",
    "id" : "aeiou",
    "memberType" : "aeiou",
    "user" : {
      "addresses" : [ "" ],
      "images" : [ {
        "imageUri" : "aeiou",
        "resolution" : "aeiou"
      } ],
      "selfUri" : "aeiou",
      "conversationSummary" : {
        "call" : {
          "enterprise" : "",
          "contactCenter" : {
            "acw" : 123,
            "active" : 123
          }
        },
        "socialExpression" : "",
        "chat" : "",
        "callback" : "",
        "video" : "",
        "userId" : "aeiou",
        "email" : ""
      },
      "primaryContactInfo" : [ {
        "address" : "aeiou",
        "display" : "aeiou",
        "mediaType" : "aeiou",
        "type" : "aeiou"
      } ],
      "routingStatus" : {
        "startTime" : "2000-01-23T04:56:07.000+0000",
        "userId" : "aeiou",
        "status" : "aeiou"
      },
      "title" : "aeiou",
      "version" : 123,
      "outOfOffice" : {
        "endDate" : "2000-01-23T04:56:07.000+0000",
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "active" : true,
        "id" : "aeiou",
        "user" : "",
        "startDate" : "2000-01-23T04:56:07.000+0000"
      },
      "authorization" : {
        "permissions" : [ "aeiou" ],
        "permissionPolicies" : [ {
          "policyDescription" : "aeiou",
          "resourceConditionNode" : {
            "operands" : [ {
              "type" : "aeiou",
              "value" : "aeiou"
            } ],
            "variableName" : "aeiou",
            "conjunction" : "aeiou",
            "terms" : [ "" ],
            "operator" : "aeiou"
          },
          "actionSetKey" : "aeiou",
          "namedResources" : [ "aeiou" ],
          "policyName" : "aeiou",
          "entityName" : "aeiou",
          "domain" : "aeiou",
          "id" : "aeiou",
          "resourceCondition" : "aeiou",
          "actionSet" : [ "aeiou" ]
        } ],
        "roles" : [ {
          "name" : "aeiou",
          "id" : "aeiou"
        } ]
      },
      "chat" : {
        "jabberId" : "aeiou"
      },
      "name" : "aeiou",
      "station" : {
        "defaultStation" : "",
        "lastAssociatedStation" : "",
        "associatedStation" : {
          "associatedDate" : "2000-01-23T04:56:07.000+0000",
          "defaultUser" : "",
          "id" : "aeiou",
          "associatedUser" : "",
          "providerInfo" : {
            "key" : "aeiou"
          }
        },
        "effectiveStation" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "department" : "aeiou",
      "presence" : {
        "presenceDefinition" : {
          "createdDate" : "2000-01-23T04:56:07.000+0000",
          "createdBy" : "",
          "languageLabels" : {
            "key" : "aeiou"
          },
          "systemPresence" : "aeiou",
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "modifiedDate" : "2000-01-23T04:56:07.000+0000",
          "modifiedBy" : "",
          "id" : "aeiou",
          "deactivated" : true,
          "primary" : true
        },
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "modifiedDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "source" : "aeiou",
        "message" : "aeiou",
        "primary" : true
      },
      "email" : "aeiou",
      "username" : "aeiou",
      "geolocation" : {
        "country" : "aeiou",
        "city" : "aeiou",
        "latitude" : 1.3579000000000001069366817318950779736042022705078125,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou",
        "type" : "aeiou",
        "region" : "aeiou",
        "primary" : true,
        "longitude" : 1.3579000000000001069366817318950779736042022705078125
      }
    },
    "group" : {
      "images" : [ "" ],
      "addresses" : [ "" ],
      "visibility" : "aeiou",
      "memberCount" : 123456789,
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "type" : "aeiou",
      "version" : 123,
      "rulesVisible" : true,
      "name" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou"
    }
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter expand: (query) Expand workspace member fields (optional)

     - returns: RequestBuilder<ININWorkspaceMemberEntityListing> 
     */
    public class func getContentmanagementWorkspacesWorkspaceIdMembersWithRequestBuilder(workspaceId workspaceId: String, pageSize: Int32? = nil, pageNumber: Int32? = nil, expand: ININExpand_getContentmanagementWorkspacesWorkspaceIdMembers? = nil) -> RequestBuilder<ININWorkspaceMemberEntityListing> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/members"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "expand": expand?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININWorkspaceMemberEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementWorkspacesWorkspaceIdMembersMemberId: String { 
        case Member = "member"
    }

    /**
     Get a workspace member
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 
     - parameter expand: (query) Expand workspace member fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementWorkspacesWorkspaceIdMembersMemberId(workspaceId workspaceId: String, memberId: String, expand: ININExpand_getContentmanagementWorkspacesWorkspaceIdMembersMemberId? = nil, completion: ((data: ININWorkspaceMember?, error: ErrorType?) -> Void)) {
        getContentmanagementWorkspacesWorkspaceIdMembersMemberIdWithRequestBuilder(workspaceId: workspaceId, memberId: memberId, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a workspace member
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "securityProfile" : {
    "permissions" : [ "aeiou" ],
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "member" : "",
  "id" : "aeiou",
  "memberType" : "aeiou",
  "user" : {
    "addresses" : [ "" ],
    "images" : [ {
      "imageUri" : "aeiou",
      "resolution" : "aeiou"
    } ],
    "selfUri" : "aeiou",
    "conversationSummary" : {
      "call" : {
        "enterprise" : "",
        "contactCenter" : {
          "acw" : 123,
          "active" : 123
        }
      },
      "socialExpression" : "",
      "chat" : "",
      "callback" : "",
      "video" : "",
      "userId" : "aeiou",
      "email" : ""
    },
    "primaryContactInfo" : [ {
      "address" : "aeiou",
      "display" : "aeiou",
      "mediaType" : "aeiou",
      "type" : "aeiou"
    } ],
    "routingStatus" : {
      "startTime" : "2000-01-23T04:56:07.000+0000",
      "userId" : "aeiou",
      "status" : "aeiou"
    },
    "title" : "aeiou",
    "version" : 123,
    "outOfOffice" : {
      "endDate" : "2000-01-23T04:56:07.000+0000",
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "active" : true,
      "id" : "aeiou",
      "user" : "",
      "startDate" : "2000-01-23T04:56:07.000+0000"
    },
    "authorization" : {
      "permissions" : [ "aeiou" ],
      "permissionPolicies" : [ {
        "policyDescription" : "aeiou",
        "resourceConditionNode" : {
          "operands" : [ {
            "type" : "aeiou",
            "value" : "aeiou"
          } ],
          "variableName" : "aeiou",
          "conjunction" : "aeiou",
          "terms" : [ "" ],
          "operator" : "aeiou"
        },
        "actionSetKey" : "aeiou",
        "namedResources" : [ "aeiou" ],
        "policyName" : "aeiou",
        "entityName" : "aeiou",
        "domain" : "aeiou",
        "id" : "aeiou",
        "resourceCondition" : "aeiou",
        "actionSet" : [ "aeiou" ]
      } ],
      "roles" : [ {
        "name" : "aeiou",
        "id" : "aeiou"
      } ]
    },
    "chat" : {
      "jabberId" : "aeiou"
    },
    "name" : "aeiou",
    "station" : {
      "defaultStation" : "",
      "lastAssociatedStation" : "",
      "associatedStation" : {
        "associatedDate" : "2000-01-23T04:56:07.000+0000",
        "defaultUser" : "",
        "id" : "aeiou",
        "associatedUser" : "",
        "providerInfo" : {
          "key" : "aeiou"
        }
      },
      "effectiveStation" : ""
    },
    "id" : "aeiou",
    "state" : "aeiou",
    "department" : "aeiou",
    "presence" : {
      "presenceDefinition" : {
        "createdDate" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "",
        "languageLabels" : {
          "key" : "aeiou"
        },
        "systemPresence" : "aeiou",
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "modifiedDate" : "2000-01-23T04:56:07.000+0000",
        "modifiedBy" : "",
        "id" : "aeiou",
        "deactivated" : true,
        "primary" : true
      },
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "modifiedDate" : "2000-01-23T04:56:07.000+0000",
      "id" : "aeiou",
      "source" : "aeiou",
      "message" : "aeiou",
      "primary" : true
    },
    "email" : "aeiou",
    "username" : "aeiou",
    "geolocation" : {
      "country" : "aeiou",
      "city" : "aeiou",
      "latitude" : 1.3579000000000001069366817318950779736042022705078125,
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou",
      "type" : "aeiou",
      "region" : "aeiou",
      "primary" : true,
      "longitude" : 1.3579000000000001069366817318950779736042022705078125
    }
  },
  "group" : {
    "images" : [ "" ],
    "addresses" : [ "" ],
    "visibility" : "aeiou",
    "memberCount" : 123456789,
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "type" : "aeiou",
    "version" : 123,
    "rulesVisible" : true,
    "name" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou"
  }
}}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 
     - parameter expand: (query) Expand workspace member fields (optional)

     - returns: RequestBuilder<ININWorkspaceMember> 
     */
    public class func getContentmanagementWorkspacesWorkspaceIdMembersMemberIdWithRequestBuilder(workspaceId workspaceId: String, memberId: String, expand: ININExpand_getContentmanagementWorkspacesWorkspaceIdMembersMemberId? = nil) -> RequestBuilder<ININWorkspaceMember> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{memberId}", withString: "\(memberId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "expand": expand?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININWorkspaceMember>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementWorkspacesWorkspaceIdTagvalues: String { 
        case Acl = "acl"
    }

    /**
     Get a list of workspace tags
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter value: (query) filter the list of tags returned (optional)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter expand: (query) Expand some document fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementWorkspacesWorkspaceIdTagvalues(workspaceId workspaceId: String, value: String? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, expand: ININExpand_getContentmanagementWorkspacesWorkspaceIdTagvalues? = nil, completion: ((data: ININTagValueEntityListing?, error: ErrorType?) -> Void)) {
        getContentmanagementWorkspacesWorkspaceIdTagvaluesWithRequestBuilder(workspaceId: workspaceId, value: value, pageSize: pageSize, pageNumber: pageNumber, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of workspace tags
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "inUse" : true,
    "id" : "aeiou",
    "acl" : [ "aeiou" ]
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter value: (query) filter the list of tags returned (optional)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter expand: (query) Expand some document fields (optional)

     - returns: RequestBuilder<ININTagValueEntityListing> 
     */
    public class func getContentmanagementWorkspacesWorkspaceIdTagvaluesWithRequestBuilder(workspaceId workspaceId: String, value: String? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, expand: ININExpand_getContentmanagementWorkspacesWorkspaceIdTagvalues? = nil) -> RequestBuilder<ININTagValueEntityListing> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "value": value,
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "expand": expand?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTagValueEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_getContentmanagementWorkspacesWorkspaceIdTagvaluesTagId: String { 
        case Acl = "acl"
    }

    /**
     Get a workspace tag
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 
     - parameter expand: (query) Expand some document fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContentmanagementWorkspacesWorkspaceIdTagvaluesTagId(workspaceId workspaceId: String, tagId: String, expand: ININExpand_getContentmanagementWorkspacesWorkspaceIdTagvaluesTagId? = nil, completion: ((data: ININTagValue?, error: ErrorType?) -> Void)) {
        getContentmanagementWorkspacesWorkspaceIdTagvaluesTagIdWithRequestBuilder(workspaceId: workspaceId, tagId: tagId, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a workspace tag
     - GET /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "inUse" : true,
  "id" : "aeiou",
  "acl" : [ "aeiou" ]
}}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 
     - parameter expand: (query) Expand some document fields (optional)

     - returns: RequestBuilder<ININTagValue> 
     */
    public class func getContentmanagementWorkspacesWorkspaceIdTagvaluesTagIdWithRequestBuilder(workspaceId workspaceId: String, tagId: String, expand: ININExpand_getContentmanagementWorkspacesWorkspaceIdTagvaluesTagId? = nil) -> RequestBuilder<ININTagValue> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{tagId}", withString: "\(tagId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "expand": expand?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTagValue>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Query audits
     
     - parameter body: (body) Allows for a filtered query returning facet information 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postContentmanagementAuditquery(body body: ININContentQueryRequest, completion: ((data: ININQueryResults?, error: ErrorType?) -> Void)) {
        postContentmanagementAuditqueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query audits
     - POST /api/v2/contentmanagement/auditquery
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "facetInfo" : {
    "attributes" : [ {
      "name" : "aeiou",
      "count" : 123,
      "id" : "aeiou"
    } ],
    "facets" : [ {
      "other" : 123456789,
      "total" : 123456789,
      "terms" : [ {
        "name" : "aeiou",
        "count" : 123456789,
        "term" : "aeiou",
        "id" : "aeiou",
        "time" : "2000-01-23T04:56:07.000+0000",
        "key" : 123456789
      } ],
      "termCount" : 123,
      "missing" : 123456789,
      "termType" : "aeiou",
      "attribute" : {
        "name" : "aeiou",
        "id" : "aeiou",
        "type" : "aeiou"
      },
      "statistics" : {
        "dateMax" : "2000-01-23T04:56:07.000+0000",
        "stdDeviation" : 1.3579000000000001069366817318950779736042022705078125,
        "dateMin" : "2000-01-23T04:56:07.000+0000",
        "min" : 1.3579000000000001069366817318950779736042022705078125,
        "max" : 1.3579000000000001069366817318950779736042022705078125,
        "mean" : 1.3579000000000001069366817318950779736042022705078125,
        "count" : 123456789
      }
    } ]
  },
  "results" : {
    "total" : 123456789,
    "pageCount" : 123,
    "pageNumber" : 123,
    "entities" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou",
      "body" : {
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou"
      }
    } ],
    "firstUri" : "aeiou",
    "selfUri" : "aeiou",
    "lastUri" : "aeiou",
    "pageSize" : 123,
    "previousUri" : "aeiou",
    "nextUri" : "aeiou"
  }
}}]
     
     - parameter body: (body) Allows for a filtered query returning facet information 

     - returns: RequestBuilder<ININQueryResults> 
     */
    public class func postContentmanagementAuditqueryWithRequestBuilder(body body: ININContentQueryRequest) -> RequestBuilder<ININQueryResults> {
        let path = "/api/v2/contentmanagement/auditquery"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININQueryResults>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add a document.
     
     - parameter body: (body) Document (optional)
     - parameter copySource: (query) Copy a document within a workspace or to a new workspace. Provide a document ID as the copy source. (optional)
     - parameter moveSource: (query) Move a document to a new workspace. Provide a document ID as the move source. (optional)
     - parameter _override: (query) Override any lock on the source document (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postContentmanagementDocuments(body body: ININDocumentUpload? = nil, copySource: String? = nil, moveSource: String? = nil, _override: Bool? = nil, completion: ((data: ININDocument?, error: ErrorType?) -> Void)) {
        postContentmanagementDocumentsWithRequestBuilder(body: body, copySource: copySource, moveSource: moveSource, _override: _override).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Add a document.
     - POST /api/v2/contentmanagement/documents
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "downloadSharingUri" : "aeiou",
  "dateUploaded" : "2000-01-23T04:56:07.000+0000",
  "uploadStatus" : "",
  "acl" : [ "aeiou" ],
  "uploadMethod" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "systemType" : "aeiou",
  "changeNumber" : 123,
  "id" : "aeiou",
  "tagValues" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "inUse" : true,
    "id" : "aeiou",
    "acl" : [ "aeiou" ]
  } ],
  "uploadedBy" : "",
  "contentType" : "aeiou",
  "callerAddress" : "aeiou",
  "pageCount" : 123456789,
  "read" : true,
  "sharingStatus" : "aeiou",
  "selfUri" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "tags" : [ "aeiou" ],
  "receiverAddress" : "aeiou",
  "lockInfo" : {
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "lockedBy" : "",
    "dateExpires" : "2000-01-23T04:56:07.000+0000",
    "action" : "aeiou"
  },
  "filename" : "aeiou",
  "createdBy" : "",
  "contentUri" : "aeiou",
  "name" : "aeiou",
  "contentLength" : 123456789,
  "attributes" : [ {
    "values" : [ "aeiou" ],
    "attribute" : {
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "",
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "description" : "aeiou",
      "modifiedBy" : "",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "id" : "aeiou",
      "version" : 123
    }
  } ],
  "thumbnails" : [ {
    "imageUri" : "aeiou",
    "resolution" : "aeiou"
  } ],
  "sharingUri" : "aeiou",
  "uploadDestinationUri" : "aeiou"
}}]
     
     - parameter body: (body) Document (optional)
     - parameter copySource: (query) Copy a document within a workspace or to a new workspace. Provide a document ID as the copy source. (optional)
     - parameter moveSource: (query) Move a document to a new workspace. Provide a document ID as the move source. (optional)
     - parameter _override: (query) Override any lock on the source document (optional)

     - returns: RequestBuilder<ININDocument> 
     */
    public class func postContentmanagementDocumentsWithRequestBuilder(body body: ININDocumentUpload? = nil, copySource: String? = nil, moveSource: String? = nil, _override: Bool? = nil) -> RequestBuilder<ININDocument> {
        let path = "/api/v2/contentmanagement/documents"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDocument>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_postContentmanagementDocumentsDocumentId: String { 
        case Acl = "acl"
    }

    /**
     Update a document.
     
     - parameter documentId: (path) Document ID 
     - parameter body: (body) Document (optional)
     - parameter expand: (query) Expand some document fields (optional)
     - parameter _override: (query) Override any lock on the document (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postContentmanagementDocumentsDocumentId(documentId documentId: String, body: ININDocumentUpdate? = nil, expand: ININExpand_postContentmanagementDocumentsDocumentId? = nil, _override: Bool? = nil, completion: ((data: ININDocument?, error: ErrorType?) -> Void)) {
        postContentmanagementDocumentsDocumentIdWithRequestBuilder(documentId: documentId, body: body, expand: expand, _override: _override).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a document.
     - POST /api/v2/contentmanagement/documents/{documentId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "downloadSharingUri" : "aeiou",
  "dateUploaded" : "2000-01-23T04:56:07.000+0000",
  "uploadStatus" : "",
  "acl" : [ "aeiou" ],
  "uploadMethod" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "systemType" : "aeiou",
  "changeNumber" : 123,
  "id" : "aeiou",
  "tagValues" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "inUse" : true,
    "id" : "aeiou",
    "acl" : [ "aeiou" ]
  } ],
  "uploadedBy" : "",
  "contentType" : "aeiou",
  "callerAddress" : "aeiou",
  "pageCount" : 123456789,
  "read" : true,
  "sharingStatus" : "aeiou",
  "selfUri" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "tags" : [ "aeiou" ],
  "receiverAddress" : "aeiou",
  "lockInfo" : {
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "lockedBy" : "",
    "dateExpires" : "2000-01-23T04:56:07.000+0000",
    "action" : "aeiou"
  },
  "filename" : "aeiou",
  "createdBy" : "",
  "contentUri" : "aeiou",
  "name" : "aeiou",
  "contentLength" : 123456789,
  "attributes" : [ {
    "values" : [ "aeiou" ],
    "attribute" : {
      "dateCreated" : "2000-01-23T04:56:07.000+0000",
      "createdBy" : "",
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "description" : "aeiou",
      "modifiedBy" : "",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "id" : "aeiou",
      "version" : 123
    }
  } ],
  "thumbnails" : [ {
    "imageUri" : "aeiou",
    "resolution" : "aeiou"
  } ],
  "sharingUri" : "aeiou",
  "uploadDestinationUri" : "aeiou"
}}]
     
     - parameter documentId: (path) Document ID 
     - parameter body: (body) Document (optional)
     - parameter expand: (query) Expand some document fields (optional)
     - parameter _override: (query) Override any lock on the document (optional)

     - returns: RequestBuilder<ININDocument> 
     */
    public class func postContentmanagementDocumentsDocumentIdWithRequestBuilder(documentId documentId: String, body: ININDocumentUpdate? = nil, expand: ININExpand_postContentmanagementDocumentsDocumentId? = nil, _override: Bool? = nil) -> RequestBuilder<ININDocument> {
        var path = "/api/v2/contentmanagement/documents/{documentId}"
        path = path.stringByReplacingOccurrencesOfString("{documentId}", withString: "\(documentId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDocument>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replace the contents of a document.
     
     - parameter documentId: (path) Document ID 
     - parameter body: (body) Replace Request (optional)
     - parameter _override: (query) Override any lock on the document (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postContentmanagementDocumentsDocumentIdContent(documentId documentId: String, body: ININReplaceRequest? = nil, _override: Bool? = nil, completion: ((data: ININReplaceResponse?, error: ErrorType?) -> Void)) {
        postContentmanagementDocumentsDocumentIdContentWithRequestBuilder(documentId: documentId, body: body, _override: _override).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replace the contents of a document.
     - POST /api/v2/contentmanagement/documents/{documentId}/content
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "uploadMethod" : "aeiou",
  "name" : "aeiou",
  "uploadStatus" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "changeNumber" : 123,
  "id" : "aeiou",
  "uploadDestinationUri" : "aeiou"
}}]
     
     - parameter documentId: (path) Document ID 
     - parameter body: (body) Replace Request (optional)
     - parameter _override: (query) Override any lock on the document (optional)

     - returns: RequestBuilder<ININReplaceResponse> 
     */
    public class func postContentmanagementDocumentsDocumentIdContentWithRequestBuilder(documentId documentId: String, body: ININReplaceRequest? = nil, _override: Bool? = nil) -> RequestBuilder<ININReplaceResponse> {
        var path = "/api/v2/contentmanagement/documents/{documentId}/content"
        path = path.stringByReplacingOccurrencesOfString("{documentId}", withString: "\(documentId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININReplaceResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_postContentmanagementQuery: String { 
        case Acl = "acl"
        case Workspace = "workspace"
    }

    /**
     Query content
     
     - parameter body: (body) Allows for a filtered query returning facet information 
     - parameter expand: (query) Expand some document fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postContentmanagementQuery(body body: ININQueryRequest, expand: ININExpand_postContentmanagementQuery? = nil, completion: ((data: ININQueryResults?, error: ErrorType?) -> Void)) {
        postContentmanagementQueryWithRequestBuilder(body: body, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query content
     - POST /api/v2/contentmanagement/query
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "facetInfo" : {
    "attributes" : [ {
      "name" : "aeiou",
      "count" : 123,
      "id" : "aeiou"
    } ],
    "facets" : [ {
      "other" : 123456789,
      "total" : 123456789,
      "terms" : [ {
        "name" : "aeiou",
        "count" : 123456789,
        "term" : "aeiou",
        "id" : "aeiou",
        "time" : "2000-01-23T04:56:07.000+0000",
        "key" : 123456789
      } ],
      "termCount" : 123,
      "missing" : 123456789,
      "termType" : "aeiou",
      "attribute" : {
        "name" : "aeiou",
        "id" : "aeiou",
        "type" : "aeiou"
      },
      "statistics" : {
        "dateMax" : "2000-01-23T04:56:07.000+0000",
        "stdDeviation" : 1.3579000000000001069366817318950779736042022705078125,
        "dateMin" : "2000-01-23T04:56:07.000+0000",
        "min" : 1.3579000000000001069366817318950779736042022705078125,
        "max" : 1.3579000000000001069366817318950779736042022705078125,
        "mean" : 1.3579000000000001069366817318950779736042022705078125,
        "count" : 123456789
      }
    } ]
  },
  "results" : {
    "total" : 123456789,
    "pageCount" : 123,
    "pageNumber" : 123,
    "entities" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou",
      "body" : {
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou"
      }
    } ],
    "firstUri" : "aeiou",
    "selfUri" : "aeiou",
    "lastUri" : "aeiou",
    "pageSize" : 123,
    "previousUri" : "aeiou",
    "nextUri" : "aeiou"
  }
}}]
     
     - parameter body: (body) Allows for a filtered query returning facet information 
     - parameter expand: (query) Expand some document fields (optional)

     - returns: RequestBuilder<ININQueryResults> 
     */
    public class func postContentmanagementQueryWithRequestBuilder(body body: ININQueryRequest, expand: ININExpand_postContentmanagementQuery? = nil) -> RequestBuilder<ININQueryResults> {
        let path = "/api/v2/contentmanagement/query"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININQueryResults>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a new share or updates an existing share if the entity has already been shared
     
     - parameter body: (body) CreateShareRequest - entity id and type and a single member or list of members are required (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postContentmanagementShares(body body: ININCreateShareRequest? = nil, completion: ((data: ININCreateShareResponse?, error: ErrorType?) -> Void)) {
        postContentmanagementSharesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a new share or updates an existing share if the entity has already been shared
     - POST /api/v2/contentmanagement/shares
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "workspace" : "",
  "sharedEntity" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "sharedEntityType" : "aeiou",
  "sharedBy" : "",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "member" : "",
  "id" : "aeiou",
  "memberType" : "aeiou",
  "failed" : [ "" ],
  "succeeded" : [ {
    "workspace" : "",
    "sharedEntity" : "",
    "sharedEntityType" : "aeiou",
    "sharedBy" : "",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "member" : "",
    "id" : "aeiou",
    "memberType" : "aeiou",
    "user" : {
      "addresses" : [ "" ],
      "images" : [ {
        "imageUri" : "aeiou",
        "resolution" : "aeiou"
      } ],
      "selfUri" : "aeiou",
      "conversationSummary" : {
        "call" : {
          "enterprise" : "",
          "contactCenter" : {
            "acw" : 123,
            "active" : 123
          }
        },
        "socialExpression" : "",
        "chat" : "",
        "callback" : "",
        "video" : "",
        "userId" : "aeiou",
        "email" : ""
      },
      "primaryContactInfo" : [ {
        "address" : "aeiou",
        "display" : "aeiou",
        "mediaType" : "aeiou",
        "type" : "aeiou"
      } ],
      "routingStatus" : {
        "startTime" : "2000-01-23T04:56:07.000+0000",
        "userId" : "aeiou",
        "status" : "aeiou"
      },
      "title" : "aeiou",
      "version" : 123,
      "outOfOffice" : {
        "endDate" : "2000-01-23T04:56:07.000+0000",
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "active" : true,
        "id" : "aeiou",
        "user" : "",
        "startDate" : "2000-01-23T04:56:07.000+0000"
      },
      "authorization" : {
        "permissions" : [ "aeiou" ],
        "permissionPolicies" : [ {
          "policyDescription" : "aeiou",
          "resourceConditionNode" : {
            "operands" : [ {
              "type" : "aeiou",
              "value" : "aeiou"
            } ],
            "variableName" : "aeiou",
            "conjunction" : "aeiou",
            "terms" : [ "" ],
            "operator" : "aeiou"
          },
          "actionSetKey" : "aeiou",
          "namedResources" : [ "aeiou" ],
          "policyName" : "aeiou",
          "entityName" : "aeiou",
          "domain" : "aeiou",
          "id" : "aeiou",
          "resourceCondition" : "aeiou",
          "actionSet" : [ "aeiou" ]
        } ],
        "roles" : [ {
          "name" : "aeiou",
          "id" : "aeiou"
        } ]
      },
      "chat" : {
        "jabberId" : "aeiou"
      },
      "name" : "aeiou",
      "station" : {
        "defaultStation" : "",
        "lastAssociatedStation" : "",
        "associatedStation" : {
          "associatedDate" : "2000-01-23T04:56:07.000+0000",
          "defaultUser" : "",
          "id" : "aeiou",
          "associatedUser" : "",
          "providerInfo" : {
            "key" : "aeiou"
          }
        },
        "effectiveStation" : ""
      },
      "id" : "aeiou",
      "state" : "aeiou",
      "department" : "aeiou",
      "presence" : {
        "presenceDefinition" : {
          "createdDate" : "2000-01-23T04:56:07.000+0000",
          "createdBy" : "",
          "languageLabels" : {
            "key" : "aeiou"
          },
          "systemPresence" : "aeiou",
          "selfUri" : "aeiou",
          "name" : "aeiou",
          "modifiedDate" : "2000-01-23T04:56:07.000+0000",
          "modifiedBy" : "",
          "id" : "aeiou",
          "deactivated" : true,
          "primary" : true
        },
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "modifiedDate" : "2000-01-23T04:56:07.000+0000",
        "id" : "aeiou",
        "source" : "aeiou",
        "message" : "aeiou",
        "primary" : true
      },
      "email" : "aeiou",
      "username" : "aeiou",
      "geolocation" : {
        "country" : "aeiou",
        "city" : "aeiou",
        "latitude" : 1.3579000000000001069366817318950779736042022705078125,
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou",
        "type" : "aeiou",
        "region" : "aeiou",
        "primary" : true,
        "longitude" : 1.3579000000000001069366817318950779736042022705078125
      }
    },
    "group" : {
      "images" : [ "" ],
      "addresses" : [ "" ],
      "visibility" : "aeiou",
      "memberCount" : 123456789,
      "selfUri" : "aeiou",
      "description" : "aeiou",
      "dateModified" : "2000-01-23T04:56:07.000+0000",
      "type" : "aeiou",
      "version" : 123,
      "rulesVisible" : true,
      "name" : "aeiou",
      "id" : "aeiou",
      "state" : "aeiou"
    }
  } ]
}}]
     
     - parameter body: (body) CreateShareRequest - entity id and type and a single member or list of members are required (optional)

     - returns: RequestBuilder<ININCreateShareResponse> 
     */
    public class func postContentmanagementSharesWithRequestBuilder(body body: ININCreateShareRequest? = nil) -> RequestBuilder<ININCreateShareResponse> {
        let path = "/api/v2/contentmanagement/shares"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCreateShareResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a group workspace
     
     - parameter body: (body) Workspace (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postContentmanagementWorkspaces(body body: ININWorkspaceCreate? = nil, completion: ((data: ININWorkspace?, error: ErrorType?) -> Void)) {
        postContentmanagementWorkspacesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a group workspace
     - POST /api/v2/contentmanagement/workspaces
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "bucket" : "aeiou",
  "summary" : {
    "totalDocumentCount" : 123456789,
    "totalDocumentByteCount" : 123456789
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "isCurrentUserWorkspace" : true,
  "acl" : [ "aeiou" ],
  "type" : "aeiou",
  "user" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  }
}}]
     
     - parameter body: (body) Workspace (optional)

     - returns: RequestBuilder<ININWorkspace> 
     */
    public class func postContentmanagementWorkspacesWithRequestBuilder(body body: ININWorkspaceCreate? = nil) -> RequestBuilder<ININWorkspace> {
        let path = "/api/v2/contentmanagement/workspaces"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININWorkspace>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a workspace tag
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) tag (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postContentmanagementWorkspacesWorkspaceIdTagvalues(workspaceId workspaceId: String, body: ININTagValue? = nil, completion: ((data: ININTagValue?, error: ErrorType?) -> Void)) {
        postContentmanagementWorkspacesWorkspaceIdTagvaluesWithRequestBuilder(workspaceId: workspaceId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a workspace tag
     - POST /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "inUse" : true,
  "id" : "aeiou",
  "acl" : [ "aeiou" ]
}}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) tag (optional)

     - returns: RequestBuilder<ININTagValue> 
     */
    public class func postContentmanagementWorkspacesWorkspaceIdTagvaluesWithRequestBuilder(workspaceId workspaceId: String, body: ININTagValue? = nil) -> RequestBuilder<ININTagValue> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTagValue>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter expand
    */
    public enum ININExpand_postContentmanagementWorkspacesWorkspaceIdTagvaluesQuery: String { 
        case Acl = "acl"
    }

    /**
     Perform a prefix query on tags in the workspace
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) query (optional)
     - parameter expand: (query) Expand some document fields (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postContentmanagementWorkspacesWorkspaceIdTagvaluesQuery(workspaceId workspaceId: String, body: ININTagQueryRequest? = nil, expand: ININExpand_postContentmanagementWorkspacesWorkspaceIdTagvaluesQuery? = nil, completion: ((data: ININTagValueEntityListing?, error: ErrorType?) -> Void)) {
        postContentmanagementWorkspacesWorkspaceIdTagvaluesQueryWithRequestBuilder(workspaceId: workspaceId, body: body, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Perform a prefix query on tags in the workspace
     - POST /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/query
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "inUse" : true,
    "id" : "aeiou",
    "acl" : [ "aeiou" ]
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) query (optional)
     - parameter expand: (query) Expand some document fields (optional)

     - returns: RequestBuilder<ININTagValueEntityListing> 
     */
    public class func postContentmanagementWorkspacesWorkspaceIdTagvaluesQueryWithRequestBuilder(workspaceId workspaceId: String, body: ININTagQueryRequest? = nil, expand: ININExpand_postContentmanagementWorkspacesWorkspaceIdTagvaluesQuery? = nil) -> RequestBuilder<ININTagValueEntityListing> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/query"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTagValueEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Update a workspace
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) Workspace (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putContentmanagementWorkspacesWorkspaceId(workspaceId workspaceId: String, body: ININWorkspace? = nil, completion: ((data: ININWorkspace?, error: ErrorType?) -> Void)) {
        putContentmanagementWorkspacesWorkspaceIdWithRequestBuilder(workspaceId: workspaceId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a workspace
     - PUT /api/v2/contentmanagement/workspaces/{workspaceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "bucket" : "aeiou",
  "summary" : {
    "totalDocumentCount" : 123456789,
    "totalDocumentByteCount" : 123456789
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "isCurrentUserWorkspace" : true,
  "acl" : [ "aeiou" ],
  "type" : "aeiou",
  "user" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  }
}}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter body: (body) Workspace (optional)

     - returns: RequestBuilder<ININWorkspace> 
     */
    public class func putContentmanagementWorkspacesWorkspaceIdWithRequestBuilder(workspaceId workspaceId: String, body: ININWorkspace? = nil) -> RequestBuilder<ININWorkspace> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININWorkspace>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add a member to a workspace
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 
     - parameter body: (body) Workspace (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putContentmanagementWorkspacesWorkspaceIdMembersMemberId(workspaceId workspaceId: String, memberId: String, body: ININWorkspaceMember? = nil, completion: ((data: ININWorkspaceMember?, error: ErrorType?) -> Void)) {
        putContentmanagementWorkspacesWorkspaceIdMembersMemberIdWithRequestBuilder(workspaceId: workspaceId, memberId: memberId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Add a member to a workspace
     - PUT /api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "workspace" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "securityProfile" : {
    "permissions" : [ "aeiou" ],
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "member" : "",
  "id" : "aeiou",
  "memberType" : "aeiou",
  "user" : {
    "addresses" : [ "" ],
    "images" : [ {
      "imageUri" : "aeiou",
      "resolution" : "aeiou"
    } ],
    "selfUri" : "aeiou",
    "conversationSummary" : {
      "call" : {
        "enterprise" : "",
        "contactCenter" : {
          "acw" : 123,
          "active" : 123
        }
      },
      "socialExpression" : "",
      "chat" : "",
      "callback" : "",
      "video" : "",
      "userId" : "aeiou",
      "email" : ""
    },
    "primaryContactInfo" : [ {
      "address" : "aeiou",
      "display" : "aeiou",
      "mediaType" : "aeiou",
      "type" : "aeiou"
    } ],
    "routingStatus" : {
      "startTime" : "2000-01-23T04:56:07.000+0000",
      "userId" : "aeiou",
      "status" : "aeiou"
    },
    "title" : "aeiou",
    "version" : 123,
    "outOfOffice" : {
      "endDate" : "2000-01-23T04:56:07.000+0000",
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "active" : true,
      "id" : "aeiou",
      "user" : "",
      "startDate" : "2000-01-23T04:56:07.000+0000"
    },
    "authorization" : {
      "permissions" : [ "aeiou" ],
      "permissionPolicies" : [ {
        "policyDescription" : "aeiou",
        "resourceConditionNode" : {
          "operands" : [ {
            "type" : "aeiou",
            "value" : "aeiou"
          } ],
          "variableName" : "aeiou",
          "conjunction" : "aeiou",
          "terms" : [ "" ],
          "operator" : "aeiou"
        },
        "actionSetKey" : "aeiou",
        "namedResources" : [ "aeiou" ],
        "policyName" : "aeiou",
        "entityName" : "aeiou",
        "domain" : "aeiou",
        "id" : "aeiou",
        "resourceCondition" : "aeiou",
        "actionSet" : [ "aeiou" ]
      } ],
      "roles" : [ {
        "name" : "aeiou",
        "id" : "aeiou"
      } ]
    },
    "chat" : {
      "jabberId" : "aeiou"
    },
    "name" : "aeiou",
    "station" : {
      "defaultStation" : "",
      "lastAssociatedStation" : "",
      "associatedStation" : {
        "associatedDate" : "2000-01-23T04:56:07.000+0000",
        "defaultUser" : "",
        "id" : "aeiou",
        "associatedUser" : "",
        "providerInfo" : {
          "key" : "aeiou"
        }
      },
      "effectiveStation" : ""
    },
    "id" : "aeiou",
    "state" : "aeiou",
    "department" : "aeiou",
    "presence" : {
      "presenceDefinition" : {
        "createdDate" : "2000-01-23T04:56:07.000+0000",
        "createdBy" : "",
        "languageLabels" : {
          "key" : "aeiou"
        },
        "systemPresence" : "aeiou",
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "modifiedDate" : "2000-01-23T04:56:07.000+0000",
        "modifiedBy" : "",
        "id" : "aeiou",
        "deactivated" : true,
        "primary" : true
      },
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "modifiedDate" : "2000-01-23T04:56:07.000+0000",
      "id" : "aeiou",
      "source" : "aeiou",
      "message" : "aeiou",
      "primary" : true
    },
    "email" : "aeiou",
    "username" : "aeiou",
    "geolocation" : {
      "country" : "aeiou",
      "city" : "aeiou",
      "latitude" : 1.3579000000000001069366817318950779736042022705078125,
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou",
      "type" : "aeiou",
      "region" : "aeiou",
      "primary" : true,
      "longitude" : 1.3579000000000001069366817318950779736042022705078125
    }
  },
  "group" : {
    "images" : [ "" ],
    "addresses" : [ "" ],
    "visibility" : "aeiou",
    "memberCount" : 123456789,
    "selfUri" : "aeiou",
    "description" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "type" : "aeiou",
    "version" : 123,
    "rulesVisible" : true,
    "name" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou"
  }
}}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter memberId: (path) Member ID 
     - parameter body: (body) Workspace (optional)

     - returns: RequestBuilder<ININWorkspaceMember> 
     */
    public class func putContentmanagementWorkspacesWorkspaceIdMembersMemberIdWithRequestBuilder(workspaceId workspaceId: String, memberId: String, body: ININWorkspaceMember? = nil) -> RequestBuilder<ININWorkspaceMember> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/members/{memberId}"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{memberId}", withString: "\(memberId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININWorkspaceMember>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a workspace tag. Will update all documents with the new tag value.
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 
     - parameter body: (body) Workspace (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putContentmanagementWorkspacesWorkspaceIdTagvaluesTagId(workspaceId workspaceId: String, tagId: String, body: ININTagValue? = nil, completion: ((data: ININTagValue?, error: ErrorType?) -> Void)) {
        putContentmanagementWorkspacesWorkspaceIdTagvaluesTagIdWithRequestBuilder(workspaceId: workspaceId, tagId: tagId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a workspace tag. Will update all documents with the new tag value.
     - PUT /api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "inUse" : true,
  "id" : "aeiou",
  "acl" : [ "aeiou" ]
}}]
     
     - parameter workspaceId: (path) Workspace ID 
     - parameter tagId: (path) Tag ID 
     - parameter body: (body) Workspace (optional)

     - returns: RequestBuilder<ININTagValue> 
     */
    public class func putContentmanagementWorkspacesWorkspaceIdTagvaluesTagIdWithRequestBuilder(workspaceId workspaceId: String, tagId: String, body: ININTagValue? = nil) -> RequestBuilder<ININTagValue> {
        var path = "/api/v2/contentmanagement/workspaces/{workspaceId}/tagvalues/{tagId}"
        path = path.stringByReplacingOccurrencesOfString("{workspaceId}", withString: "\(workspaceId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{tagId}", withString: "\(tagId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTagValue>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
