//
// LocationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class LocationsAPI: APIBase {
    /**

    enum for parameter sortOrder
    */
    public enum ININSortOrder_getLocations: String { 
        case Asc = "asc"
        case Desc = "desc"
    }

    /**
     Get a list of all locations.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getLocations(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortOrder: ININSortOrder_getLocations? = nil, completion: ((data: [ININLocation]?, error: ErrorType?) -> Void)) {
        getLocationsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of all locations.
     - GET /api/v2/locations
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example=[ {
  "address" : {
    "zipcode" : "aeiou",
    "country" : "aeiou",
    "city" : "aeiou",
    "street1" : "aeiou",
    "countryName" : "aeiou",
    "state" : "aeiou",
    "street2" : "aeiou"
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "addressVerified" : true,
  "emergencyNumber" : {
    "number" : "aeiou",
    "e164" : "aeiou",
    "type" : "aeiou"
  },
  "version" : 123
} ]}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortOrder: (query) Sort order (optional)

     - returns: RequestBuilder<[ININLocation]> 
     */
    public class func getLocationsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, sortOrder: ININSortOrder_getLocations? = nil) -> RequestBuilder<[ININLocation]> {
        let path = "/api/v2/locations"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "sortOrder": sortOrder?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ININLocation]>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get Location by ID.
     
     - parameter locationId: (path) Location ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getLocationsLocationId(locationId locationId: String, completion: ((data: ININLocation?, error: ErrorType?) -> Void)) {
        getLocationsLocationIdWithRequestBuilder(locationId: locationId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get Location by ID.
     - GET /api/v2/locations/{locationId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "address" : {
    "zipcode" : "aeiou",
    "country" : "aeiou",
    "city" : "aeiou",
    "street1" : "aeiou",
    "countryName" : "aeiou",
    "state" : "aeiou",
    "street2" : "aeiou"
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "id" : "aeiou",
  "state" : "aeiou",
  "addressVerified" : true,
  "emergencyNumber" : {
    "number" : "aeiou",
    "e164" : "aeiou",
    "type" : "aeiou"
  },
  "version" : 123
}}]
     
     - parameter locationId: (path) Location ID 

     - returns: RequestBuilder<ININLocation> 
     */
    public class func getLocationsLocationIdWithRequestBuilder(locationId locationId: String) -> RequestBuilder<ININLocation> {
        var path = "/api/v2/locations/{locationId}"
        path = path.stringByReplacingOccurrencesOfString("{locationId}", withString: "\(locationId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLocation>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Search using q64
     
     - parameter q64: (query)  
     - parameter expand: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getLocationsSearch(q64 q64: String, expand: [String]? = nil, completion: ((data: ININLocationsSearchResponse?, error: ErrorType?) -> Void)) {
        getLocationsSearchWithRequestBuilder(q64: q64, expand: expand).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Search using q64
     - GET /api/v2/locations/search
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "types" : [ "aeiou" ],
  "pageNumber" : 123,
  "previousPage" : "aeiou",
  "nextPage" : "aeiou",
  "pageSize" : 123,
  "currentPage" : "aeiou",
  "results" : [ {
    "address" : {
      "zipcode" : "aeiou",
      "country" : "aeiou",
      "city" : "aeiou",
      "street1" : "aeiou",
      "countryName" : "aeiou",
      "state" : "aeiou",
      "street2" : "aeiou"
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "addressVerified" : true,
    "emergencyNumber" : {
      "number" : "aeiou",
      "e164" : "aeiou",
      "type" : "aeiou"
    },
    "version" : 123
  } ],
  "aggregations" : [ "" ]
}}]
     
     - parameter q64: (query)  
     - parameter expand: (query)  (optional)

     - returns: RequestBuilder<ININLocationsSearchResponse> 
     */
    public class func getLocationsSearchWithRequestBuilder(q64 q64: String, expand: [String]? = nil) -> RequestBuilder<ININLocationsSearchResponse> {
        let path = "/api/v2/locations/search"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "q64": q64,
            "expand": expand
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLocationsSearchResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Search
     
     - parameter body: (body) Search request options (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postLocationsSearch(body body: ININLocationSearchRequest? = nil, completion: ((data: ININLocationsSearchResponse?, error: ErrorType?) -> Void)) {
        postLocationsSearchWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Search
     - POST /api/v2/locations/search
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "types" : [ "aeiou" ],
  "pageNumber" : 123,
  "previousPage" : "aeiou",
  "nextPage" : "aeiou",
  "pageSize" : 123,
  "currentPage" : "aeiou",
  "results" : [ {
    "address" : {
      "zipcode" : "aeiou",
      "country" : "aeiou",
      "city" : "aeiou",
      "street1" : "aeiou",
      "countryName" : "aeiou",
      "state" : "aeiou",
      "street2" : "aeiou"
    },
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "addressVerified" : true,
    "emergencyNumber" : {
      "number" : "aeiou",
      "e164" : "aeiou",
      "type" : "aeiou"
    },
    "version" : 123
  } ],
  "aggregations" : [ "" ]
}}]
     
     - parameter body: (body) Search request options (optional)

     - returns: RequestBuilder<ININLocationsSearchResponse> 
     */
    public class func postLocationsSearchWithRequestBuilder(body body: ININLocationSearchRequest? = nil) -> RequestBuilder<ININLocationsSearchResponse> {
        let path = "/api/v2/locations/search"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININLocationsSearchResponse>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
