//
// ININReservation.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININReservation: JSONEncodable {
    public enum ININPhoneNumberType: String { 
        case TollFree = "TOLL_FREE"
        case CnDomestic = "CN_DOMESTIC"
        case UsDomestic = "US_DOMESTIC"
        case UsTollfree = "US_TOLLFREE"
        case XaTollfree = "XA_TOLLFREE"
        case XbTollfree = "XB_TOLLFREE"
        case XcTollfree = "XC_TOLLFREE"
        case AgDid = "AG_DID"
        case AiDid = "AI_DID"
        case BbDid = "BB_DID"
        case BmDid = "BM_DID"
        case BsDid = "BS_DID"
        case CaDid = "CA_DID"
        case DmDid = "DM_DID"
        case DoDid = "DO_DID"
        case GdDid = "GD_DID"
        case JmDid = "JM_DID"
        case KnDid = "KN_DID"
        case KyDid = "KY_DID"
        case KzDid = "KZ_DID"
        case LcDid = "LC_DID"
        case MpDid = "MP_DID"
        case MsDid = "MS_DID"
        case RuDid = "RU_DID"
        case TcDid = "TC_DID"
        case TtDid = "TT_DID"
        case UsDid = "US_DID"
        case VcDid = "VC_DID"
        case VgDid = "VG_DID"
        case AfDid = "AF_DID"
        case ArDid = "AR_DID"
        case AtDid = "AT_DID"
        case AuDid = "AU_DID"
        case BeDid = "BE_DID"
        case BrDid = "BR_DID"
        case ChDid = "CH_DID"
        case ClDid = "CL_DID"
        case CnDid = "CN_DID"
        case CoDid = "CO_DID"
        case CuDid = "CU_DID"
        case DeDid = "DE_DID"
        case DkDid = "DK_DID"
        case EgDid = "EG_DID"
        case EsDid = "ES_DID"
        case FrDid = "FR_DID"
        case GbDid = "GB_DID"
        case GrDid = "GR_DID"
        case HuDid = "HU_DID"
        case IdDid = "ID_DID"
        case InDid = "IN_DID"
        case IrDid = "IR_DID"
        case ItDid = "IT_DID"
        case JpDid = "JP_DID"
        case KrDid = "KR_DID"
        case LkDid = "LK_DID"
        case MmDid = "MM_DID"
        case MxDid = "MX_DID"
        case MyDid = "MY_DID"
        case NlDid = "NL_DID"
        case NoDid = "NO_DID"
        case NzDid = "NZ_DID"
        case PeDid = "PE_DID"
        case PhDid = "PH_DID"
        case PkDid = "PK_DID"
        case PlDid = "PL_DID"
        case RoDid = "RO_DID"
        case SeDid = "SE_DID"
        case SgDid = "SG_DID"
        case ThDid = "TH_DID"
        case TrDid = "TR_DID"
        case VeDid = "VE_DID"
        case VnDid = "VN_DID"
        case ZaDid = "ZA_DID"
        case AdDid = "AD_DID"
        case AeDid = "AE_DID"
        case AlDid = "AL_DID"
        case AmDid = "AM_DID"
        case AoDid = "AO_DID"
        case AqDid = "AQ_DID"
        case AwDid = "AW_DID"
        case AzDid = "AZ_DID"
        case BaDid = "BA_DID"
        case BdDid = "BD_DID"
        case BfDid = "BF_DID"
        case BgDid = "BG_DID"
        case BhDid = "BH_DID"
        case BiDid = "BI_DID"
        case BjDid = "BJ_DID"
        case BlDid = "BL_DID"
        case BnDid = "BN_DID"
        case BoDid = "BO_DID"
        case BqDid = "BQ_DID"
        case BtDid = "BT_DID"
        case BwDid = "BW_DID"
        case ByDid = "BY_DID"
        case BzDid = "BZ_DID"
        case CdDid = "CD_DID"
        case CfDid = "CF_DID"
        case CgDid = "CG_DID"
        case CiDid = "CI_DID"
        case CkDid = "CK_DID"
        case CmDid = "CM_DID"
        case CrDid = "CR_DID"
        case CvDid = "CV_DID"
        case CyDid = "CY_DID"
        case CzDid = "CZ_DID"
        case DjDid = "DJ_DID"
        case DzDid = "DZ_DID"
        case EcDid = "EC_DID"
        case EeDid = "EE_DID"
        case EhDid = "EH_DID"
        case ErDid = "ER_DID"
        case EtDid = "ET_DID"
        case FiDid = "FI_DID"
        case FjDid = "FJ_DID"
        case FkDid = "FK_DID"
        case FmDid = "FM_DID"
        case FoDid = "FO_DID"
        case GaDid = "GA_DID"
        case GeDid = "GE_DID"
        case GfDid = "GF_DID"
        case GhDid = "GH_DID"
        case GiDid = "GI_DID"
        case GlDid = "GL_DID"
        case GmDid = "GM_DID"
        case GnDid = "GN_DID"
        case GpDid = "GP_DID"
        case GqDid = "GQ_DID"
        case GtDid = "GT_DID"
        case GwDid = "GW_DID"
        case GyDid = "GY_DID"
        case HkDid = "HK_DID"
        case HnDid = "HN_DID"
        case HrDid = "HR_DID"
        case HtDid = "HT_DID"
        case IeDid = "IE_DID"
        case IlDid = "IL_DID"
        case IoDid = "IO_DID"
        case IqDid = "IQ_DID"
        case IsDid = "IS_DID"
        case JoDid = "JO_DID"
        case KeDid = "KE_DID"
        case KgDid = "KG_DID"
        case KhDid = "KH_DID"
        case KiDid = "KI_DID"
        case KmDid = "KM_DID"
        case KpDid = "KP_DID"
        case KwDid = "KW_DID"
        case LaDid = "LA_DID"
        case LbDid = "LB_DID"
        case LiDid = "LI_DID"
        case LrDid = "LR_DID"
        case LsDid = "LS_DID"
        case LtDid = "LT_DID"
        case LuDid = "LU_DID"
        case LvDid = "LV_DID"
        case LyDid = "LY_DID"
        case MaDid = "MA_DID"
        case McDid = "MC_DID"
        case MdDid = "MD_DID"
        case MeDid = "ME_DID"
        case MfDid = "MF_DID"
        case MgDid = "MG_DID"
        case MhDid = "MH_DID"
        case MkDid = "MK_DID"
        case MlDid = "ML_DID"
        case MnDid = "MN_DID"
        case MoDid = "MO_DID"
        case MqDid = "MQ_DID"
        case MrDid = "MR_DID"
        case MtDid = "MT_DID"
        case MuDid = "MU_DID"
        case MvDid = "MV_DID"
        case MwDid = "MW_DID"
        case MzDid = "MZ_DID"
        case NaDid = "NA_DID"
        case NcDid = "NC_DID"
        case NeDid = "NE_DID"
        case NfDid = "NF_DID"
        case NgDid = "NG_DID"
        case NiDid = "NI_DID"
        case NpDid = "NP_DID"
        case NrDid = "NR_DID"
        case NuDid = "NU_DID"
        case OmDid = "OM_DID"
        case PaDid = "PA_DID"
        case PfDid = "PF_DID"
        case PgDid = "PG_DID"
        case PmDid = "PM_DID"
        case PsDid = "PS_DID"
        case PtDid = "PT_DID"
        case PwDid = "PW_DID"
        case PyDid = "PY_DID"
        case QaDid = "QA_DID"
        case ReDid = "RE_DID"
        case RsDid = "RS_DID"
        case RwDid = "RW_DID"
        case SaDid = "SA_DID"
        case SbDid = "SB_DID"
        case ScDid = "SC_DID"
        case SdDid = "SD_DID"
        case Sh247Did = "SH_247_DID"
        case Sh290Did = "SH_290_DID"
        case SiDid = "SI_DID"
        case SkDid = "SK_DID"
        case SlDid = "SL_DID"
        case SmDid = "SM_DID"
        case SnDid = "SN_DID"
        case SoDid = "SO_DID"
        case SrDid = "SR_DID"
        case SsDid = "SS_DID"
        case StDid = "ST_DID"
        case SvDid = "SV_DID"
        case SyDid = "SY_DID"
        case SzDid = "SZ_DID"
        case TdDid = "TD_DID"
        case TgDid = "TG_DID"
        case TjDid = "TJ_DID"
        case TkDid = "TK_DID"
        case TlDid = "TL_DID"
        case TmDid = "TM_DID"
        case TnDid = "TN_DID"
        case ToDid = "TO_DID"
        case TvDid = "TV_DID"
        case TwDid = "TW_DID"
        case TzDid = "TZ_DID"
        case UaDid = "UA_DID"
        case UgDid = "UG_DID"
        case UyDid = "UY_DID"
        case UzDid = "UZ_DID"
        case VuDid = "VU_DID"
        case WfDid = "WF_DID"
        case WsDid = "WS_DID"
        case XgDid = "XG_DID"
        case XnDid = "XN_DID"
        case Xv882Did = "XV_882_DID"
        case Xv883Did = "XV_883_DID"
        case YeDid = "YE_DID"
        case YtDid = "YT_DID"
        case ZmDid = "ZM_DID"
        case ZwDid = "ZW_DID"
        case SxDid = "SX_DID"
    }
    public var id: String?
    public var reservedTn: String?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var reservationExpires: NSDate?
    /** The type of phone number (eg us-domestic, toll-free, etc). */
    public var phoneNumberType: ININPhoneNumberType?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["reservedTn"] = self.reservedTn
        nillableDictionary["reservationExpires"] = self.reservationExpires?.encodeToJSON()
        nillableDictionary["phoneNumberType"] = self.phoneNumberType?.rawValue
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
