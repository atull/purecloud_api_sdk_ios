#import <Foundation/Foundation.h>
#import "SWGGeolocationSettings.h"
#import "SWGErrorBody.h"
#import "SWGGeolocation.h"
#import "SWGApi.h"

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */


@interface SWGGeolocationApi: NSObject <SWGApi>

extern NSString* kSWGGeolocationApiErrorDomain;
extern NSInteger kSWGGeolocationApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Get a organization's GeolocationSettings
/// 
///
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGGeolocationSettings*
-(NSNumber*) getGeolocationsSettingsWithCompletionHandler: 
    (void (^)(SWGGeolocationSettings* output, NSError* error)) handler;


/// Get a user's Geolocation
/// 
///
/// @param userId user Id
/// @param clientId client Id
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGGeolocation*
-(NSNumber*) getUsersUserIdGeolocationsClientIdWithUserId: (NSString*) userId
    clientId: (NSString*) clientId
    completionHandler: (void (^)(SWGGeolocation* output, NSError* error)) handler;


/// Patch a organization's GeolocationSettings
/// 
///
/// @param body Geolocation settings
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGGeolocationSettings*
-(NSNumber*) patchGeolocationsSettingsWithBody: (SWGGeolocationSettings*) body
    completionHandler: (void (^)(SWGGeolocationSettings* output, NSError* error)) handler;


/// Patch a user's Geolocation
/// The geolocation object can be patched one of three ways. Option 1: Set the 'primary' property to true. This will set the client as the user's primary geolocation source.  Option 2: Provide the 'latitude' and 'longitude' values.  This will enqueue an asynchronous update of the 'city', 'region', and 'country', generating a notification. A subsequent GET operation will include the new values for 'city', 'region' and 'country'.  Option 3:  Provide the 'city', 'region', 'country' values.  Option 1 can be combined with Option 2 or Option 3.  For example, update the client as primary and provide latitude and longitude values.
///
/// @param userId user Id
/// @param clientId client Id
/// @param body Geolocation
/// 
///  code:200 message:"successful operation",
///  code:400 message:"The request could not be understood by the server due to malformed syntax.",
///  code:401 message:"No authentication bearer token specified in authorization header.",
///  code:403 message:"You are not authorized to perform the requested action.",
///  code:404 message:"The requested resource was not found.",
///  code:415 message:"Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.",
///  code:429 message:"Too Many Requests",
///  code:500 message:"The server encountered an unexpected condition which prevented it from fulfilling the request.",
///  code:503 message:"Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).",
///  code:504 message:"The request timed out."
///
/// @return SWGGeolocation*
-(NSNumber*) patchUsersUserIdGeolocationsClientIdWithUserId: (NSString*) userId
    clientId: (NSString*) clientId
    body: (SWGGeolocation*) body
    completionHandler: (void (^)(SWGGeolocation* output, NSError* error)) handler;



@end
