//
// OutboundAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class OutboundAPI: APIBase {
    /**
     Delete callable time set
     
     - parameter callableTimeSetId: (path) Callable Time Set ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundCallabletimesetsCallabletimesetId(callableTimeSetId callableTimeSetId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundCallabletimesetsCallabletimesetIdWithRequestBuilder(callableTimeSetId: callableTimeSetId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete callable time set
     - DELETE /api/v2/outbound/callabletimesets/{callableTimeSetId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter callableTimeSetId: (path) Callable Time Set ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundCallabletimesetsCallabletimesetIdWithRequestBuilder(callableTimeSetId callableTimeSetId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/callabletimesets/{callableTimeSetId}"
        path = path.stringByReplacingOccurrencesOfString("{callableTimeSetId}", withString: "\(callableTimeSetId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a dialer call analysis response set.
     
     - parameter callAnalysisSetId: (path) Call Analysis Response Set ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundCallanalysisresponsesetsCallanalysissetId(callAnalysisSetId callAnalysisSetId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundCallanalysisresponsesetsCallanalysissetIdWithRequestBuilder(callAnalysisSetId: callAnalysisSetId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a dialer call analysis response set.
     - DELETE /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter callAnalysisSetId: (path) Call Analysis Response Set ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundCallanalysisresponsesetsCallanalysissetIdWithRequestBuilder(callAnalysisSetId callAnalysisSetId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}"
        path = path.stringByReplacingOccurrencesOfString("{callAnalysisSetId}", withString: "\(callAnalysisSetId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a campaign.
     
     - parameter campaignId: (path) Campaign ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundCampaignsCampaignId(campaignId campaignId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundCampaignsCampaignIdWithRequestBuilder(campaignId: campaignId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a campaign.
     - DELETE /api/v2/outbound/campaigns/{campaignId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter campaignId: (path) Campaign ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundCampaignsCampaignIdWithRequestBuilder(campaignId campaignId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/campaigns/{campaignId}"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Reset campaign progress and recycle the campaign
     
     - parameter campaignId: (path) Campaign ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundCampaignsCampaignIdProgress(campaignId campaignId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundCampaignsCampaignIdProgressWithRequestBuilder(campaignId: campaignId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Reset campaign progress and recycle the campaign
     - DELETE /api/v2/outbound/campaigns/{campaignId}/progress
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter campaignId: (path) Campaign ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundCampaignsCampaignIdProgressWithRequestBuilder(campaignId campaignId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/campaigns/{campaignId}/progress"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a contact list.
     
     - parameter contactListId: (path) ContactList ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundContactlistsContactlistId(contactListId contactListId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundContactlistsContactlistIdWithRequestBuilder(contactListId: contactListId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a contact list.
     - DELETE /api/v2/outbound/contactlists/{contactListId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter contactListId: (path) ContactList ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundContactlistsContactlistIdWithRequestBuilder(contactListId contactListId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/contactlists/{contactListId}"
        path = path.stringByReplacingOccurrencesOfString("{contactListId}", withString: "\(contactListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a contact.
     
     - parameter contactListId: (path) Contact List ID 
     - parameter contactId: (path) Contact ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundContactlistsContactlistIdContactsContactId(contactListId contactListId: String, contactId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundContactlistsContactlistIdContactsContactIdWithRequestBuilder(contactListId: contactListId, contactId: contactId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a contact.
     - DELETE /api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter contactListId: (path) Contact List ID 
     - parameter contactId: (path) Contact ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundContactlistsContactlistIdContactsContactIdWithRequestBuilder(contactListId contactListId: String, contactId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}"
        path = path.stringByReplacingOccurrencesOfString("{contactListId}", withString: "\(contactListId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{contactId}", withString: "\(contactId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete dialer DNC list
     
     - parameter dncListId: (path) DncList ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundDnclistsDnclistId(dncListId dncListId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundDnclistsDnclistIdWithRequestBuilder(dncListId: dncListId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete dialer DNC list
     - DELETE /api/v2/outbound/dnclists/{dncListId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter dncListId: (path) DncList ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundDnclistsDnclistIdWithRequestBuilder(dncListId dncListId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/dnclists/{dncListId}"
        path = path.stringByReplacingOccurrencesOfString("{dncListId}", withString: "\(dncListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a Rule set.
     
     - parameter ruleSetId: (path) Rule Set ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundRulesetsRulesetId(ruleSetId ruleSetId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundRulesetsRulesetIdWithRequestBuilder(ruleSetId: ruleSetId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a Rule set.
     - DELETE /api/v2/outbound/rulesets/{ruleSetId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter ruleSetId: (path) Rule Set ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundRulesetsRulesetIdWithRequestBuilder(ruleSetId ruleSetId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/rulesets/{ruleSetId}"
        path = path.stringByReplacingOccurrencesOfString("{ruleSetId}", withString: "\(ruleSetId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a dialer campaign schedule.
     
     - parameter campaignId: (path) Campaign ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundSchedulesCampaignsCampaignId(campaignId campaignId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundSchedulesCampaignsCampaignIdWithRequestBuilder(campaignId: campaignId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a dialer campaign schedule.
     - DELETE /api/v2/outbound/schedules/campaigns/{campaignId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter campaignId: (path) Campaign ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundSchedulesCampaignsCampaignIdWithRequestBuilder(campaignId campaignId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/schedules/campaigns/{campaignId}"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a dialer sequence schedule.
     
     - parameter sequenceId: (path) Sequence ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundSchedulesSequencesSequenceId(sequenceId sequenceId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundSchedulesSequencesSequenceIdWithRequestBuilder(sequenceId: sequenceId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a dialer sequence schedule.
     - DELETE /api/v2/outbound/schedules/sequences/{sequenceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter sequenceId: (path) Sequence ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundSchedulesSequencesSequenceIdWithRequestBuilder(sequenceId sequenceId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/schedules/sequences/{sequenceId}"
        path = path.stringByReplacingOccurrencesOfString("{sequenceId}", withString: "\(sequenceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a dialer campaign sequence.
     
     - parameter sequenceId: (path) Campaign Sequence ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOutboundSequencesSequenceId(sequenceId sequenceId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        deleteOutboundSequencesSequenceIdWithRequestBuilder(sequenceId: sequenceId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a dialer campaign sequence.
     - DELETE /api/v2/outbound/sequences/{sequenceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter sequenceId: (path) Campaign Sequence ID 

     - returns: RequestBuilder<String> 
     */
    public class func deleteOutboundSequencesSequenceIdWithRequestBuilder(sequenceId sequenceId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/sequences/{sequenceId}"
        path = path.stringByReplacingOccurrencesOfString("{sequenceId}", withString: "\(sequenceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter filterType
    */
    public enum ININFilterType_getOutboundCallabletimesets: String { 
        case Equals = "EQUALS"
        case Regex = "REGEX"
        case Contains = "CONTAINS"
        case Prefix = "PREFIX"
        case Lessthan = "LESSTHAN"
        case Lessthanequalto = "LESSTHANEQUALTO"
        case Greaterthan = "GREATERTHAN"
        case Greaterthanequalto = "GREATERTHANEQUALTO"
        case Beginswith = "BEGINSWITH"
        case Endswith = "ENDSWITH"
    }

    /**

    enum for parameter sortOrder
    */
    public enum ININSortOrder_getOutboundCallabletimesets: String { 
        case Ascending = "ascending"
        case Descending = "descending"
    }

    /**
     Query callable time set list
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundCallabletimesets(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundCallabletimesets? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundCallabletimesets? = nil, completion: ((data: ININCallableTimeSetEntityListing?, error: ErrorType?) -> Void)) {
        getOutboundCallabletimesetsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, filterType: filterType, name: name, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query callable time set list
     - GET /api/v2/outbound/callabletimesets
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "callableTimes" : [ {
      "timeZoneId" : "Africa/Abidjan",
      "timeSlots" : [ {
        "startTime" : "08:00:00",
        "stopTime" : "16:59:59",
        "day" : 1
      } ]
    } ],
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "version" : 123
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)

     - returns: RequestBuilder<ININCallableTimeSetEntityListing> 
     */
    public class func getOutboundCallabletimesetsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundCallabletimesets? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundCallabletimesets? = nil) -> RequestBuilder<ININCallableTimeSetEntityListing> {
        let path = "/api/v2/outbound/callabletimesets"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "filterType": filterType?.rawValue,
            "name": name,
            "sortBy": sortBy,
            "sortOrder": sortOrder?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCallableTimeSetEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get callable time set
     
     - parameter callableTimeSetId: (path) Callable Time Set ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundCallabletimesetsCallabletimesetId(callableTimeSetId callableTimeSetId: String, completion: ((data: ININCallableTimeSet?, error: ErrorType?) -> Void)) {
        getOutboundCallabletimesetsCallabletimesetIdWithRequestBuilder(callableTimeSetId: callableTimeSetId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get callable time set
     - GET /api/v2/outbound/callabletimesets/{callableTimeSetId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "callableTimes" : [ {
    "timeZoneId" : "Africa/Abidjan",
    "timeSlots" : [ {
      "startTime" : "08:00:00",
      "stopTime" : "16:59:59",
      "day" : 1
    } ]
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter callableTimeSetId: (path) Callable Time Set ID 

     - returns: RequestBuilder<ININCallableTimeSet> 
     */
    public class func getOutboundCallabletimesetsCallabletimesetIdWithRequestBuilder(callableTimeSetId callableTimeSetId: String) -> RequestBuilder<ININCallableTimeSet> {
        var path = "/api/v2/outbound/callabletimesets/{callableTimeSetId}"
        path = path.stringByReplacingOccurrencesOfString("{callableTimeSetId}", withString: "\(callableTimeSetId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCallableTimeSet>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter filterType
    */
    public enum ININFilterType_getOutboundCallanalysisresponsesets: String { 
        case Equals = "EQUALS"
        case Regex = "REGEX"
        case Contains = "CONTAINS"
        case Prefix = "PREFIX"
        case Lessthan = "LESSTHAN"
        case Lessthanequalto = "LESSTHANEQUALTO"
        case Greaterthan = "GREATERTHAN"
        case Greaterthanequalto = "GREATERTHANEQUALTO"
        case Beginswith = "BEGINSWITH"
        case Endswith = "ENDSWITH"
    }

    /**

    enum for parameter sortOrder
    */
    public enum ININSortOrder_getOutboundCallanalysisresponsesets: String { 
        case Ascending = "ascending"
        case Descending = "descending"
    }

    /**
     Query a list of dialer call analysis response sets.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundCallanalysisresponsesets(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundCallanalysisresponsesets? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundCallanalysisresponsesets? = nil, completion: ((data: ININResponseSetEntityListing?, error: ErrorType?) -> Void)) {
        getOutboundCallanalysisresponsesetsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, filterType: filterType, name: name, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query a list of dialer call analysis response sets.
     - GET /api/v2/outbound/callanalysisresponsesets
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "responses" : {
      "key" : {
        "data" : "aeiou",
        "reactionType" : "aeiou",
        "name" : "aeiou"
      }
    },
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "version" : 123
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)

     - returns: RequestBuilder<ININResponseSetEntityListing> 
     */
    public class func getOutboundCallanalysisresponsesetsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundCallanalysisresponsesets? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundCallanalysisresponsesets? = nil) -> RequestBuilder<ININResponseSetEntityListing> {
        let path = "/api/v2/outbound/callanalysisresponsesets"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "filterType": filterType?.rawValue,
            "name": name,
            "sortBy": sortBy,
            "sortOrder": sortOrder?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININResponseSetEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a dialer call analysis response set.
     
     - parameter callAnalysisSetId: (path) Call Analysis Response Set ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundCallanalysisresponsesetsCallanalysissetId(callAnalysisSetId callAnalysisSetId: String, completion: ((data: ININResponseSet?, error: ErrorType?) -> Void)) {
        getOutboundCallanalysisresponsesetsCallanalysissetIdWithRequestBuilder(callAnalysisSetId: callAnalysisSetId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a dialer call analysis response set.
     - GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "responses" : {
    "key" : {
      "data" : "aeiou",
      "reactionType" : "aeiou",
      "name" : "aeiou"
    }
  },
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter callAnalysisSetId: (path) Call Analysis Response Set ID 

     - returns: RequestBuilder<ININResponseSet> 
     */
    public class func getOutboundCallanalysisresponsesetsCallanalysissetIdWithRequestBuilder(callAnalysisSetId callAnalysisSetId: String) -> RequestBuilder<ININResponseSet> {
        var path = "/api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}"
        path = path.stringByReplacingOccurrencesOfString("{callAnalysisSetId}", withString: "\(callAnalysisSetId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININResponseSet>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter filterType
    */
    public enum ININFilterType_getOutboundCampaigns: String { 
        case Equals = "EQUALS"
        case Regex = "REGEX"
        case Contains = "CONTAINS"
        case Prefix = "PREFIX"
        case Lessthan = "LESSTHAN"
        case Lessthanequalto = "LESSTHANEQUALTO"
        case Greaterthan = "GREATERTHAN"
        case Greaterthanequalto = "GREATERTHANEQUALTO"
        case Beginswith = "BEGINSWITH"
        case Endswith = "ENDSWITH"
    }

    /**

    enum for parameter sortOrder
    */
    public enum ININSortOrder_getOutboundCampaigns: String { 
        case Ascending = "ascending"
        case Descending = "descending"
    }

    /**
     Query a list of dialer campaigns.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter contactListId: (query) Contact List ID (optional)
     - parameter dncListId: (query) DNC list ID (optional)
     - parameter distributionQueueId: (query) Distribution queue ID (optional)
     - parameter edgeGroupId: (query) Edge group ID (optional)
     - parameter callAnalysisResponseSetId: (query) Call analysis response set ID (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundCampaigns(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundCampaigns? = nil, name: String? = nil, contactListId: String? = nil, dncListId: String? = nil, distributionQueueId: String? = nil, edgeGroupId: String? = nil, callAnalysisResponseSetId: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundCampaigns? = nil, completion: ((data: ININCampaignEntityListing?, error: ErrorType?) -> Void)) {
        getOutboundCampaignsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, filterType: filterType, name: name, contactListId: contactListId, dncListId: dncListId, distributionQueueId: distributionQueueId, edgeGroupId: edgeGroupId, callAnalysisResponseSetId: callAnalysisResponseSetId, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query a list of dialer campaigns.
     - GET /api/v2/outbound/campaigns
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "callableTimeSet" : "",
    "phoneColumns" : [ {
      "type" : "aeiou",
      "columnName" : "aeiou"
    } ],
    "edgeGroup" : "",
    "callAnalysisResponseSet" : "",
    "previewTimeOutSeconds" : 123456789,
    "dncLists" : [ "" ],
    "callerName" : "aeiou",
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "campaignStatus" : "aeiou",
    "outboundLineCount" : 123,
    "id" : "aeiou",
    "dialingMode" : "aeiou",
    "callerAddress" : "(555) 555-5555",
    "skipPreviewDisabled" : true,
    "selfUri" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "version" : 123,
    "ruleSets" : [ "" ],
    "script" : "",
    "contactSort" : {
      "fieldName" : "aeiou",
      "numeric" : true,
      "direction" : "aeiou"
    },
    "contactList" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "abandonRate" : 1.3579000000000001069366817318950779736042022705078125,
    "name" : "aeiou",
    "queue" : "",
    "errors" : [ {
      "details" : "aeiou",
      "error" : "aeiou"
    } ]
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter contactListId: (query) Contact List ID (optional)
     - parameter dncListId: (query) DNC list ID (optional)
     - parameter distributionQueueId: (query) Distribution queue ID (optional)
     - parameter edgeGroupId: (query) Edge group ID (optional)
     - parameter callAnalysisResponseSetId: (query) Call analysis response set ID (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)

     - returns: RequestBuilder<ININCampaignEntityListing> 
     */
    public class func getOutboundCampaignsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundCampaigns? = nil, name: String? = nil, contactListId: String? = nil, dncListId: String? = nil, distributionQueueId: String? = nil, edgeGroupId: String? = nil, callAnalysisResponseSetId: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundCampaigns? = nil) -> RequestBuilder<ININCampaignEntityListing> {
        let path = "/api/v2/outbound/campaigns"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "filterType": filterType?.rawValue,
            "name": name,
            "contactListId": contactListId,
            "dncListId": dncListId,
            "distributionQueueId": distributionQueueId,
            "edgeGroupId": edgeGroupId,
            "callAnalysisResponseSetId": callAnalysisResponseSetId,
            "sortBy": sortBy,
            "sortOrder": sortOrder?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaignEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get dialer campaign.
     
     - parameter campaignId: (path) Campaign ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundCampaignsCampaignId(campaignId campaignId: String, completion: ((data: ININCampaign?, error: ErrorType?) -> Void)) {
        getOutboundCampaignsCampaignIdWithRequestBuilder(campaignId: campaignId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get dialer campaign.
     - GET /api/v2/outbound/campaigns/{campaignId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "callableTimeSet" : "",
  "phoneColumns" : [ {
    "type" : "aeiou",
    "columnName" : "aeiou"
  } ],
  "edgeGroup" : "",
  "callAnalysisResponseSet" : "",
  "previewTimeOutSeconds" : 123456789,
  "dncLists" : [ "" ],
  "callerName" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "campaignStatus" : "aeiou",
  "outboundLineCount" : 123,
  "id" : "aeiou",
  "dialingMode" : "aeiou",
  "callerAddress" : "(555) 555-5555",
  "skipPreviewDisabled" : true,
  "selfUri" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "version" : 123,
  "ruleSets" : [ "" ],
  "script" : "",
  "contactSort" : {
    "fieldName" : "aeiou",
    "numeric" : true,
    "direction" : "aeiou"
  },
  "contactList" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "abandonRate" : 1.3579000000000001069366817318950779736042022705078125,
  "name" : "aeiou",
  "queue" : "",
  "errors" : [ {
    "details" : "aeiou",
    "error" : "aeiou"
  } ]
}}]
     
     - parameter campaignId: (path) Campaign ID 

     - returns: RequestBuilder<ININCampaign> 
     */
    public class func getOutboundCampaignsCampaignIdWithRequestBuilder(campaignId campaignId: String) -> RequestBuilder<ININCampaign> {
        var path = "/api/v2/outbound/campaigns/{campaignId}"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaign>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get campaign diagnostics
     
     - parameter campaignId: (path) Campaign ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundCampaignsCampaignIdDiagnostics(campaignId campaignId: String, completion: ((data: ININCampaignDiagnostics?, error: ErrorType?) -> Void)) {
        getOutboundCampaignsCampaignIdDiagnosticsWithRequestBuilder(campaignId: campaignId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get campaign diagnostics
     - GET /api/v2/outbound/campaigns/{campaignId}/diagnostics
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "callableContacts" : {
    "callableTimeSet" : "",
    "ruleSets" : [ "" ],
    "dncLists" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    } ]
  },
  "queueUtilizationDiagnostic" : {
    "usersOnQueueWithStation" : 123,
    "usersOnDifferentEdgeGroup" : 123,
    "usersOnACampaignCall" : 123,
    "usersInQueue" : 123,
    "usersNotUtilized" : 123,
    "usersOnANonCampaignCall" : 123,
    "queue" : "",
    "usersOnQueue" : 123,
    "activeUsersInQueue" : 123
  },
  "outstandingInteractionsCount" : 123
}}]
     
     - parameter campaignId: (path) Campaign ID 

     - returns: RequestBuilder<ININCampaignDiagnostics> 
     */
    public class func getOutboundCampaignsCampaignIdDiagnosticsWithRequestBuilder(campaignId campaignId: String) -> RequestBuilder<ININCampaignDiagnostics> {
        var path = "/api/v2/outbound/campaigns/{campaignId}/diagnostics"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaignDiagnostics>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get campaign progress
     
     - parameter campaignId: (path) Campaign ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundCampaignsCampaignIdProgress(campaignId campaignId: String, completion: ((data: ININCampaignProgress?, error: ErrorType?) -> Void)) {
        getOutboundCampaignsCampaignIdProgressWithRequestBuilder(campaignId: campaignId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get campaign progress
     - GET /api/v2/outbound/campaigns/{campaignId}/progress
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "contactList" : "",
  "numberOfContactsCalled" : 123456789,
  "totalNumberOfContacts" : 123456789,
  "percentage" : 123456789,
  "campaign" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  }
}}]
     
     - parameter campaignId: (path) Campaign ID 

     - returns: RequestBuilder<ININCampaignProgress> 
     */
    public class func getOutboundCampaignsCampaignIdProgressWithRequestBuilder(campaignId campaignId: String) -> RequestBuilder<ININCampaignProgress> {
        var path = "/api/v2/outbound/campaigns/{campaignId}/progress"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaignProgress>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get statistics about a Dialer Campaign
     
     - parameter campaignId: (path) Campaign ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundCampaignsCampaignIdStats(campaignId campaignId: String, completion: ((data: ININCampaignStats?, error: ErrorType?) -> Void)) {
        getOutboundCampaignsCampaignIdStatsWithRequestBuilder(campaignId: campaignId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get statistics about a Dialer Campaign
     - GET /api/v2/outbound/campaigns/{campaignId}/stats
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "idleAgents" : 123,
  "outstandingCalls" : 123,
  "contactRate" : {
    "connects" : 123456789,
    "connectRatio" : 1.3579000000000001069366817318950779736042022705078125,
    "attempts" : 123456789
  },
  "adjustedCallsPerAgent" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter campaignId: (path) Campaign ID 

     - returns: RequestBuilder<ININCampaignStats> 
     */
    public class func getOutboundCampaignsCampaignIdStatsWithRequestBuilder(campaignId campaignId: String) -> RequestBuilder<ININCampaignStats> {
        var path = "/api/v2/outbound/campaigns/{campaignId}/stats"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaignStats>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter filterType
    */
    public enum ININFilterType_getOutboundContactlists: String { 
        case Equals = "EQUALS"
        case Regex = "REGEX"
        case Contains = "CONTAINS"
        case Prefix = "PREFIX"
        case Lessthan = "LESSTHAN"
        case Lessthanequalto = "LESSTHANEQUALTO"
        case Greaterthan = "GREATERTHAN"
        case Greaterthanequalto = "GREATERTHANEQUALTO"
        case Beginswith = "BEGINSWITH"
        case Endswith = "ENDSWITH"
    }

    /**

    enum for parameter sortOrder
    */
    public enum ININSortOrder_getOutboundContactlists: String { 
        case Ascending = "ascending"
        case Descending = "descending"
    }

    /**
     Query a list of contact lists.
     
     - parameter includeImportStatus: (query) Include import status (optional, default to false)
     - parameter includeSize: (query) Include size (optional, default to false)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundContactlists(includeImportStatus includeImportStatus: Bool? = nil, includeSize: Bool? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundContactlists? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundContactlists? = nil, completion: ((data: ININContactListEntityListing?, error: ErrorType?) -> Void)) {
        getOutboundContactlistsWithRequestBuilder(includeImportStatus: includeImportStatus, includeSize: includeSize, pageSize: pageSize, pageNumber: pageNumber, filterType: filterType, name: name, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query a list of contact lists.
     - GET /api/v2/outbound/contactlists
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "importStatus" : {
      "completedRecords" : 123456789,
      "totalRecords" : 123456789,
      "failureReason" : "aeiou",
      "state" : "aeiou",
      "percentComplete" : 123
    },
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "previewModeColumnName" : "aeiou",
    "columnNames" : [ "aeiou" ],
    "phoneColumns" : [ {
      "type" : "aeiou",
      "columnName" : "aeiou",
      "callableTimeColumn" : "aeiou"
    } ],
    "size" : 123456789,
    "previewModeAcceptedValues" : [ "aeiou" ],
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "version" : 123
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter includeImportStatus: (query) Include import status (optional, default to false)
     - parameter includeSize: (query) Include size (optional, default to false)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)

     - returns: RequestBuilder<ININContactListEntityListing> 
     */
    public class func getOutboundContactlistsWithRequestBuilder(includeImportStatus includeImportStatus: Bool? = nil, includeSize: Bool? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundContactlists? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundContactlists? = nil) -> RequestBuilder<ININContactListEntityListing> {
        let path = "/api/v2/outbound/contactlists"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "includeImportStatus": includeImportStatus,
            "includeSize": includeSize,
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "filterType": filterType?.rawValue,
            "name": name,
            "sortBy": sortBy,
            "sortOrder": sortOrder?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININContactListEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a dialer contact list.
     
     - parameter contactListId: (path) ContactList ID 
     - parameter includeImportStatus: (query) Import status (optional, default to false)
     - parameter includeSize: (query) Include size (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundContactlistsContactlistId(contactListId contactListId: String, includeImportStatus: Bool? = nil, includeSize: Bool? = nil, completion: ((data: ININContactList?, error: ErrorType?) -> Void)) {
        getOutboundContactlistsContactlistIdWithRequestBuilder(contactListId: contactListId, includeImportStatus: includeImportStatus, includeSize: includeSize).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a dialer contact list.
     - GET /api/v2/outbound/contactlists/{contactListId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "importStatus" : {
    "completedRecords" : 123456789,
    "totalRecords" : 123456789,
    "failureReason" : "aeiou",
    "state" : "aeiou",
    "percentComplete" : 123
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "previewModeColumnName" : "aeiou",
  "columnNames" : [ "aeiou" ],
  "phoneColumns" : [ {
    "type" : "aeiou",
    "columnName" : "aeiou",
    "callableTimeColumn" : "aeiou"
  } ],
  "size" : 123456789,
  "previewModeAcceptedValues" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter contactListId: (path) ContactList ID 
     - parameter includeImportStatus: (query) Import status (optional, default to false)
     - parameter includeSize: (query) Include size (optional, default to false)

     - returns: RequestBuilder<ININContactList> 
     */
    public class func getOutboundContactlistsContactlistIdWithRequestBuilder(contactListId contactListId: String, includeImportStatus: Bool? = nil, includeSize: Bool? = nil) -> RequestBuilder<ININContactList> {
        var path = "/api/v2/outbound/contactlists/{contactListId}"
        path = path.stringByReplacingOccurrencesOfString("{contactListId}", withString: "\(contactListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "includeImportStatus": includeImportStatus,
            "includeSize": includeSize
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININContactList>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a contact.
     
     - parameter contactListId: (path) Contact List ID 
     - parameter contactId: (path) Contact ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundContactlistsContactlistIdContactsContactId(contactListId contactListId: String, contactId: String, completion: ((data: ININDialerContact?, error: ErrorType?) -> Void)) {
        getOutboundContactlistsContactlistIdContactsContactIdWithRequestBuilder(contactListId: contactListId, contactId: contactId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a contact.
     - GET /api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "callable" : true,
  "data" : {
    "key" : "{}"
  },
  "callRecords" : {
    "key" : {
      "lastResult" : "aeiou",
      "lastAttempt" : "2000-01-23T04:56:07.000+0000"
    }
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "contactListId" : "aeiou",
  "id" : "aeiou",
  "phoneNumberStatus" : {
    "key" : {
      "callable" : true
    }
  }
}}]
     
     - parameter contactListId: (path) Contact List ID 
     - parameter contactId: (path) Contact ID 

     - returns: RequestBuilder<ININDialerContact> 
     */
    public class func getOutboundContactlistsContactlistIdContactsContactIdWithRequestBuilder(contactListId contactListId: String, contactId: String) -> RequestBuilder<ININDialerContact> {
        var path = "/api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}"
        path = path.stringByReplacingOccurrencesOfString("{contactListId}", withString: "\(contactListId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{contactId}", withString: "\(contactId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDialerContact>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the URI of a contact list export.
     
     - parameter contactListId: (path) ContactList ID 
     - parameter download: (query) Redirect to download uri (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundContactlistsContactlistIdExport(contactListId contactListId: String, download: String? = nil, completion: ((data: ININExportUri?, error: ErrorType?) -> Void)) {
        getOutboundContactlistsContactlistIdExportWithRequestBuilder(contactListId: contactListId, download: download).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the URI of a contact list export.
     - GET /api/v2/outbound/contactlists/{contactListId}/export
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "exportTimestamp" : "2000-01-23T04:56:07.000+0000",
  "uri" : "aeiou"
}}]
     
     - parameter contactListId: (path) ContactList ID 
     - parameter download: (query) Redirect to download uri (optional, default to false)

     - returns: RequestBuilder<ININExportUri> 
     */
    public class func getOutboundContactlistsContactlistIdExportWithRequestBuilder(contactListId contactListId: String, download: String? = nil) -> RequestBuilder<ININExportUri> {
        var path = "/api/v2/outbound/contactlists/{contactListId}/export"
        path = path.stringByReplacingOccurrencesOfString("{contactListId}", withString: "\(contactListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "download": download
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININExportUri>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get dialer contactList import status.
     
     - parameter contactListId: (path) ContactList ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundContactlistsContactlistIdImportstatus(contactListId contactListId: String, completion: ((data: ININImportStatus?, error: ErrorType?) -> Void)) {
        getOutboundContactlistsContactlistIdImportstatusWithRequestBuilder(contactListId: contactListId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get dialer contactList import status.
     - GET /api/v2/outbound/contactlists/{contactListId}/importstatus
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "completedRecords" : 123456789,
  "totalRecords" : 123456789,
  "failureReason" : "aeiou",
  "state" : "aeiou",
  "percentComplete" : 123
}}]
     
     - parameter contactListId: (path) ContactList ID 

     - returns: RequestBuilder<ININImportStatus> 
     */
    public class func getOutboundContactlistsContactlistIdImportstatusWithRequestBuilder(contactListId contactListId: String) -> RequestBuilder<ININImportStatus> {
        var path = "/api/v2/outbound/contactlists/{contactListId}/importstatus"
        path = path.stringByReplacingOccurrencesOfString("{contactListId}", withString: "\(contactListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININImportStatus>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter filterType
    */
    public enum ININFilterType_getOutboundDnclists: String { 
        case Equals = "EQUALS"
        case Regex = "REGEX"
        case Contains = "CONTAINS"
        case Prefix = "PREFIX"
        case Lessthan = "LESSTHAN"
        case Lessthanequalto = "LESSTHANEQUALTO"
        case Greaterthan = "GREATERTHAN"
        case Greaterthanequalto = "GREATERTHANEQUALTO"
        case Beginswith = "BEGINSWITH"
        case Endswith = "ENDSWITH"
    }

    /**

    enum for parameter sortOrder
    */
    public enum ININSortOrder_getOutboundDnclists: String { 
        case Ascending = "ascending"
        case Descending = "descending"
    }

    /**
     Query dialer DNC lists
     
     - parameter includeImportStatus: (query) Import status (optional, default to false)
     - parameter includeSize: (query) Include size (optional, default to false)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundDnclists(includeImportStatus includeImportStatus: Bool? = nil, includeSize: Bool? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundDnclists? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundDnclists? = nil, completion: ((data: ININDncListEntityListing?, error: ErrorType?) -> Void)) {
        getOutboundDnclistsWithRequestBuilder(includeImportStatus: includeImportStatus, includeSize: includeSize, pageSize: pageSize, pageNumber: pageNumber, filterType: filterType, name: name, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query dialer DNC lists
     - GET /api/v2/outbound/dnclists
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "importStatus" : {
      "completedRecords" : 123456789,
      "totalRecords" : 123456789,
      "failureReason" : "aeiou",
      "state" : "aeiou",
      "percentComplete" : 123
    },
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "size" : 123456789,
    "phoneNumberColumns" : [ "aeiou" ],
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "version" : 123
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter includeImportStatus: (query) Import status (optional, default to false)
     - parameter includeSize: (query) Include size (optional, default to false)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)

     - returns: RequestBuilder<ININDncListEntityListing> 
     */
    public class func getOutboundDnclistsWithRequestBuilder(includeImportStatus includeImportStatus: Bool? = nil, includeSize: Bool? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundDnclists? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundDnclists? = nil) -> RequestBuilder<ININDncListEntityListing> {
        let path = "/api/v2/outbound/dnclists"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "includeImportStatus": includeImportStatus,
            "includeSize": includeSize,
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "filterType": filterType?.rawValue,
            "name": name,
            "sortBy": sortBy,
            "sortOrder": sortOrder?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDncListEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get dialer DNC list
     
     - parameter dncListId: (path) DncList ID 
     - parameter includeImportStatus: (query) Import status (optional, default to false)
     - parameter includeSize: (query) Include size (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundDnclistsDnclistId(dncListId dncListId: String, includeImportStatus: Bool? = nil, includeSize: Bool? = nil, completion: ((data: ININDncList?, error: ErrorType?) -> Void)) {
        getOutboundDnclistsDnclistIdWithRequestBuilder(dncListId: dncListId, includeImportStatus: includeImportStatus, includeSize: includeSize).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get dialer DNC list
     - GET /api/v2/outbound/dnclists/{dncListId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "importStatus" : {
    "completedRecords" : 123456789,
    "totalRecords" : 123456789,
    "failureReason" : "aeiou",
    "state" : "aeiou",
    "percentComplete" : 123
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "size" : 123456789,
  "phoneNumberColumns" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter dncListId: (path) DncList ID 
     - parameter includeImportStatus: (query) Import status (optional, default to false)
     - parameter includeSize: (query) Include size (optional, default to false)

     - returns: RequestBuilder<ININDncList> 
     */
    public class func getOutboundDnclistsDnclistIdWithRequestBuilder(dncListId dncListId: String, includeImportStatus: Bool? = nil, includeSize: Bool? = nil) -> RequestBuilder<ININDncList> {
        var path = "/api/v2/outbound/dnclists/{dncListId}"
        path = path.stringByReplacingOccurrencesOfString("{dncListId}", withString: "\(dncListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "includeImportStatus": includeImportStatus,
            "includeSize": includeSize
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDncList>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get the URI of a DNC list export.
     
     - parameter dncListId: (path) DncList ID 
     - parameter download: (query) Redirect to download uri (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundDnclistsDnclistIdExport(dncListId dncListId: String, download: String? = nil, completion: ((data: ININExportUri?, error: ErrorType?) -> Void)) {
        getOutboundDnclistsDnclistIdExportWithRequestBuilder(dncListId: dncListId, download: download).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the URI of a DNC list export.
     - GET /api/v2/outbound/dnclists/{dncListId}/export
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "exportTimestamp" : "2000-01-23T04:56:07.000+0000",
  "uri" : "aeiou"
}}]
     
     - parameter dncListId: (path) DncList ID 
     - parameter download: (query) Redirect to download uri (optional, default to false)

     - returns: RequestBuilder<ININExportUri> 
     */
    public class func getOutboundDnclistsDnclistIdExportWithRequestBuilder(dncListId dncListId: String, download: String? = nil) -> RequestBuilder<ININExportUri> {
        var path = "/api/v2/outbound/dnclists/{dncListId}/export"
        path = path.stringByReplacingOccurrencesOfString("{dncListId}", withString: "\(dncListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "download": download
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININExportUri>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get dialer dncList import status.
     
     - parameter dncListId: (path) DncList ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundDnclistsDnclistIdImportstatus(dncListId dncListId: String, completion: ((data: ININImportStatus?, error: ErrorType?) -> Void)) {
        getOutboundDnclistsDnclistIdImportstatusWithRequestBuilder(dncListId: dncListId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get dialer dncList import status.
     - GET /api/v2/outbound/dnclists/{dncListId}/importstatus
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "completedRecords" : 123456789,
  "totalRecords" : 123456789,
  "failureReason" : "aeiou",
  "state" : "aeiou",
  "percentComplete" : 123
}}]
     
     - parameter dncListId: (path) DncList ID 

     - returns: RequestBuilder<ININImportStatus> 
     */
    public class func getOutboundDnclistsDnclistIdImportstatusWithRequestBuilder(dncListId dncListId: String) -> RequestBuilder<ININImportStatus> {
        var path = "/api/v2/outbound/dnclists/{dncListId}/importstatus"
        path = path.stringByReplacingOccurrencesOfString("{dncListId}", withString: "\(dncListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININImportStatus>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter filterType
    */
    public enum ININFilterType_getOutboundRulesets: String { 
        case Equals = "EQUALS"
        case Regex = "REGEX"
        case Contains = "CONTAINS"
        case Prefix = "PREFIX"
        case Lessthan = "LESSTHAN"
        case Lessthanequalto = "LESSTHANEQUALTO"
        case Greaterthan = "GREATERTHAN"
        case Greaterthanequalto = "GREATERTHANEQUALTO"
        case Beginswith = "BEGINSWITH"
        case Endswith = "ENDSWITH"
    }

    /**

    enum for parameter sortOrder
    */
    public enum ININSortOrder_getOutboundRulesets: String { 
        case Ascending = "ascending"
        case Descending = "descending"
    }

    /**
     Query a list of Rule Sets.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundRulesets(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundRulesets? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundRulesets? = nil, completion: ((data: ININRuleSetEntityListing?, error: ErrorType?) -> Void)) {
        getOutboundRulesetsWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, filterType: filterType, name: name, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query a list of Rule Sets.
     - GET /api/v2/outbound/rulesets
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "contactList" : {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "rules" : [ {
      "name" : "aeiou",
      "id" : "aeiou",
      "category" : "aeiou",
      "conditions" : [ {
        "codes" : [ "aeiou" ],
        "valueType" : "aeiou",
        "attributeName" : "aeiou",
        "type" : "aeiou",
        "inverted" : true,
        "value" : "aeiou",
        "operator" : "aeiou"
      } ],
      "actions" : [ {
        "actionTypeName" : "aeiou",
        "updateOption" : "aeiou",
        "type" : "aeiou",
        "properties" : {
          "key" : "aeiou"
        }
      } ],
      "order" : 123
    } ],
    "id" : "aeiou",
    "version" : 123,
    "queue" : ""
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)

     - returns: RequestBuilder<ININRuleSetEntityListing> 
     */
    public class func getOutboundRulesetsWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundRulesets? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundRulesets? = nil) -> RequestBuilder<ININRuleSetEntityListing> {
        let path = "/api/v2/outbound/rulesets"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "filterType": filterType?.rawValue,
            "name": name,
            "sortBy": sortBy,
            "sortOrder": sortOrder?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININRuleSetEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a Rule Set by ID.
     
     - parameter ruleSetId: (path) Rule Set ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundRulesetsRulesetId(ruleSetId ruleSetId: String, completion: ((data: ININRuleSet?, error: ErrorType?) -> Void)) {
        getOutboundRulesetsRulesetIdWithRequestBuilder(ruleSetId: ruleSetId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a Rule Set by ID.
     - GET /api/v2/outbound/rulesets/{ruleSetId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "contactList" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "rules" : [ {
    "name" : "aeiou",
    "id" : "aeiou",
    "category" : "aeiou",
    "conditions" : [ {
      "codes" : [ "aeiou" ],
      "valueType" : "aeiou",
      "attributeName" : "aeiou",
      "type" : "aeiou",
      "inverted" : true,
      "value" : "aeiou",
      "operator" : "aeiou"
    } ],
    "actions" : [ {
      "actionTypeName" : "aeiou",
      "updateOption" : "aeiou",
      "type" : "aeiou",
      "properties" : {
        "key" : "aeiou"
      }
    } ],
    "order" : 123
  } ],
  "id" : "aeiou",
  "version" : 123,
  "queue" : ""
}}]
     
     - parameter ruleSetId: (path) Rule Set ID 

     - returns: RequestBuilder<ININRuleSet> 
     */
    public class func getOutboundRulesetsRulesetIdWithRequestBuilder(ruleSetId ruleSetId: String) -> RequestBuilder<ININRuleSet> {
        var path = "/api/v2/outbound/rulesets/{ruleSetId}"
        path = path.stringByReplacingOccurrencesOfString("{ruleSetId}", withString: "\(ruleSetId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININRuleSet>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Query for a list of dialer campaign schedules.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundSchedulesCampaigns(completion: ((data: [ININCampaignSchedule]?, error: ErrorType?) -> Void)) {
        getOutboundSchedulesCampaignsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query for a list of dialer campaign schedules.
     - GET /api/v2/outbound/schedules/campaigns
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example=[ {
  "intervals" : [ {
    "start" : "aeiou",
    "end" : "aeiou"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "timeZone" : "Africa/Abidjan",
  "campaign" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
} ]}]

     - returns: RequestBuilder<[ININCampaignSchedule]> 
     */
    public class func getOutboundSchedulesCampaignsWithRequestBuilder() -> RequestBuilder<[ININCampaignSchedule]> {
        let path = "/api/v2/outbound/schedules/campaigns"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ININCampaignSchedule]>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a dialer campaign schedule.
     
     - parameter campaignId: (path) Campaign ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundSchedulesCampaignsCampaignId(campaignId campaignId: String, completion: ((data: ININCampaignSchedule?, error: ErrorType?) -> Void)) {
        getOutboundSchedulesCampaignsCampaignIdWithRequestBuilder(campaignId: campaignId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a dialer campaign schedule.
     - GET /api/v2/outbound/schedules/campaigns/{campaignId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "intervals" : [ {
    "start" : "aeiou",
    "end" : "aeiou"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "timeZone" : "Africa/Abidjan",
  "campaign" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter campaignId: (path) Campaign ID 

     - returns: RequestBuilder<ININCampaignSchedule> 
     */
    public class func getOutboundSchedulesCampaignsCampaignIdWithRequestBuilder(campaignId campaignId: String) -> RequestBuilder<ININCampaignSchedule> {
        var path = "/api/v2/outbound/schedules/campaigns/{campaignId}"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaignSchedule>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Query for a list of dialer sequence schedules.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundSchedulesSequences(completion: ((data: [ININSequenceSchedule]?, error: ErrorType?) -> Void)) {
        getOutboundSchedulesSequencesWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query for a list of dialer sequence schedules.
     - GET /api/v2/outbound/schedules/sequences
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example=[ {
  "sequence" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "intervals" : [ {
    "start" : "aeiou",
    "end" : "aeiou"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "timeZone" : "Africa/Abidjan",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
} ]}]

     - returns: RequestBuilder<[ININSequenceSchedule]> 
     */
    public class func getOutboundSchedulesSequencesWithRequestBuilder() -> RequestBuilder<[ININSequenceSchedule]> {
        let path = "/api/v2/outbound/schedules/sequences"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ININSequenceSchedule]>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a dialer sequence schedule.
     
     - parameter sequenceId: (path) Sequence ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundSchedulesSequencesSequenceId(sequenceId sequenceId: String, completion: ((data: ININSequenceSchedule?, error: ErrorType?) -> Void)) {
        getOutboundSchedulesSequencesSequenceIdWithRequestBuilder(sequenceId: sequenceId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a dialer sequence schedule.
     - GET /api/v2/outbound/schedules/sequences/{sequenceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "sequence" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "intervals" : [ {
    "start" : "aeiou",
    "end" : "aeiou"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "timeZone" : "Africa/Abidjan",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter sequenceId: (path) Sequence ID 

     - returns: RequestBuilder<ININSequenceSchedule> 
     */
    public class func getOutboundSchedulesSequencesSequenceIdWithRequestBuilder(sequenceId sequenceId: String) -> RequestBuilder<ININSequenceSchedule> {
        var path = "/api/v2/outbound/schedules/sequences/{sequenceId}"
        path = path.stringByReplacingOccurrencesOfString("{sequenceId}", withString: "\(sequenceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSequenceSchedule>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

    enum for parameter filterType
    */
    public enum ININFilterType_getOutboundSequences: String { 
        case Equals = "EQUALS"
        case Regex = "REGEX"
        case Contains = "CONTAINS"
        case Prefix = "PREFIX"
        case Lessthan = "LESSTHAN"
        case Lessthanequalto = "LESSTHANEQUALTO"
        case Greaterthan = "GREATERTHAN"
        case Greaterthanequalto = "GREATERTHANEQUALTO"
        case Beginswith = "BEGINSWITH"
        case Endswith = "ENDSWITH"
    }

    /**

    enum for parameter sortOrder
    */
    public enum ININSortOrder_getOutboundSequences: String { 
        case Ascending = "ascending"
        case Descending = "descending"
    }

    /**
     Query a list of dialer campaign sequences.
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundSequences(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundSequences? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundSequences? = nil, completion: ((data: ININCampaignSequenceEntityListing?, error: ErrorType?) -> Void)) {
        getOutboundSequencesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber, filterType: filterType, name: name, sortBy: sortBy, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Query a list of dialer campaign sequences.
     - GET /api/v2/outbound/sequences
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "dateCreated" : "2000-01-23T04:56:07.000+0000",
    "currentCampaign" : 123,
    "stopMessage" : "aeiou",
    "campaigns" : [ {
      "selfUri" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    } ],
    "repeat" : true,
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "dateModified" : "2000-01-23T04:56:07.000+0000",
    "id" : "aeiou",
    "version" : 123,
    "status" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter filterType: (query) Filter type (optional, default to PREFIX)
     - parameter name: (query) Name (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional, default to a)

     - returns: RequestBuilder<ININCampaignSequenceEntityListing> 
     */
    public class func getOutboundSequencesWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, filterType: ININFilterType_getOutboundSequences? = nil, name: String? = nil, sortBy: String? = nil, sortOrder: ININSortOrder_getOutboundSequences? = nil) -> RequestBuilder<ININCampaignSequenceEntityListing> {
        let path = "/api/v2/outbound/sequences"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON(),
            "filterType": filterType?.rawValue,
            "name": name,
            "sortBy": sortBy,
            "sortOrder": sortOrder?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaignSequenceEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a dialer campaign sequence.
     
     - parameter sequenceId: (path) Campaign Sequence ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundSequencesSequenceId(sequenceId sequenceId: String, completion: ((data: ININCampaignSequence?, error: ErrorType?) -> Void)) {
        getOutboundSequencesSequenceIdWithRequestBuilder(sequenceId: sequenceId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a dialer campaign sequence.
     - GET /api/v2/outbound/sequences/{sequenceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "currentCampaign" : 123,
  "stopMessage" : "aeiou",
  "campaigns" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "repeat" : true,
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123,
  "status" : "aeiou"
}}]
     
     - parameter sequenceId: (path) Campaign Sequence ID 

     - returns: RequestBuilder<ININCampaignSequence> 
     */
    public class func getOutboundSequencesSequenceIdWithRequestBuilder(sequenceId sequenceId: String) -> RequestBuilder<ININCampaignSequence> {
        var path = "/api/v2/outbound/sequences/{sequenceId}"
        path = path.stringByReplacingOccurrencesOfString("{sequenceId}", withString: "\(sequenceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaignSequence>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the Dialer wrap up code mapping.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOutboundWrapupcodemappings(completion: ((data: ININWrapUpCodeMapping?, error: ErrorType?) -> Void)) {
        getOutboundWrapupcodemappingsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the Dialer wrap up code mapping.
     - GET /api/v2/outbound/wrapupcodemappings
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "defaultSet" : [ "aeiou" ],
  "mapping" : {
    "key" : [ "aeiou" ]
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]

     - returns: RequestBuilder<ININWrapUpCodeMapping> 
     */
    public class func getOutboundWrapupcodemappingsWithRequestBuilder() -> RequestBuilder<ININWrapUpCodeMapping> {
        let path = "/api/v2/outbound/wrapupcodemappings"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININWrapUpCodeMapping>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Retrieves audits for dialer.
     
     - parameter body: (body) AuditSearch (optional)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to entity.name)
     - parameter sortOrder: (query) Sort order (optional, default to ascending)
     - parameter facetsOnly: (query) Facets only (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundAudits(body body: ININDialerAuditRequest? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, facetsOnly: Bool? = nil, completion: ((data: ININAuditSearchResult?, error: ErrorType?) -> Void)) {
        postOutboundAuditsWithRequestBuilder(body: body, pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, sortOrder: sortOrder, facetsOnly: facetsOnly).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Retrieves audits for dialer.
     - POST /api/v2/outbound/audits
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123,
  "pageCount" : 123,
  "pageNumber" : 123,
  "pageSize" : 123,
  "facetInfo" : [ {
    "entries" : [ {
      "count" : 123,
      "value" : "aeiou"
    } ],
    "name" : "aeiou"
  } ],
  "auditMessages" : [ {
    "receivedTimestamp" : "aeiou",
    "level" : "aeiou",
    "transactionInitiator" : true,
    "changes" : [ {
      "property" : "aeiou",
      "newValues" : [ "aeiou" ],
      "oldValues" : [ "aeiou" ],
      "entity" : {
        "selfUri" : "aeiou",
        "name" : "aeiou",
        "id" : "aeiou",
        "type" : "aeiou"
      }
    } ],
    "serviceName" : "aeiou",
    "serviceContext" : {
      "name" : "aeiou"
    },
    "transactionId" : "aeiou",
    "actionContext" : "aeiou",
    "application" : "aeiou",
    "action" : "aeiou",
    "correlationId" : "aeiou",
    "id" : "aeiou",
    "user" : {
      "display" : "aeiou",
      "name" : "aeiou",
      "id" : "aeiou"
    },
    "entity" : "",
    "timestamp" : "aeiou",
    "status" : "aeiou"
  } ]
}}]
     
     - parameter body: (body) AuditSearch (optional)
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter sortBy: (query) Sort by (optional, default to entity.name)
     - parameter sortOrder: (query) Sort order (optional, default to ascending)
     - parameter facetsOnly: (query) Facets only (optional, default to false)

     - returns: RequestBuilder<ININAuditSearchResult> 
     */
    public class func postOutboundAuditsWithRequestBuilder(body body: ININDialerAuditRequest? = nil, pageSize: Int32? = nil, pageNumber: Int32? = nil, sortBy: String? = nil, sortOrder: String? = nil, facetsOnly: Bool? = nil) -> RequestBuilder<ININAuditSearchResult> {
        let path = "/api/v2/outbound/audits"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININAuditSearchResult>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Create callable time set
     
     - parameter body: (body) DialerCallableTimeSet (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundCallabletimesets(body body: ININCallableTimeSet? = nil, completion: ((data: ININCallableTimeSet?, error: ErrorType?) -> Void)) {
        postOutboundCallabletimesetsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create callable time set
     - POST /api/v2/outbound/callabletimesets
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "callableTimes" : [ {
    "timeZoneId" : "Africa/Abidjan",
    "timeSlots" : [ {
      "startTime" : "08:00:00",
      "stopTime" : "16:59:59",
      "day" : 1
    } ]
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter body: (body) DialerCallableTimeSet (optional)

     - returns: RequestBuilder<ININCallableTimeSet> 
     */
    public class func postOutboundCallabletimesetsWithRequestBuilder(body body: ININCallableTimeSet? = nil) -> RequestBuilder<ININCallableTimeSet> {
        let path = "/api/v2/outbound/callabletimesets"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCallableTimeSet>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a dialer call analysis response set.
     
     - parameter body: (body) ResponseSet (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundCallanalysisresponsesets(body body: ININResponseSet? = nil, completion: ((data: ININResponseSet?, error: ErrorType?) -> Void)) {
        postOutboundCallanalysisresponsesetsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a dialer call analysis response set.
     - POST /api/v2/outbound/callanalysisresponsesets
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "responses" : {
    "key" : {
      "data" : "aeiou",
      "reactionType" : "aeiou",
      "name" : "aeiou"
    }
  },
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter body: (body) ResponseSet (optional)

     - returns: RequestBuilder<ININResponseSet> 
     */
    public class func postOutboundCallanalysisresponsesetsWithRequestBuilder(body body: ININResponseSet? = nil) -> RequestBuilder<ININResponseSet> {
        let path = "/api/v2/outbound/callanalysisresponsesets"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININResponseSet>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a campaign.
     
     - parameter body: (body) Campaign (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundCampaigns(body body: ININCampaign? = nil, completion: ((data: ININCampaign?, error: ErrorType?) -> Void)) {
        postOutboundCampaignsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a campaign.
     - POST /api/v2/outbound/campaigns
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "callableTimeSet" : "",
  "phoneColumns" : [ {
    "type" : "aeiou",
    "columnName" : "aeiou"
  } ],
  "edgeGroup" : "",
  "callAnalysisResponseSet" : "",
  "previewTimeOutSeconds" : 123456789,
  "dncLists" : [ "" ],
  "callerName" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "campaignStatus" : "aeiou",
  "outboundLineCount" : 123,
  "id" : "aeiou",
  "dialingMode" : "aeiou",
  "callerAddress" : "(555) 555-5555",
  "skipPreviewDisabled" : true,
  "selfUri" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "version" : 123,
  "ruleSets" : [ "" ],
  "script" : "",
  "contactSort" : {
    "fieldName" : "aeiou",
    "numeric" : true,
    "direction" : "aeiou"
  },
  "contactList" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "abandonRate" : 1.3579000000000001069366817318950779736042022705078125,
  "name" : "aeiou",
  "queue" : "",
  "errors" : [ {
    "details" : "aeiou",
    "error" : "aeiou"
  } ]
}}]
     
     - parameter body: (body) Campaign (optional)

     - returns: RequestBuilder<ININCampaign> 
     */
    public class func postOutboundCampaignsWithRequestBuilder(body body: ININCampaign? = nil) -> RequestBuilder<ININCampaign> {
        let path = "/api/v2/outbound/campaigns"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaign>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Schedule a Callback for a Dialer Campaign
     
     - parameter campaignId: (path) Campaign ID 
     - parameter body: (body) ContactCallbackRequest (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundCampaignsCampaignIdCallbackSchedule(campaignId campaignId: String, body: ININContactCallbackRequest? = nil, completion: ((data: ININContactCallbackRequest?, error: ErrorType?) -> Void)) {
        postOutboundCampaignsCampaignIdCallbackScheduleWithRequestBuilder(campaignId: campaignId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Schedule a Callback for a Dialer Campaign
     - POST /api/v2/outbound/campaigns/{campaignId}/callback/schedule
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "schedule" : "aeiou",
  "contactId" : "aeiou",
  "campaignId" : "aeiou",
  "contactListId" : "aeiou",
  "phoneColumn" : "aeiou"
}}]
     
     - parameter campaignId: (path) Campaign ID 
     - parameter body: (body) ContactCallbackRequest (optional)

     - returns: RequestBuilder<ININContactCallbackRequest> 
     */
    public class func postOutboundCampaignsCampaignIdCallbackScheduleWithRequestBuilder(campaignId campaignId: String, body: ININContactCallbackRequest? = nil) -> RequestBuilder<ININContactCallbackRequest> {
        var path = "/api/v2/outbound/campaigns/{campaignId}/callback/schedule"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININContactCallbackRequest>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get progress for a list of campaigns
     
     - parameter body: (body) Campaign IDs (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundCampaignsProgress(body body: [String]? = nil, completion: ((data: [ININCampaignProgress]?, error: ErrorType?) -> Void)) {
        postOutboundCampaignsProgressWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get progress for a list of campaigns
     - POST /api/v2/outbound/campaigns/progress
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example=[ {
  "contactList" : "",
  "numberOfContactsCalled" : 123456789,
  "totalNumberOfContacts" : 123456789,
  "percentage" : 123456789,
  "campaign" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  }
} ]}]
     
     - parameter body: (body) Campaign IDs (optional)

     - returns: RequestBuilder<[ININCampaignProgress]> 
     */
    public class func postOutboundCampaignsProgressWithRequestBuilder(body body: [String]? = nil) -> RequestBuilder<[ININCampaignProgress]> {
        let path = "/api/v2/outbound/campaigns/progress"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ININCampaignProgress]>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a contact List.
     
     - parameter body: (body) ContactList (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundContactlists(body body: ININContactList? = nil, completion: ((data: ININContactList?, error: ErrorType?) -> Void)) {
        postOutboundContactlistsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a contact List.
     - POST /api/v2/outbound/contactlists
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "importStatus" : {
    "completedRecords" : 123456789,
    "totalRecords" : 123456789,
    "failureReason" : "aeiou",
    "state" : "aeiou",
    "percentComplete" : 123
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "previewModeColumnName" : "aeiou",
  "columnNames" : [ "aeiou" ],
  "phoneColumns" : [ {
    "type" : "aeiou",
    "columnName" : "aeiou",
    "callableTimeColumn" : "aeiou"
  } ],
  "size" : 123456789,
  "previewModeAcceptedValues" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter body: (body) ContactList (optional)

     - returns: RequestBuilder<ININContactList> 
     */
    public class func postOutboundContactlistsWithRequestBuilder(body body: ININContactList? = nil) -> RequestBuilder<ININContactList> {
        let path = "/api/v2/outbound/contactlists"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININContactList>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add contacts to a contact list.
     
     - parameter contactListId: (path) Contact List ID 
     - parameter body: (body) Contact (optional)
     - parameter priority: (query) Contact priority.  True means the contact(s) will go to the beginning of the list, false means at the end. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundContactlistsContactlistIdContacts(contactListId contactListId: String, body: [ININDialerContact]? = nil, priority: Bool? = nil, completion: ((data: ININDialerContact?, error: ErrorType?) -> Void)) {
        postOutboundContactlistsContactlistIdContactsWithRequestBuilder(contactListId: contactListId, body: body, priority: priority).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Add contacts to a contact list.
     - POST /api/v2/outbound/contactlists/{contactListId}/contacts
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "callable" : true,
  "data" : {
    "key" : "{}"
  },
  "callRecords" : {
    "key" : {
      "lastResult" : "aeiou",
      "lastAttempt" : "2000-01-23T04:56:07.000+0000"
    }
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "contactListId" : "aeiou",
  "id" : "aeiou",
  "phoneNumberStatus" : {
    "key" : {
      "callable" : true
    }
  }
}}]
     
     - parameter contactListId: (path) Contact List ID 
     - parameter body: (body) Contact (optional)
     - parameter priority: (query) Contact priority.  True means the contact(s) will go to the beginning of the list, false means at the end. (optional)

     - returns: RequestBuilder<ININDialerContact> 
     */
    public class func postOutboundContactlistsContactlistIdContactsWithRequestBuilder(contactListId contactListId: String, body: [ININDialerContact]? = nil, priority: Bool? = nil) -> RequestBuilder<ININDialerContact> {
        var path = "/api/v2/outbound/contactlists/{contactListId}/contacts"
        path = path.stringByReplacingOccurrencesOfString("{contactListId}", withString: "\(contactListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDialerContact>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Initiate the export of a contact list.
     
     - parameter contactListId: (path) ContactList ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundContactlistsContactlistIdExport(contactListId contactListId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        postOutboundContactlistsContactlistIdExportWithRequestBuilder(contactListId: contactListId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Initiate the export of a contact list.
     - POST /api/v2/outbound/contactlists/{contactListId}/export
     - Returns 200 if received OK.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter contactListId: (path) ContactList ID 

     - returns: RequestBuilder<String> 
     */
    public class func postOutboundContactlistsContactlistIdExportWithRequestBuilder(contactListId contactListId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/contactlists/{contactListId}/export"
        path = path.stringByReplacingOccurrencesOfString("{contactListId}", withString: "\(contactListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add phone numbers to a Dialer DNC list.
     
     - parameter conversationId: (path) Conversation ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundConversationsConversationIdDnc(conversationId conversationId: String, completion: ((error: ErrorType?) -> Void)) {
        postOutboundConversationsConversationIdDncWithRequestBuilder(conversationId: conversationId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Add phone numbers to a Dialer DNC list.
     - POST /api/v2/outbound/conversations/{conversationId}/dnc
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter conversationId: (path) Conversation ID 

     - returns: RequestBuilder<Void> 
     */
    public class func postOutboundConversationsConversationIdDncWithRequestBuilder(conversationId conversationId: String) -> RequestBuilder<Void> {
        var path = "/api/v2/outbound/conversations/{conversationId}/dnc"
        path = path.stringByReplacingOccurrencesOfString("{conversationId}", withString: "\(conversationId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create dialer DNC list
     
     - parameter body: (body) DncList (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundDnclists(body body: ININDncList? = nil, completion: ((data: ININDncList?, error: ErrorType?) -> Void)) {
        postOutboundDnclistsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create dialer DNC list
     - POST /api/v2/outbound/dnclists
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "importStatus" : {
    "completedRecords" : 123456789,
    "totalRecords" : 123456789,
    "failureReason" : "aeiou",
    "state" : "aeiou",
    "percentComplete" : 123
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "size" : 123456789,
  "phoneNumberColumns" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter body: (body) DncList (optional)

     - returns: RequestBuilder<ININDncList> 
     */
    public class func postOutboundDnclistsWithRequestBuilder(body body: ININDncList? = nil) -> RequestBuilder<ININDncList> {
        let path = "/api/v2/outbound/dnclists"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDncList>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Initiate the export of a dnc list.
     
     - parameter dncListId: (path) DncList ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundDnclistsDnclistIdExport(dncListId dncListId: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        postOutboundDnclistsDnclistIdExportWithRequestBuilder(dncListId: dncListId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Initiate the export of a dnc list.
     - POST /api/v2/outbound/dnclists/{dncListId}/export
     - Returns 200 if received OK.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter dncListId: (path) DncList ID 

     - returns: RequestBuilder<String> 
     */
    public class func postOutboundDnclistsDnclistIdExportWithRequestBuilder(dncListId dncListId: String) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/dnclists/{dncListId}/export"
        path = path.stringByReplacingOccurrencesOfString("{dncListId}", withString: "\(dncListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add phone numbers to a Dialer DNC list.
     
     - parameter dncListId: (path) DncList ID 
     - parameter body: (body) DNC Phone Numbers (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundDnclistsDnclistIdPhonenumbers(dncListId dncListId: String, body: [String]? = nil, completion: ((error: ErrorType?) -> Void)) {
        postOutboundDnclistsDnclistIdPhonenumbersWithRequestBuilder(dncListId: dncListId, body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Add phone numbers to a Dialer DNC list.
     - POST /api/v2/outbound/dnclists/{dncListId}/phonenumbers
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     
     - parameter dncListId: (path) DncList ID 
     - parameter body: (body) DNC Phone Numbers (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func postOutboundDnclistsDnclistIdPhonenumbersWithRequestBuilder(dncListId dncListId: String, body: [String]? = nil) -> RequestBuilder<Void> {
        var path = "/api/v2/outbound/dnclists/{dncListId}/phonenumbers"
        path = path.stringByReplacingOccurrencesOfString("{dncListId}", withString: "\(dncListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a Dialer Call Analysis Response Set.
     
     - parameter body: (body) RuleSet (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundRulesets(body body: ININRuleSet? = nil, completion: ((data: ININRuleSet?, error: ErrorType?) -> Void)) {
        postOutboundRulesetsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a Dialer Call Analysis Response Set.
     - POST /api/v2/outbound/rulesets
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "contactList" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "rules" : [ {
    "name" : "aeiou",
    "id" : "aeiou",
    "category" : "aeiou",
    "conditions" : [ {
      "codes" : [ "aeiou" ],
      "valueType" : "aeiou",
      "attributeName" : "aeiou",
      "type" : "aeiou",
      "inverted" : true,
      "value" : "aeiou",
      "operator" : "aeiou"
    } ],
    "actions" : [ {
      "actionTypeName" : "aeiou",
      "updateOption" : "aeiou",
      "type" : "aeiou",
      "properties" : {
        "key" : "aeiou"
      }
    } ],
    "order" : 123
  } ],
  "id" : "aeiou",
  "version" : 123,
  "queue" : ""
}}]
     
     - parameter body: (body) RuleSet (optional)

     - returns: RequestBuilder<ININRuleSet> 
     */
    public class func postOutboundRulesetsWithRequestBuilder(body body: ININRuleSet? = nil) -> RequestBuilder<ININRuleSet> {
        let path = "/api/v2/outbound/rulesets"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININRuleSet>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a new campaign sequence.
     
     - parameter body: (body) Organization (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postOutboundSequences(body body: ININCampaignSequence? = nil, completion: ((data: ININCampaignSequence?, error: ErrorType?) -> Void)) {
        postOutboundSequencesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a new campaign sequence.
     - POST /api/v2/outbound/sequences
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "currentCampaign" : 123,
  "stopMessage" : "aeiou",
  "campaigns" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "repeat" : true,
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123,
  "status" : "aeiou"
}}]
     
     - parameter body: (body) Organization (optional)

     - returns: RequestBuilder<ININCampaignSequence> 
     */
    public class func postOutboundSequencesWithRequestBuilder(body body: ININCampaignSequence? = nil) -> RequestBuilder<ININCampaignSequence> {
        let path = "/api/v2/outbound/sequences"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaignSequence>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update callable time set
     
     - parameter callableTimeSetId: (path) Callable Time Set ID 
     - parameter body: (body) DialerCallableTimeSet (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundCallabletimesetsCallabletimesetId(callableTimeSetId callableTimeSetId: String, body: ININCallableTimeSet? = nil, completion: ((data: ININCallableTimeSet?, error: ErrorType?) -> Void)) {
        putOutboundCallabletimesetsCallabletimesetIdWithRequestBuilder(callableTimeSetId: callableTimeSetId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update callable time set
     - PUT /api/v2/outbound/callabletimesets/{callableTimeSetId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "callableTimes" : [ {
    "timeZoneId" : "Africa/Abidjan",
    "timeSlots" : [ {
      "startTime" : "08:00:00",
      "stopTime" : "16:59:59",
      "day" : 1
    } ]
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter callableTimeSetId: (path) Callable Time Set ID 
     - parameter body: (body) DialerCallableTimeSet (optional)

     - returns: RequestBuilder<ININCallableTimeSet> 
     */
    public class func putOutboundCallabletimesetsCallabletimesetIdWithRequestBuilder(callableTimeSetId callableTimeSetId: String, body: ININCallableTimeSet? = nil) -> RequestBuilder<ININCallableTimeSet> {
        var path = "/api/v2/outbound/callabletimesets/{callableTimeSetId}"
        path = path.stringByReplacingOccurrencesOfString("{callableTimeSetId}", withString: "\(callableTimeSetId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCallableTimeSet>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a dialer call analysis response set.
     
     - parameter callAnalysisSetId: (path) Call Analysis Response Set ID 
     - parameter body: (body) ResponseSet (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundCallanalysisresponsesetsCallanalysissetId(callAnalysisSetId callAnalysisSetId: String, body: ININResponseSet? = nil, completion: ((data: ININResponseSet?, error: ErrorType?) -> Void)) {
        putOutboundCallanalysisresponsesetsCallanalysissetIdWithRequestBuilder(callAnalysisSetId: callAnalysisSetId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a dialer call analysis response set.
     - PUT /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "responses" : {
    "key" : {
      "data" : "aeiou",
      "reactionType" : "aeiou",
      "name" : "aeiou"
    }
  },
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter callAnalysisSetId: (path) Call Analysis Response Set ID 
     - parameter body: (body) ResponseSet (optional)

     - returns: RequestBuilder<ININResponseSet> 
     */
    public class func putOutboundCallanalysisresponsesetsCallanalysissetIdWithRequestBuilder(callAnalysisSetId callAnalysisSetId: String, body: ININResponseSet? = nil) -> RequestBuilder<ININResponseSet> {
        var path = "/api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}"
        path = path.stringByReplacingOccurrencesOfString("{callAnalysisSetId}", withString: "\(callAnalysisSetId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININResponseSet>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a campaign.
     
     - parameter campaignId: (path) Campaign ID 
     - parameter body: (body) Campaign (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundCampaignsCampaignId(campaignId campaignId: String, body: ININCampaign? = nil, completion: ((data: ININCampaign?, error: ErrorType?) -> Void)) {
        putOutboundCampaignsCampaignIdWithRequestBuilder(campaignId: campaignId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a campaign.
     - PUT /api/v2/outbound/campaigns/{campaignId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "callableTimeSet" : "",
  "phoneColumns" : [ {
    "type" : "aeiou",
    "columnName" : "aeiou"
  } ],
  "edgeGroup" : "",
  "callAnalysisResponseSet" : "",
  "previewTimeOutSeconds" : 123456789,
  "dncLists" : [ "" ],
  "callerName" : "aeiou",
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "campaignStatus" : "aeiou",
  "outboundLineCount" : 123,
  "id" : "aeiou",
  "dialingMode" : "aeiou",
  "callerAddress" : "(555) 555-5555",
  "skipPreviewDisabled" : true,
  "selfUri" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "version" : 123,
  "ruleSets" : [ "" ],
  "script" : "",
  "contactSort" : {
    "fieldName" : "aeiou",
    "numeric" : true,
    "direction" : "aeiou"
  },
  "contactList" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "abandonRate" : 1.3579000000000001069366817318950779736042022705078125,
  "name" : "aeiou",
  "queue" : "",
  "errors" : [ {
    "details" : "aeiou",
    "error" : "aeiou"
  } ]
}}]
     
     - parameter campaignId: (path) Campaign ID 
     - parameter body: (body) Campaign (optional)

     - returns: RequestBuilder<ININCampaign> 
     */
    public class func putOutboundCampaignsCampaignIdWithRequestBuilder(campaignId campaignId: String, body: ININCampaign? = nil) -> RequestBuilder<ININCampaign> {
        var path = "/api/v2/outbound/campaigns/{campaignId}"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaign>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Send notification that an agent's state changed 
     
     - parameter campaignId: (path) Campaign ID 
     - parameter userId: (path) Agent&#39;s user ID 
     - parameter body: (body) agent (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundCampaignsCampaignIdAgentsUserId(campaignId campaignId: String, userId: String, body: ININAgent? = nil, completion: ((data: String?, error: ErrorType?) -> Void)) {
        putOutboundCampaignsCampaignIdAgentsUserIdWithRequestBuilder(campaignId: campaignId, userId: userId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Send notification that an agent's state changed 
     - PUT /api/v2/outbound/campaigns/{campaignId}/agents/{userId}
     - New agent state.
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter campaignId: (path) Campaign ID 
     - parameter userId: (path) Agent&#39;s user ID 
     - parameter body: (body) agent (optional)

     - returns: RequestBuilder<String> 
     */
    public class func putOutboundCampaignsCampaignIdAgentsUserIdWithRequestBuilder(campaignId campaignId: String, userId: String, body: ININAgent? = nil) -> RequestBuilder<String> {
        var path = "/api/v2/outbound/campaigns/{campaignId}/agents/{userId}"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{userId}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a contact list.
     
     - parameter contactListId: (path) ContactList ID 
     - parameter body: (body) ContactList (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundContactlistsContactlistId(contactListId contactListId: String, body: ININContactList? = nil, completion: ((data: ININContactList?, error: ErrorType?) -> Void)) {
        putOutboundContactlistsContactlistIdWithRequestBuilder(contactListId: contactListId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a contact list.
     - PUT /api/v2/outbound/contactlists/{contactListId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "importStatus" : {
    "completedRecords" : 123456789,
    "totalRecords" : 123456789,
    "failureReason" : "aeiou",
    "state" : "aeiou",
    "percentComplete" : 123
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "previewModeColumnName" : "aeiou",
  "columnNames" : [ "aeiou" ],
  "phoneColumns" : [ {
    "type" : "aeiou",
    "columnName" : "aeiou",
    "callableTimeColumn" : "aeiou"
  } ],
  "size" : 123456789,
  "previewModeAcceptedValues" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter contactListId: (path) ContactList ID 
     - parameter body: (body) ContactList (optional)

     - returns: RequestBuilder<ININContactList> 
     */
    public class func putOutboundContactlistsContactlistIdWithRequestBuilder(contactListId contactListId: String, body: ININContactList? = nil) -> RequestBuilder<ININContactList> {
        var path = "/api/v2/outbound/contactlists/{contactListId}"
        path = path.stringByReplacingOccurrencesOfString("{contactListId}", withString: "\(contactListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININContactList>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a contact.
     
     - parameter contactListId: (path) Contact List ID 
     - parameter contactId: (path) Contact ID 
     - parameter body: (body) Contact (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundContactlistsContactlistIdContactsContactId(contactListId contactListId: String, contactId: String, body: ININDialerContact? = nil, completion: ((data: ININDialerContact?, error: ErrorType?) -> Void)) {
        putOutboundContactlistsContactlistIdContactsContactIdWithRequestBuilder(contactListId: contactListId, contactId: contactId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a contact.
     - PUT /api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "callable" : true,
  "data" : {
    "key" : "{}"
  },
  "callRecords" : {
    "key" : {
      "lastResult" : "aeiou",
      "lastAttempt" : "2000-01-23T04:56:07.000+0000"
    }
  },
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "contactListId" : "aeiou",
  "id" : "aeiou",
  "phoneNumberStatus" : {
    "key" : {
      "callable" : true
    }
  }
}}]
     
     - parameter contactListId: (path) Contact List ID 
     - parameter contactId: (path) Contact ID 
     - parameter body: (body) Contact (optional)

     - returns: RequestBuilder<ININDialerContact> 
     */
    public class func putOutboundContactlistsContactlistIdContactsContactIdWithRequestBuilder(contactListId contactListId: String, contactId: String, body: ININDialerContact? = nil) -> RequestBuilder<ININDialerContact> {
        var path = "/api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}"
        path = path.stringByReplacingOccurrencesOfString("{contactListId}", withString: "\(contactListId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{contactId}", withString: "\(contactId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDialerContact>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update dialer DNC list
     
     - parameter dncListId: (path) DncList ID 
     - parameter body: (body) DncList (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundDnclistsDnclistId(dncListId dncListId: String, body: ININDncList? = nil, completion: ((data: ININDncList?, error: ErrorType?) -> Void)) {
        putOutboundDnclistsDnclistIdWithRequestBuilder(dncListId: dncListId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update dialer DNC list
     - PUT /api/v2/outbound/dnclists/{dncListId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "importStatus" : {
    "completedRecords" : 123456789,
    "totalRecords" : 123456789,
    "failureReason" : "aeiou",
    "state" : "aeiou",
    "percentComplete" : 123
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "size" : 123456789,
  "phoneNumberColumns" : [ "aeiou" ],
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter dncListId: (path) DncList ID 
     - parameter body: (body) DncList (optional)

     - returns: RequestBuilder<ININDncList> 
     */
    public class func putOutboundDnclistsDnclistIdWithRequestBuilder(dncListId dncListId: String, body: ININDncList? = nil) -> RequestBuilder<ININDncList> {
        var path = "/api/v2/outbound/dnclists/{dncListId}"
        path = path.stringByReplacingOccurrencesOfString("{dncListId}", withString: "\(dncListId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININDncList>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a RuleSet.
     
     - parameter ruleSetId: (path) Rule Set ID 
     - parameter body: (body) RuleSet (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundRulesetsRulesetId(ruleSetId ruleSetId: String, body: ININRuleSet? = nil, completion: ((data: ININRuleSet?, error: ErrorType?) -> Void)) {
        putOutboundRulesetsRulesetIdWithRequestBuilder(ruleSetId: ruleSetId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a RuleSet.
     - PUT /api/v2/outbound/rulesets/{ruleSetId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "contactList" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "rules" : [ {
    "name" : "aeiou",
    "id" : "aeiou",
    "category" : "aeiou",
    "conditions" : [ {
      "codes" : [ "aeiou" ],
      "valueType" : "aeiou",
      "attributeName" : "aeiou",
      "type" : "aeiou",
      "inverted" : true,
      "value" : "aeiou",
      "operator" : "aeiou"
    } ],
    "actions" : [ {
      "actionTypeName" : "aeiou",
      "updateOption" : "aeiou",
      "type" : "aeiou",
      "properties" : {
        "key" : "aeiou"
      }
    } ],
    "order" : 123
  } ],
  "id" : "aeiou",
  "version" : 123,
  "queue" : ""
}}]
     
     - parameter ruleSetId: (path) Rule Set ID 
     - parameter body: (body) RuleSet (optional)

     - returns: RequestBuilder<ININRuleSet> 
     */
    public class func putOutboundRulesetsRulesetIdWithRequestBuilder(ruleSetId ruleSetId: String, body: ININRuleSet? = nil) -> RequestBuilder<ININRuleSet> {
        var path = "/api/v2/outbound/rulesets/{ruleSetId}"
        path = path.stringByReplacingOccurrencesOfString("{ruleSetId}", withString: "\(ruleSetId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININRuleSet>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a new campaign schedule.
     
     - parameter campaignId: (path) Campaign ID 
     - parameter body: (body) CampaignSchedule (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundSchedulesCampaignsCampaignId(campaignId campaignId: String, body: ININCampaignSchedule? = nil, completion: ((data: ININCampaignSchedule?, error: ErrorType?) -> Void)) {
        putOutboundSchedulesCampaignsCampaignIdWithRequestBuilder(campaignId: campaignId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a new campaign schedule.
     - PUT /api/v2/outbound/schedules/campaigns/{campaignId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "intervals" : [ {
    "start" : "aeiou",
    "end" : "aeiou"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "timeZone" : "Africa/Abidjan",
  "campaign" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter campaignId: (path) Campaign ID 
     - parameter body: (body) CampaignSchedule (optional)

     - returns: RequestBuilder<ININCampaignSchedule> 
     */
    public class func putOutboundSchedulesCampaignsCampaignIdWithRequestBuilder(campaignId campaignId: String, body: ININCampaignSchedule? = nil) -> RequestBuilder<ININCampaignSchedule> {
        var path = "/api/v2/outbound/schedules/campaigns/{campaignId}"
        path = path.stringByReplacingOccurrencesOfString("{campaignId}", withString: "\(campaignId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaignSchedule>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a new sequence schedule.
     
     - parameter sequenceId: (path) Sequence ID 
     - parameter body: (body) SequenceSchedule (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundSchedulesSequencesSequenceId(sequenceId sequenceId: String, body: ININSequenceSchedule? = nil, completion: ((data: ININSequenceSchedule?, error: ErrorType?) -> Void)) {
        putOutboundSchedulesSequencesSequenceIdWithRequestBuilder(sequenceId: sequenceId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a new sequence schedule.
     - PUT /api/v2/outbound/schedules/sequences/{sequenceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "sequence" : {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "intervals" : [ {
    "start" : "aeiou",
    "end" : "aeiou"
  } ],
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "timeZone" : "Africa/Abidjan",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter sequenceId: (path) Sequence ID 
     - parameter body: (body) SequenceSchedule (optional)

     - returns: RequestBuilder<ININSequenceSchedule> 
     */
    public class func putOutboundSchedulesSequencesSequenceIdWithRequestBuilder(sequenceId sequenceId: String, body: ININSequenceSchedule? = nil) -> RequestBuilder<ININSequenceSchedule> {
        var path = "/api/v2/outbound/schedules/sequences/{sequenceId}"
        path = path.stringByReplacingOccurrencesOfString("{sequenceId}", withString: "\(sequenceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININSequenceSchedule>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a new campaign sequence.
     
     - parameter sequenceId: (path) Campaign Sequence ID 
     - parameter body: (body) Organization (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundSequencesSequenceId(sequenceId sequenceId: String, body: ININCampaignSequence? = nil, completion: ((data: ININCampaignSequence?, error: ErrorType?) -> Void)) {
        putOutboundSequencesSequenceIdWithRequestBuilder(sequenceId: sequenceId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a new campaign sequence.
     - PUT /api/v2/outbound/sequences/{sequenceId}
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "currentCampaign" : 123,
  "stopMessage" : "aeiou",
  "campaigns" : [ {
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "repeat" : true,
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123,
  "status" : "aeiou"
}}]
     
     - parameter sequenceId: (path) Campaign Sequence ID 
     - parameter body: (body) Organization (optional)

     - returns: RequestBuilder<ININCampaignSequence> 
     */
    public class func putOutboundSequencesSequenceIdWithRequestBuilder(sequenceId sequenceId: String, body: ININCampaignSequence? = nil) -> RequestBuilder<ININCampaignSequence> {
        var path = "/api/v2/outbound/sequences/{sequenceId}"
        path = path.stringByReplacingOccurrencesOfString("{sequenceId}", withString: "\(sequenceId)", options: .LiteralSearch, range: nil)
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININCampaignSequence>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update the Dialer wrap up code mapping.
     
     - parameter body: (body) wrapUpCodeMapping (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putOutboundWrapupcodemappings(body body: ININWrapUpCodeMapping? = nil, completion: ((data: ININWrapUpCodeMapping?, error: ErrorType?) -> Void)) {
        putOutboundWrapupcodemappingsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update the Dialer wrap up code mapping.
     - PUT /api/v2/outbound/wrapupcodemappings
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "defaultSet" : [ "aeiou" ],
  "mapping" : {
    "key" : [ "aeiou" ]
  },
  "dateCreated" : "2000-01-23T04:56:07.000+0000",
  "selfUri" : "aeiou",
  "name" : "aeiou",
  "dateModified" : "2000-01-23T04:56:07.000+0000",
  "id" : "aeiou",
  "version" : 123
}}]
     
     - parameter body: (body) wrapUpCodeMapping (optional)

     - returns: RequestBuilder<ININWrapUpCodeMapping> 
     */
    public class func putOutboundWrapupcodemappingsWithRequestBuilder(body body: ININWrapUpCodeMapping? = nil) -> RequestBuilder<ININWrapUpCodeMapping> {
        let path = "/api/v2/outbound/wrapupcodemappings"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININWrapUpCodeMapping>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
