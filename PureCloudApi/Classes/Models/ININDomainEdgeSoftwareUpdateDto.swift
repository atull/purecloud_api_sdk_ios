//
// ININDomainEdgeSoftwareUpdateDto.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININDomainEdgeSoftwareUpdateDto: JSONEncodable {
    public enum ININStatus: String { 
        case None = "NONE"
        case Init = "INIT"
        case InProgress = "IN_PROGRESS"
        case Expired = "EXPIRED"
        case Exception = "EXCEPTION"
        case Aborted = "ABORTED"
        case Failed = "FAILED"
        case Succeeded = "SUCCEEDED"
        case Delete = "DELETE"
    }
    /** Version */
    public var version: ININDomainEdgeSoftwareVersionDto?
    public var maxDownloadRate: Int32?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var downloadStartTime: NSDate?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var executeStartTime: NSDate?
    /** Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var executeStopTime: NSDate?
    public var executeOnIdle: Bool?
    public var status: ININStatus?
    public var edgeUri: String?
    public var current: Bool?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["version"] = self.version?.encodeToJSON()
        nillableDictionary["maxDownloadRate"] = self.maxDownloadRate?.encodeToJSON()
        nillableDictionary["downloadStartTime"] = self.downloadStartTime?.encodeToJSON()
        nillableDictionary["executeStartTime"] = self.executeStartTime?.encodeToJSON()
        nillableDictionary["executeStopTime"] = self.executeStopTime?.encodeToJSON()
        nillableDictionary["executeOnIdle"] = self.executeOnIdle
        nillableDictionary["status"] = self.status?.rawValue
        nillableDictionary["edgeUri"] = self.edgeUri
        nillableDictionary["current"] = self.current
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
