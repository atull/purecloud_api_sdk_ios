//
// ININChatMediaParticipant.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class ININChatMediaParticipant: JSONEncodable {
    public enum ININState: String { 
        case Alerting = "ALERTING"
        case Dialing = "DIALING"
        case Contacting = "CONTACTING"
        case Offering = "OFFERING"
        case Connected = "CONNECTED"
        case Disconnected = "DISCONNECTED"
        case Terminated = "TERMINATED"
        case Converting = "CONVERTING"
        case Uploading = "UPLOADING"
        case Transmitting = "TRANSMITTING"
        case None = "NONE"
    }
    public enum ININDirection: String { 
        case Inbound = "INBOUND"
        case Outbound = "OUTBOUND"
    }
    public enum ININDisconnectType: String { 
        case Endpoint = "ENDPOINT"
        case Client = "CLIENT"
        case System = "SYSTEM"
        case Transfer = "TRANSFER"
        case TransferConference = "TRANSFER_CONFERENCE"
        case TransferConsult = "TRANSFER_CONSULT"
        case Error = "ERROR"
        case Peer = "PEER"
        case Other = "OTHER"
    }
    /** The unique participant ID. */
    public var id: String?
    /** The display friendly name of the participant. */
    public var name: String?
    /** The participant address. */
    public var address: String?
    /** The time when this participant joined the conversation. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var startTime: NSDate?
    /** The time when this participant went connected on the conversation. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var connectedTime: NSDate?
    /** The time when this participant when disconnected on the conversation. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var endTime: NSDate?
    /** The time when this participant&#39;s hold started. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var startHoldTime: NSDate?
    /** The participant&#39;s purpose.  Values can be: &#39;agent&#39;, &#39;user&#39;, &#39;customer&#39;, &#39;external&#39;, &#39;acd&#39;, &#39;ivr */
    public var purpose: String?
    /** The participant&#39;s state.  Values can be: &#39;alerting&#39;, &#39;connected&#39;, &#39;disconnected&#39;, &#39;dialing&#39;, &#39;contacting */
    public var state: ININState?
    /** The participant&#39;s direction.  Values can be: &#39;inbound&#39; or &#39;outbound&#39; */
    public var direction: ININDirection?
    /** The reason the participant was disconnected from the conversation. */
    public var disconnectType: ININDisconnectType?
    /** Value is true when the participant is on hold. */
    public var held: Bool?
    /** Value is true when the participant requires wrap-up. */
    public var wrapupRequired: Bool?
    /** The wrap-up prompt indicating the type of wrap-up to be performed. */
    public var wrapupPrompt: String?
    /** The PureCloud user for this participant. */
    public var user: ININUriReference?
    /** The PureCloud queue for this participant. */
    public var queue: ININUriReference?
    /** A list of ad-hoc attributes for the participant. */
    public var attributes: [String:String]?
    /** If the conversation ends in error, contains additional error details. */
    public var errorInfo: ININErrorBody?
    /** The Engage script that should be used by this participant. */
    public var script: ININUriReference?
    /** The amount of time the participant has to complete wrap-up. */
    public var wrapupTimeoutMs: Int32?
    /** Value is true when the participant has skipped wrap-up. */
    public var wrapupSkipped: Bool?
    /** The ID of the chat room. */
    public var roomId: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["address"] = self.address
        nillableDictionary["startTime"] = self.startTime?.encodeToJSON()
        nillableDictionary["connectedTime"] = self.connectedTime?.encodeToJSON()
        nillableDictionary["endTime"] = self.endTime?.encodeToJSON()
        nillableDictionary["startHoldTime"] = self.startHoldTime?.encodeToJSON()
        nillableDictionary["purpose"] = self.purpose
        nillableDictionary["state"] = self.state?.rawValue
        nillableDictionary["direction"] = self.direction?.rawValue
        nillableDictionary["disconnectType"] = self.disconnectType?.rawValue
        nillableDictionary["held"] = self.held
        nillableDictionary["wrapupRequired"] = self.wrapupRequired
        nillableDictionary["wrapupPrompt"] = self.wrapupPrompt
        nillableDictionary["user"] = self.user?.encodeToJSON()
        nillableDictionary["queue"] = self.queue?.encodeToJSON()
        nillableDictionary["attributes"] = self.attributes?.encodeToJSON()
        nillableDictionary["errorInfo"] = self.errorInfo?.encodeToJSON()
        nillableDictionary["script"] = self.script?.encodeToJSON()
        nillableDictionary["wrapupTimeoutMs"] = self.wrapupTimeoutMs?.encodeToJSON()
        nillableDictionary["wrapupSkipped"] = self.wrapupSkipped
        nillableDictionary["roomId"] = self.roomId
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
