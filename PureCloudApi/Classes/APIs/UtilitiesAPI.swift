//
// UtilitiesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class UtilitiesAPI: APIBase {
    /**
     Get the current system date/time
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDate(completion: ((data: ININServerDate?, error: ErrorType?) -> Void)) {
        getDateWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the current system date/time
     - GET /api/v2/date
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "currentDate" : "2000-01-23T04:56:07.000+0000"
}}]

     - returns: RequestBuilder<ININServerDate> 
     */
    public class func getDateWithRequestBuilder() -> RequestBuilder<ININServerDate> {
        let path = "/api/v2/date"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININServerDate>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get time zones list
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTimezones(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil, completion: ((data: ININTimeZoneEntityListing?, error: ErrorType?) -> Void)) {
        getTimezonesWithRequestBuilder(pageSize: pageSize, pageNumber: pageNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get time zones list
     - GET /api/v2/timezones
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "total" : 123456789,
  "pageCount" : 123,
  "pageNumber" : 123,
  "entities" : [ {
    "offset" : 123456789,
    "selfUri" : "aeiou",
    "name" : "aeiou",
    "id" : "aeiou"
  } ],
  "firstUri" : "aeiou",
  "selfUri" : "aeiou",
  "lastUri" : "aeiou",
  "pageSize" : 123,
  "previousUri" : "aeiou",
  "nextUri" : "aeiou"
}}]
     
     - parameter pageSize: (query) Page size (optional, default to 25)
     - parameter pageNumber: (query) Page number (optional, default to 1)

     - returns: RequestBuilder<ININTimeZoneEntityListing> 
     */
    public class func getTimezonesWithRequestBuilder(pageSize pageSize: Int32? = nil, pageNumber: Int32? = nil) -> RequestBuilder<ININTimeZoneEntityListing> {
        let path = "/api/v2/timezones"
        let URLString = PureCloudApiClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pageSize": pageSize?.encodeToJSON(),
            "pageNumber": pageNumber?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININTimeZoneEntityListing>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Returns the information about an X509 PEM encoded certificate or certificate chain.
     
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postCertificateDetails(body body: ININCertificate? = nil, completion: ((data: ININParsedCertificate?, error: ErrorType?) -> Void)) {
        postCertificateDetailsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Returns the information about an X509 PEM encoded certificate or certificate chain.
     - POST /api/v2/certificate/details
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud Auth
     - examples: [{contentType=application/json, example={
  "certificateDetails" : [ {
    "valid" : true,
    "signatureValid" : true,
    "expired" : true,
    "subject" : "aeiou",
    "issueDate" : "2000-01-23T04:56:07.000+0000",
    "issuer" : "aeiou",
    "expirationDate" : "2000-01-23T04:56:07.000+0000"
  } ]
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ININParsedCertificate> 
     */
    public class func postCertificateDetailsWithRequestBuilder(body body: ININCertificate? = nil) -> RequestBuilder<ININParsedCertificate> {
        let path = "/api/v2/certificate/details"
        let URLString = PureCloudApiClientAPI.basePath + path
        let parameters = body?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ININParsedCertificate>.Type = PureCloudApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
